<?xml version="1.0" encoding="UTF-8"?>
<metadata_list  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="HydraCoreMeta.xsd">
<metadata  subsystem_name="bt" subsystem_id="1" version="27894" variant="0" build_date_time="2023-12-11 21:51:11" >

<enum_def enum_name="key_type_t">
  <enum_entry enum_label="Key_Type_Unit_Key" enum_value="0" enum_description="Unit Key Type (KA)"/>
  <enum_entry enum_label="Key_Type_Combination_Key" enum_value="1" enum_description="Combination key (KAB)"/>
</enum_def>

<enum_def enum_name="enableretranserror_t">
  <enum_entry enum_label="EnableRetransError_FALSE" enum_value="0" enum_description="Disables PER statistic gathering during TX retransmissions."/>
  <enum_entry enum_label="EnableRetransError_TRUE" enum_value="1" enum_description="Enables PER statistic gathering for TX retransmissions."/>
</enum_def>

<enum_def enum_name="bcaperslot_t">
  <enum_entry enum_label="BCAPerSlot_SINGLE_BCA" enum_value="1" enum_description="Run a single BCA per slot."/>
  <enum_entry enum_label="BCAPerSlot_DUAL_BCA" enum_value="2" enum_description="Run two BCAs per slot."/>
  <enum_entry enum_label="BCAPerSlot_ENH_BCA" enum_value="3" enum_description="Enhanced BCA."/>
</enum_def>

<enum_def enum_name="lp_scancontrol_t">
  <enum_entry enum_label="LP_scanControl_LP_SCAN_DISABLED" enum_value="0" enum_description="Disable Low Power Scans"/>
  <enum_entry enum_label="LP_scanControl_LP_SCAN_ENABLED" enum_value="1" enum_description="Enable Low Power Scans"/>
</enum_def>

<enum_def enum_name="phy_err_ctrl_auto_abort_t">
  <enum_entry enum_label="Phy_Err_Ctrl_Auto_Abort_DISABLE" enum_value="0" enum_description="Disable Auto Abort"/>
  <enum_entry enum_label="Phy_Err_Ctrl_Auto_Abort_ENABLE" enum_value="1" enum_description="Enable auto abort always"/>
  <enum_entry enum_label="Phy_Err_Ctrl_Auto_Abort_RFCOMM" enum_value="2" enum_description="Enable auto abort only for RFCOMM"/>
</enum_def>

<enum_def enum_name="ram_shutdown_control_t">
  <enum_entry enum_label="Ram_Shutdown_Control_Disable" enum_value="0" enum_description="Disable Ram Shutdown feature."/>
  <enum_entry enum_label="Ram_Shutdown_Control_Enable" enum_value="1" enum_description="Enable Ram Shutdown feature."/>
</enum_def>

<enum_def enum_name="hs_host_mode_t">
  <enum_entry enum_label="HS_Host_Mode_HS_MODE_DISABLE" enum_value="0" enum_description="LE High Speed Disabled."/>
  <enum_entry enum_label="HS_Host_Mode_HS_MODE_2M" enum_value="1" enum_description="Substitute LE High Speed for LE2M"/>
  <enum_entry enum_label="HS_Host_Mode_HS_MODE_1M2M" enum_value="2" enum_description="Substitute LE High Speed for both LE1M and LE2M"/>
  <enum_entry enum_label="HS_Host_Mode_HS_MODE_QHS" enum_value="3" enum_description="Host is QHS aware"/>
  <enum_entry enum_label="HS_Host_Mode_HS_MODE_DISABLE_QLL" enum_value="4" enum_description="QLL disabled"/>
</enum_def>

<enum_def enum_name="uart_baud_rate_t">
  <enum_entry enum_label="UART_Baud_Rate_Baud_115200" enum_value="0" enum_description="115200 baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_57600" enum_value="1" enum_description="57600 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_38400" enum_value="2" enum_description="38400 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_19200" enum_value="3" enum_description="19200 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_9600" enum_value="4" enum_description="9600 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_230400" enum_value="5" enum_description="230400 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_250000" enum_value="6" enum_description="250000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_460800" enum_value="7" enum_description="460800 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_500000" enum_value="8" enum_description="500000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_720000" enum_value="9" enum_description="720000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_921600" enum_value="10" enum_description="921600 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_1000000" enum_value="11" enum_description="1000000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_125000" enum_value="12" enum_description="125000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_2000000" enum_value="13" enum_description="2000000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_3000000" enum_value="14" enum_description="3000000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_4000000" enum_value="15" enum_description="4000000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_1600000" enum_value="16" enum_description="1600000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_3200000" enum_value="17" enum_description="3200000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_3500000" enum_value="18" enum_description="3500000 Baud"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_Fixed_Last" enum_value="18" enum_description="It indicates to the Last of Fixed Baud List. Any fixed baudrate to add should update Baud_Fixed_Last as well."/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_Auto" enum_value="254" enum_description="Enables AutoBaud (SiW4000 and later processors only)"/>
  <enum_entry enum_label="UART_Baud_Rate_Baud_UserDefined" enum_value="255" enum_description="User defined Baud"/>
</enum_def>

<enum_def enum_name="sleepen_t">
  <enum_entry enum_label="SleepEn_Disable" enum_value="0" enum_description="Disable sleep"/>
  <enum_entry enum_label="SleepEn_Enable" enum_value="1" enum_description="Enable sleep"/>
</enum_def>

<enum_def enum_name="txpsleepmode_t">
  <enum_entry enum_label="TxpSleepMode_DISABLE" enum_value="0" enum_description="Transport layer sleep is disabled"/>
  <enum_entry enum_label="TxpSleepMode_UART_SIBS" enum_value="1" enum_description="Softeware in-band sleep mode for Uart interface"/>
  <enum_entry enum_label="TxpSleepMode_USB_SUSPEND" enum_value="2" enum_description="USB suspend resume sleep mode for USB interface"/>
  <enum_entry enum_label="TxpSleepMode_GPIO_OOB" enum_value="3" enum_description="Hardware Out-of-band sleep mode for both UART and USB interface"/>
  <enum_entry enum_label="TxpSleepMode_UART_HWIBS" enum_value="4" enum_description="Hardware in-band sleep mode for Uart interface"/>
  <enum_entry enum_label="TxpSleepMode_MIXED_GPIO_SIBS" enum_value="5" enum_description="Mixed GPIO HostWake Pin and Softeware in-band sleep mode for Uart interface. HostWake Pin will continue outputing Square Wave while sending SIBS Wake signal to Host. The parameter 'Wake Retransmission Timeout' is also used as the Square Wave width. Do not suggest to set the flag 'Dynamic Wake Retransmit Timeout' in this mode."/>
</enum_def>

<enum_def enum_name="btwake_polarity_t">
  <enum_entry enum_label="BTWake_Polarity_Active_Low" enum_value="0" enum_description="Active Low"/>
  <enum_entry enum_label="BTWake_Polarity_Active_High" enum_value="1" enum_description="Active High"/>
</enum_def>

<enum_def enum_name="hostwake_polarity_t">
  <enum_entry enum_label="HostWake_Polarity_Active_Low" enum_value="0" enum_description="Active Low"/>
  <enum_entry enum_label="HostWake_Polarity_Active_High" enum_value="1" enum_description="Active High"/>
</enum_def>

<enum_def enum_name="logger_config_select_t">
  <enum_entry enum_label="Logger_Config_Select_NBLK_HCIPORT_BLKBUF" enum_value="0" enum_description="Log messages are stored in System RAM using a Block Memory buffering mechanism and sent out to the Shared HCI System UART Asynchronously by a background Context. (Calling context is not Blocked and returns before the Log messages have been sent out)"/>
  <enum_entry enum_label="Logger_Config_Select_NBLK_AUXPORT_BLKBUF" enum_value="1" enum_description="***Warning: Seperate Auxillary Uart must be present in Product for this setting to work***. Log messages are stored in System RAM using a Memory Block buffering mechanism and sent out to a dedicated Auxillary UART Asynchronously by a background Context. (Calling context is not Blocked and returns before the Log messages have been sent out)"/>
  <enum_entry enum_label="Logger_Config_Select_BLK_AUXPORT_NOBUF" enum_value="2" enum_description="***Warning: Seperate Auxillary Uart must be present in Product for this setting to work***. Log messages are sent out to the dedicated Auxillary UART Synchronously. Here the Calling context is Blocking while the Log message is being sent and returns only after the message is completely sent out."/>
  <enum_entry enum_label="Logger_Config_Select_NBLK_AUXPORT_RINGBUF" enum_value="3" enum_description="***Warning: Seperate Auxillary Uart must be present in Product for this setting to work***. Log messages are stored in System RAM using a Ring Memory buffering mechanism and sent out to dedicated Auxillary UART Asynchronously by a background Context. (Calling context is not Blocked and returns before the Log messages have been sent out)"/>
</enum_def>

<enum_def enum_name="voice_loopback_mode_t">
  <enum_entry enum_label="Voice_Loopback_Mode_OVERRIDE_DISABLE" enum_value="0" enum_description="Disables all voice loopback overrides.  Audio will be looped back or not based on the current mode of operation."/>
  <enum_entry enum_label="Voice_Loopback_Mode_LOCAL_REMOTE_AT_ACI" enum_value="1" enum_description="Local and remote loopback at the ACI layer.  Locally, the ACI copies all received audio bus data back out over the audio bus.  Remotely, the ACI sends all FromAir voice data that comes down the voice stack back up the voice stack as ToAir data."/>
  <enum_entry enum_label="Voice_Loopback_Mode_LOCAL_AT_CODEC" enum_value="2" enum_description="Local loopback near the Codec voice stack layer.  This loopback sits just below the codec layer in the voice stack.  Locally, ToAir data that has been rate-adapted to the OTA timing will get looped back as FromAir data in the next interval, rate-adapted back to the sample interface timing in the process."/>
  <enum_entry enum_label="Voice_Loopback_Mode_REMOTE_AT_CODEC" enum_value="3" enum_description="Remote loopback near the Codec voice stack layer.  This loopback sits just below the codec layer in the voice stack.  Remotely, FromAir data that has been decoded will get looped back as ToAir data in the next interval, encoding in the process."/>
  <enum_entry enum_label="Voice_Loopback_Mode_LOCAL_REMOTE_AT_CODEC" enum_value="4" enum_description="Local and remote loopback near the Codec voice stack layer.  This loopback sits just below the codec layer in the voice stack.  Locally, ToAir data that has been rate-adapted to the OTA timing will get looped back as FromAir data in the next interval, rate-adapted back to the sample interface timing in the process.  Remotely, FromAir data that has been decoded will get looped back as ToAir data in the next interval, encoding in the process."/>
  <enum_entry enum_label="Voice_Loopback_Mode_LOCAL_AT_OTA" enum_value="5" enum_description="Local loopback near the OTA voice stack layer.  This loopback sits just below the OTA interface and EDP.  Locally, ToAir data that has been encoded will get looped back as FromAir data in the next interval, decoding in the process."/>
  <enum_entry enum_label="Voice_Loopback_Mode_REMOTE_AT_OTA" enum_value="6" enum_description="Remote loopback near the OTA voice stack layer.  This loopback sits just below the OTA interface and EDP.  Remotely, FromAir data that has been processed with EDP (bitwise majority voting) will get looped back as ToAir data in the next window."/>
  <enum_entry enum_label="Voice_Loopback_Mode_LOCAL_REMOTE_AT_OTA" enum_value="7" enum_description="Local and remote loopback near the OTA voice stack layer.  This loopback sits just below the OTA interface and EDP.  Locally, ToAir data that has been encoded will get looped back as FromAir data in the next interval, decoding in the process.  Remotely, FromAir data that has been processed with EDP (bitwise majority voting) will get looped back as ToAir data in the next window."/>
  <enum_entry enum_label="Voice_Loopback_Mode_RESERVED" enum_value="8"/>
  <enum_entry enum_label="Voice_Loopback_Mode_REMOTE_AT_BB" enum_value="9" enum_description="Remote loopback at the per-slot baseband interface.  FromAir slot data will be looped back remotely in the next ToAir slot.  Also, when this mode is enabled, local loopback at the codec layer is enabled."/>
</enum_def>

<enum_def enum_name="gpio_function_t">
  <enum_entry enum_label="GPIO_Function_WL_CMD_CLK_2G" enum_value="0" enum_description="WSI 2G"/>
  <enum_entry enum_label="GPIO_Function_WL_CMD_DATA_2G" enum_value="1" enum_description="WSI 2G"/>
  <enum_entry enum_label="GPIO_Function_WL_CMD_CLK_5G" enum_value="2" enum_description="WSI 5G"/>
  <enum_entry enum_label="GPIO_Function_WL_CMD_DATA_5G" enum_value="3" enum_description="WSI 5G"/>
  <enum_entry enum_label="GPIO_Function_SBCLK" enum_value="4" enum_description="Slimbus Clock"/>
  <enum_entry enum_label="GPIO_Function_SBDATA" enum_value="5" enum_description="Slimbus Data"/>
  <enum_entry enum_label="GPIO_Function_COEX_CLK" enum_value="6" enum_description="WSI for Coex"/>
  <enum_entry enum_label="GPIO_Function_COEX_DATA" enum_value="7" enum_description="WSI for Coex"/>
  <enum_entry enum_label="GPIO_Function_COEX_RXD" enum_value="8" enum_description="LTE Coex"/>
  <enum_entry enum_label="GPIO_Function_COEX_TXD" enum_value="9" enum_description="LTE Coex"/>
  <enum_entry enum_label="GPIO_Function_CLK_OUT" enum_value="10" enum_description="Clock out for Northstar"/>
  <enum_entry enum_label="GPIO_Function_LF_CLK_IN" enum_value="11" enum_description="32KHz Sleep clock"/>
  <enum_entry enum_label="GPIO_Function_HCI_UART_TXD" enum_value="12" enum_description="HCI/UART TXD"/>
  <enum_entry enum_label="GPIO_Function_HCI_UART_RXD" enum_value="13" enum_description="HCI/UART RXD"/>
  <enum_entry enum_label="GPIO_Function_HCI_UART_RTS" enum_value="14" enum_description="HCI/UART RTS"/>
  <enum_entry enum_label="GPIO_Function_HCI_UART_CTS" enum_value="15" enum_description="HCI/UART CTS"/>
  <enum_entry enum_label="GPIO_Function_SW_CTRL" enum_value="16" enum_description="PMIC Control"/>
  <enum_entry enum_label="GPIO_Function_WP_IF" enum_value="17" enum_description="Wipower One-wire Half duplex Interface"/>
  <enum_entry enum_label="GPIO_Function_SENSOR_UART_TX" enum_value="18" enum_description="Sensor/UART TXD"/>
  <enum_entry enum_label="GPIO_Function_SENSOR_UART_RX" enum_value="19" enum_description="Sensor/UART RXD"/>
  <enum_entry enum_label="GPIO_Function_SENSOR_UART_RTS" enum_value="20" enum_description="Sensor/UART RTS"/>
  <enum_entry enum_label="GPIO_Function_SENSOR_UART_CTS" enum_value="21" enum_description="Sensor/UART CTS"/>
  <enum_entry enum_label="GPIO_Function_GPIO_A" enum_value="22" enum_description="General purpose IO"/>
  <enum_entry enum_label="GPIO_Function_GPIO_B" enum_value="23" enum_description="General purpose IO"/>
  <enum_entry enum_label="GPIO_Function_WL_BT_FEM_0" enum_value="24" enum_description="2G FEM/SOI LNA control"/>
  <enum_entry enum_label="GPIO_Function_WL_BT_FEM_1" enum_value="25" enum_description="2G FEM/SOI LNA control"/>
  <enum_entry enum_label="GPIO_Function_WL_BT_FEM_2" enum_value="26" enum_description="2G FEM/SOI LNA control"/>
  <enum_entry enum_label="GPIO_Function_WL_BT_FEM_3" enum_value="27" enum_description="2G FEM/SOI LNA control"/>
  <enum_entry enum_label="GPIO_Function_WL_BT_FEM_4" enum_value="28" enum_description="2G FEM/SOI LNA control"/>
  <enum_entry enum_label="GPIO_Function_WL_BT_FEM_5" enum_value="29" enum_description="2G FEM/SOI LNA control"/>
  <enum_entry enum_label="GPIO_Function_WL_BT_FEM_6" enum_value="30" enum_description="2G FEM/SOI LNA control"/>
  <enum_entry enum_label="GPIO_Function_WL_BT_FEM_7" enum_value="31" enum_description="2G FEM/SOI LNA control"/>
  <enum_entry enum_label="GPIO_Function_WL_BT_FEM_8" enum_value="32" enum_description="2G FEM/SOI LNA control"/>
  <enum_entry enum_label="GPIO_Function_SPTA_ACTIVE" enum_value="33" enum_description="SLAVE_COEX ACTIVE"/>
  <enum_entry enum_label="GPIO_Function_SPTA_STATUS" enum_value="34" enum_description="SLAVE_COEX STATUT"/>
  <enum_entry enum_label="GPIO_Function_SPTA_CONFX_IN" enum_value="35" enum_description="Confx from PTA controller"/>
  <enum_entry enum_label="GPIO_Function_BT_EXT_LNA_CTRL_0" enum_value="36" enum_description="BT external LNA control line 0"/>
  <enum_entry enum_label="GPIO_Function_BT_EXT_LNA_CTRL_1" enum_value="37" enum_description="BT external LNA control line 1"/>
  <enum_entry enum_label="GPIO_Function_No_Function" enum_value="255" enum_description="Enter description"/>
</enum_def>

<enum_def enum_name="stack_alloc_section_t">
  <enum_entry enum_label="STACK_ALLOC_SECTION_LOWER_HEAP" enum_value="0" enum_description="Allocate stack memory from lower heap."/>
  <enum_entry enum_label="STACK_ALLOC_SECTION_UPPER_HEAP" enum_value="1" enum_description="Allocate stack memory from upper heap."/>
</enum_def>

<enum_def enum_name="rssi_calculations_t">
  <enum_entry enum_label="RSSI_Calculations_Iris" enum_value="0" enum_description="RSSI calculations for IRIS"/>
  <enum_entry enum_label="RSSI_Calculations_Rome" enum_value="1" enum_description="RSSI calculations for Rome"/>
</enum_def>

<enum_def enum_name="psu_mode_t">
  <enum_entry enum_label="psu_mode_AUTO" enum_value="0" enum_description="This leaves the PSUs in the auto- mode where the switch between PWM and PFM happens automatically based on the current drawn"/>
  <enum_entry enum_label="psu_mode_FORCE_PWM" enum_value="1" enum_description="This indicates that the PWM mode is requested explicitly by the BTSS. This done using an RCU control line"/>
</enum_def>

<enum_def enum_name="sweep_loopback_disabled_t">
  <enum_entry enum_label="sweep_loopback_disabled_sweep_loopback_disabled_false" enum_value="0"/>
  <enum_entry enum_label="sweep_loopback_disabled_sweep_loopback_disabled_true" enum_value="1"/>
</enum_def>

<enum_def enum_name="fm_lo_t">
  <enum_entry enum_label="FM_LO_FM_OFF" enum_value="0" enum_description="Disable frequency modulation of LO"/>
  <enum_entry enum_label="FM_LO_FM_ON" enum_value="1" enum_description="Enable frequency modulation of LO"/>
</enum_def>

<enum_def enum_name="compensation_type_t">
  <enum_entry enum_label="compensation_type_use_nonlinear" enum_value="0" enum_description="Use the non-linear compensation method"/>
  <enum_entry enum_label="compensation_type_use_linear" enum_value="1" enum_description="Use linear compensation method."/>
</enum_def>

<enum_def enum_name="dac_sweep_t">
  <enum_entry enum_label="dac_sweep_single" enum_value="0" enum_description="Single DAC sweep for both AMAM and AMPM calibrations"/>
  <enum_entry enum_label="dac_sweep_separate" enum_value="1" enum_description="Separate DAC sweep for AMAM and AMPM calibrations."/>
</enum_def>

<enum_def enum_name="rx_on_state_t">
  <enum_entry enum_label="RX_ON_State_ST_NULL" enum_value="0"/>
  <enum_entry enum_label="RX_ON_State_ST_BIAS_ON" enum_value="1"/>
  <enum_entry enum_label="RX_ON_State_ST_SYNTH_ON" enum_value="2"/>
  <enum_entry enum_label="RX_ON_State_RF_TURN_ON" enum_value="3"/>
  <enum_entry enum_label="RX_ON_State_RF_ON" enum_value="4"/>
  <enum_entry enum_label="RX_ON_State_RF_TURN_OFF" enum_value="6"/>
  <enum_entry enum_label="RX_ON_State_ST_SYNTH_OFF" enum_value="7"/>
  <enum_entry enum_label="RX_ON_State_ST_BIAS_OFF" enum_value="8"/>
</enum_def>

<enum_def enum_name="rx_off_state_t">
  <enum_entry enum_label="RX_OFF_State_ST_NULL" enum_value="0"/>
  <enum_entry enum_label="RX_OFF_State_ST_BIAS_ON" enum_value="1"/>
  <enum_entry enum_label="RX_OFF_State_ST_SYNTH_ON" enum_value="2"/>
  <enum_entry enum_label="RX_OFF_State_RF_TURN_ON" enum_value="3"/>
  <enum_entry enum_label="RX_OFF_State_RF_ON" enum_value="4"/>
  <enum_entry enum_label="RX_OFF_State_RF_TURN_OFF" enum_value="5"/>
  <enum_entry enum_label="RX_OFF_State_ST_SYNTH_OFF" enum_value="6"/>
  <enum_entry enum_label="RX_OFF_State_ST_BIAS_OFF" enum_value="7"/>
</enum_def>

<enum_def enum_name="tx_on_state_t">
  <enum_entry enum_label="TX_ON_STATE_ST_NULL" enum_value="0"/>
  <enum_entry enum_label="TX_ON_STATE_ST_BIAS_ON" enum_value="1"/>
  <enum_entry enum_label="TX_ON_STATE_ST_SYNTH_ON" enum_value="2"/>
  <enum_entry enum_label="TX_ON_STATE_RF_TURN_ON" enum_value="3"/>
  <enum_entry enum_label="TX_ON_STATE_RF_ON" enum_value="4"/>
  <enum_entry enum_label="TX_ON_STATE_RF_TURN_OFF" enum_value="5"/>
  <enum_entry enum_label="TX_ON_STATE_ST_SYNTH_OFF" enum_value="6"/>
  <enum_entry enum_label="TX_ON_STATE_ST_BIAS_OFF" enum_value="7"/>
</enum_def>

<enum_def enum_name="tx_off_state_t">
  <enum_entry enum_label="TX_OFF_STATE_ST_NULL" enum_value="0"/>
  <enum_entry enum_label="TX_OFF_STATE_ST_BIAS_ON" enum_value="1"/>
  <enum_entry enum_label="TX_OFF_STATE_ST_SYNTH_ON" enum_value="2"/>
  <enum_entry enum_label="TX_OFF_STATE_RF_TURN_ON" enum_value="3"/>
  <enum_entry enum_label="TX_OFF_STATE_RF_ON" enum_value="4"/>
  <enum_entry enum_label="TX_OFF_STATE_RF_TURN_OFF" enum_value="5"/>
  <enum_entry enum_label="TX_OFF_STATE_ST_SYNTH_OFF" enum_value="6"/>
  <enum_entry enum_label="TX_OFF_STATE_ST_BIAS_OFF" enum_value="7"/>
</enum_def>

<enum_def enum_name="txrx_tx_on_state_t">
  <enum_entry enum_label="TXRX_TX_ON_STATE_ST_NULL" enum_value="0"/>
  <enum_entry enum_label="TXRX_TX_ON_STATE_ST_BIAS_ON" enum_value="1"/>
  <enum_entry enum_label="TXRX_TX_ON_STATE_ST_SYNTH_ON" enum_value="2"/>
  <enum_entry enum_label="TXRX_TX_ON_STATE_RF_TURN_ON" enum_value="3"/>
  <enum_entry enum_label="TXRX_TX_ON_STATE_RF_ON" enum_value="4"/>
  <enum_entry enum_label="TXRX_TX_ON_STATE_RF_TURN_OFF" enum_value="5"/>
  <enum_entry enum_label="TXRX_TX_ON_STATE_ST_SYNTH_OFF" enum_value="6"/>
  <enum_entry enum_label="TXRX_TX_ON_STATE_ST_BIAS_OFF" enum_value="7"/>
</enum_def>

<enum_def enum_name="txrx_tx_off_state_t">
  <enum_entry enum_label="TXRX_TX_OFF_STATE_ST_NULL" enum_value="0"/>
  <enum_entry enum_label="TXRX_TX_OFF_STATE_ST_BIAS_ON" enum_value="1"/>
  <enum_entry enum_label="TXRX_TX_OFF_STATE_ST_SYNTH_ON" enum_value="2"/>
  <enum_entry enum_label="TXRX_TX_OFF_STATE_RF_TURN_ON" enum_value="3"/>
  <enum_entry enum_label="TXRX_TX_OFF_STATE_RF_ON" enum_value="4"/>
  <enum_entry enum_label="TXRX_TX_OFF_STATE_RF_TURN_OFF" enum_value="5"/>
  <enum_entry enum_label="TXRX_TX_OFF_STATE_ST_SYNTH_OFF" enum_value="6"/>
  <enum_entry enum_label="TXRX_TX_OFF_STATE_ST_BIAS_OFF" enum_value="7"/>
</enum_def>

<enum_def enum_name="txrx_rx_on_state_t">
  <enum_entry enum_label="TXRX_RX_ON_STATE_ST_NULL" enum_value="0"/>
  <enum_entry enum_label="TXRX_RX_ON_STATE_ST_BIAS_ON" enum_value="1"/>
  <enum_entry enum_label="TXRX_RX_ON_STATE_ST_SYNTH_ON" enum_value="2"/>
  <enum_entry enum_label="TXRX_RX_ON_STATE_RF_TURN_ON" enum_value="3"/>
  <enum_entry enum_label="TXRX_RX_ON_STATE_RF_ON" enum_value="4"/>
  <enum_entry enum_label="TXRX_RX_ON_STATE_RF_TURN_OFF" enum_value="5"/>
  <enum_entry enum_label="TXRX_RX_ON_STATE_ST_SYNTH_OFF" enum_value="6"/>
  <enum_entry enum_label="TXRX_RX_ON_STATE_ST_BIAS_OFF" enum_value="7"/>
</enum_def>

<enum_def enum_name="txrx_rx_off_state_t">
  <enum_entry enum_label="TXRX_RX_OFF_STATE_ST_NULL" enum_value="0"/>
  <enum_entry enum_label="TXRX_RX_OFF_STATE_ST_BIAS_ON" enum_value="1"/>
  <enum_entry enum_label="TXRX_RX_OFF_STATE_ST_SYNTH_ON" enum_value="2"/>
  <enum_entry enum_label="TXRX_RX_OFF_STATE_RF_TURN_ON" enum_value="3"/>
  <enum_entry enum_label="TXRX_RX_OFF_STATE_RF_ON" enum_value="4"/>
  <enum_entry enum_label="TXRX_RX_OFF_STATE_RF_TURN_OFF" enum_value="5"/>
  <enum_entry enum_label="TXRX_RX_OFF_STATE_ST_SYNTH_OFF" enum_value="6"/>
  <enum_entry enum_label="TXRX_RX_OFF_STATE_ST_BIAS_OFF" enum_value="7"/>
</enum_def>

<enum_def enum_name="sco_audio_route_t">
  <enum_entry enum_label="SCO_Audio_route_SCO_AUDIO_ROUTE_PCM" enum_value="0" enum_description="Route SCO audio to PCM interface"/>
  <enum_entry enum_label="SCO_Audio_route_SCO_AUDIO_ROUTE_I2S" enum_value="1" enum_description="Route SCO audio to I2S interface"/>
  <enum_entry enum_label="SCO_Audio_route_SCO_AUDIO_ROUTE_CODEC" enum_value="2" enum_description="Route SCO audio to the internal codec"/>
  <enum_entry enum_label="SCO_Audio_route_SCO_AUDIO_ROUTE_DONT_USE" enum_value="3" enum_description="Dont use the SCO audio routing feature"/>
</enum_def>

<enum_def enum_name="hclk_scaling_t">
  <enum_entry enum_label="HCLK_Scaling_DIV1" enum_value="0" enum_description="Disable HCLK_ungated scaling"/>
  <enum_entry enum_label="HCLK_Scaling_DIV4" enum_value="1"/>
  <enum_entry enum_label="HCLK_Scaling_DIV8" enum_value="2"/>
  <enum_entry enum_label="HCLK_Scaling_DIV16" enum_value="3"/>
  <enum_entry enum_label="HCLK_Scaling_DIV32" enum_value="4"/>
  <enum_entry enum_label="HCLK_Scaling_DIV64" enum_value="5"/>
  <enum_entry enum_label="HCLK_Scaling_CLK_OFF" enum_value="6"/>
</enum_def>

<enum_def enum_name="ext_hclk_scaling_t">
  <enum_entry enum_label="EXT_HCLK_Scaling_DIV1" enum_value="0" enum_description="Disable ext hclk scaling"/>
  <enum_entry enum_label="EXT_HCLK_Scaling_DIV4" enum_value="1"/>
  <enum_entry enum_label="EXT_HCLK_Scaling_DIV8" enum_value="2"/>
  <enum_entry enum_label="EXT_HCLK_Scaling_DIV16" enum_value="3"/>
  <enum_entry enum_label="EXT_HCLK_Scaling_DIV32" enum_value="4"/>
  <enum_entry enum_label="EXT_HCLK_Scaling_DIV64" enum_value="5"/>
  <enum_entry enum_label="EXT_HCLK_Scaling_CLK_OFF" enum_value="6"/>
</enum_def>

<enum_def enum_name="phy_preference_t">
  <enum_entry enum_label="Phy_Preference_Any_Phy" enum_value="0" enum_description="If more than one Phys are allowed and auto phy is disabled then stick with the current phy"/>
  <enum_entry enum_label="Phy_Preference_Fastest_Phy" enum_value="1" enum_description="If more than one Phys are allowed and auto phy is disabled then use the fastes available"/>
  <enum_entry enum_label="Phy_Preference_Robust_Phy" enum_value="2" enum_description="If more than one PHY is allowed and auto phy is disabled then use the most robust among them"/>
</enum_def>

<enum_def enum_name="iso_host_mode_t">
  <enum_entry enum_label="ISO_Host_Mode_QHS_disabled" enum_value="0" enum_description="QHS is disabled."/>
  <enum_entry enum_label="ISO_Host_Mode_QHS_2M" enum_value="1" enum_description="Substitute LE2M to QHS"/>
  <enum_entry enum_label="ISO_Host_Mode_QHS_1M2M" enum_value="2" enum_description="Substitute LE1M/LE2M to QHS."/>
  <enum_entry enum_label="ISO_Host_Mode_QHS_Host" enum_value="3" enum_description="Host aware of QHS used."/>
  <enum_entry enum_label="ISO_Host_Mode_QLL_Disabled" enum_value="4" enum_description="QLL is disabled"/>
</enum_def>

<enum_def enum_name="default_qhs_phy_for_iso_t">
  <enum_entry enum_label="Default_QHS_phy_for_ISO_QHS_2M" enum_value="0" enum_description="QHS-P 2M"/>
  <enum_entry enum_label="Default_QHS_phy_for_ISO_QHS_3M" enum_value="1" enum_description="QHS-P 3M"/>
  <enum_entry enum_label="Default_QHS_phy_for_ISO_QHS_4M" enum_value="2" enum_description="QHS-P 4M"/>
  <enum_entry enum_label="Default_QHS_phy_for_ISO_QHS_5M" enum_value="3" enum_description="QHS-P 5M"/>
  <enum_entry enum_label="Default_QHS_phy_for_ISO_QHS_6M" enum_value="4" enum_description="QHS-P 6M"/>
</enum_def>

<enum_def enum_name="iso_audio_route_t">
  <enum_entry enum_label="ISO_Audio_route_ISO_AUDIO_ROUTE_PCM" enum_value="0" enum_description="Route SCO audio to PCM interface"/>
  <enum_entry enum_label="ISO_Audio_route_ISO_AUDIO_ROUTE_I2S" enum_value="1" enum_description="Route SCO audio to I2S interface"/>
  <enum_entry enum_label="ISO_Audio_route_ISO_AUDIO_ROUTE_CODEC" enum_value="2" enum_description="Route SCO audio to the internal codec"/>
  <enum_entry enum_label="ISO_Audio_route_ISO_AUDIO_ROUTE_DONT_USE" enum_value="3" enum_description="Dont use the SCO audio routing feature"/>
</enum_def>

<enum_def enum_name="coding_t">
  <enum_entry enum_label="Coding_AUDIO_ROUTER_CODING_MU_LAW" enum_value="0"/>
  <enum_entry enum_label="Coding_AUDIO_ROUTER_CODING_A_LAW" enum_value="1"/>
  <enum_entry enum_label="Coding_AUDIO_ROUTER_CODING_LINEAR" enum_value="2"/>
  <enum_entry enum_label="Coding_AUDIO_ROUTER_CODING_MSBC" enum_value="3"/>
  <enum_entry enum_label="Coding_AUDIO_ROUTER_CODING_LC3" enum_value="4"/>
</enum_def>

<enum_def enum_name="edr_algorithm_choice_t">
  <enum_entry enum_label="EDR_Algorithm_Choice_Packet_error_rate_method" enum_value="0" enum_description="Use the packet error rate algorithm when evaluating EDR packets for CQDDR."/>
  <enum_entry enum_label="EDR_Algorithm_Choice_Weighted_bit_error_rate_method" enum_value="1" enum_description="Use the weighted bit error rate rate algorithm when evaluating EDR packets for CQDDR."/>
</enum_def>

<enum_def enum_name="inquiry_t">
  <enum_entry enum_label="inquiry_BETTER_SENSITIVITY" enum_value="0"/>
  <enum_entry enum_label="inquiry_LOWER_CURRENT" enum_value="1"/>
</enum_def>

<enum_def enum_name="inq_scan_t">
  <enum_entry enum_label="inq_scan_BETTER_SENSITIVITY" enum_value="0"/>
  <enum_entry enum_label="inq_scan_LOWER_CURRENT" enum_value="1"/>
</enum_def>

<enum_def enum_name="adverts_t">
  <enum_entry enum_label="adverts_BETTER_SENSITIVITY" enum_value="0"/>
  <enum_entry enum_label="adverts_LOWER_CURRENT" enum_value="1"/>
</enum_def>

<enum_def enum_name="le_scan_t">
  <enum_entry enum_label="le_scan_BETTER_SENSITIVITY" enum_value="0"/>
  <enum_entry enum_label="le_scan_LOWER_CURRENT" enum_value="1"/>
</enum_def>

<enum_def enum_name="adc_mode_t">
  <enum_entry enum_label="adc_mode_fs0" enum_value="0"/>
  <enum_entry enum_label="adc_mode_fs1" enum_value="1"/>
</enum_def>

<enum_def enum_name="wbm_routing_t">
  <enum_entry enum_label="WBM_routing_Disable" enum_value="0" enum_description="Disable WBM routing"/>
  <enum_entry enum_label="WBM_routing_Enable" enum_value="1" enum_description="Enable WBM routing"/>
</enum_def>

<struct_def struct_name="supported_features_mask_byte0_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="3-slot packets">
    <label>3-slot packets</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit0: 3-slot packets
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="5-Slot packets">
    <label>5-Slot packets</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit1: 5-Slot packets
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Encryption">
    <label>Encryption</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit2: Encryption
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Slot Offset">
    <label>Slot Offset</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit3: Slot Offset
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Timing Accuracy">
    <label>Timing Accuracy</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit4: Timing Accuracy
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Switch">
    <label>Switch</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit5: Switch
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Hold Mode">
    <label>Hold Mode</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit6: Hold Mode
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Sniff Mode">
    <label>Sniff Mode</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit7: Sniff Mode
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="supported_features_mask_byte1_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Park Mode">
    <label>Park Mode</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit0: Park Mode
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="RSSI">
    <label>RSSI</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit1: RSSI
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="CQDDR">
    <label>CQDDR</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit2: Channel Quality Driven Data Rate
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="SCO Link">
    <label>SCO Link</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit3: SCO Link
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="HV2 Packets">
    <label>HV2 Packets</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit4: HV2 Packets
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="HV3 Packets">
    <label>HV3 Packets</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit5: HV3 Packets
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="u-Law log">
    <label>u-Law log</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit6: u-Law log
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="A-Law log">
    <label>A-Law log</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit7: A-Law log
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="supported_features_mask_byte2_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="CVSD synchronous data">
    <label>CVSD synchronous data</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit0: CVSD synchronous data
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Paging parameter negotiation">
    <label>Paging parameter negotiation</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit1: Paging parameter negotiation
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Power Control">
    <label>Power Control</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit2: Power Control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Transperant SCO Data">
    <label>Transperant SCO Data</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit3: Transperant SCO Data
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="3" name="Flow Control Lag">
    <label>Flow Control Lag</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
    <description_user>
Bit4_6: 3 Bits representing the Flow Control Lag
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Broadcast Encryption">
    <label>Broadcast Encryption</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit7: Broadcast Encryption
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="supported_features_mask_byte3_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Reserved">
    <label>Reserved</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit 0 : Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="EDR ACL DQPSK mode">
    <label>EDR ACL DQPSK mode</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit1: EDR ACL DQPSK mode
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="EDR ACL 8 DPSK mode">
    <label>EDR ACL 8 DPSK mode</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit2: EDR ACL 8 DPSK mode
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Enhanced inquiry scan">
    <label>Enhanced inquiry scan</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit3: Enhanced inquiry scan
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Interlaced inquiry scan">
    <label>Interlaced inquiry scan</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit4: Interlaced inquiry scan
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Interlaced page scan">
    <label>Interlaced page scan</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit5: Interlaced page scan
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="RSSI with inquiry results">
    <label>RSSI with inquiry results</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit6: RSSI with inquiry results
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="ESCO EV3 packets">
    <label>ESCO EV3 packets</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit7: Extended SCO link (EV3 packets)
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="supported_features_mask_byte4_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="EV4 packets">
    <label>EV4 packets</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit0: EV4 packets
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="EV5 packets">
    <label>EV5 packets</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit1: EV5 packets
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Reserved">
    <label>Reserved</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit2: Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="AFH capable slave">
    <label>AFH capable slave</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit3: AFH capable slave
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="AFH classification slave">
    <label>AFH classification slave</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit4: AFH classification slave
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="BREDR Not Supported">
    <label>BREDR Not Supported</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit5: BR/EDR Not Supported
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LE Supported">
    <label>LE Supported</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit6: LE Supported
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="EDR ACL 3 slot">
    <label>EDR ACL 3 slot</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit7: EDR ACL 3 slot
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="supported_features_mask_byte5_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="EDR ACL 5 slot">
    <label>EDR ACL 5 slot</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit0: EDR ACL 5 slot
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Sniff Subrating">
    <label>Sniff Subrating</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit1: Sniff Subrating capable
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Pause Encryption">
    <label>Pause Encryption</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit 2: Encryption Pause Resume Feature Supported
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="AFH capable master">
    <label>AFH capable master</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit3: AFH capable master
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="AFH classification master">
    <label>AFH classification master</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit4: AFH classification master
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="EDR eSCO DQPSM mode">
    <label>EDR eSCO DQPSM mode</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit5: EDR eSCO DQPSM mode
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="EDR eSCO 8 DPSK mode">
    <label>EDR eSCO 8 DPSK mode</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit6: EDR eSCO 8 DPSK mode
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="EDR eSCO 3 slot">
    <label>EDR eSCO 3 slot</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit7: EDR eSCO 3 slot
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="supported_features_mask_byte6_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Extended Inquiry Response">
    <label>Extended Inquiry Response</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit0: Extended Inquiry Response
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Simultaneous LE and BREDR">
    <label>Simultaneous LE and BREDR</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit1: Simultaneous LE and BR/EDR Capable (Controller)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Reserved0">
    <label>Reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit2 : Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Simple Pairing">
    <label>Simple Pairing</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit3:Simple Pairing
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Encapsulated PDU">
    <label>Encapsulated PDU</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit4: Encapsulated PDU
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Erroneous Data">
    <label>Erroneous Data</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit5: Erroneous Data
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="QOS PBF">
    <label>QOS PBF</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit6:QOS Packet Boundary Flag
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit7: Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="supported_features_mask_byte7_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Link Supervision Timeout Changed Event">
    <label>Link Supervision Timeout Changed Event</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit0: Link Supervision Timeout Changed Event
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Inquiry Tx Power Level">
    <label>Inquiry Tx Power Level</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Enhanced Power Control">
    <label>Enhanced Power Control</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit2: Enhanced Power Control feature
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Bluetooth_Supported_Features_Mask_Reserved_3">
    <label>Bluetooth_Supported_Features_Mask_Reserved_3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Bluetooth_Supported_Features_Mask_Reserved_4">
    <label>Bluetooth_Supported_Features_Mask_Reserved_4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Bluetooth_Supported_Features_Mask_Reserved_5">
    <label>Bluetooth_Supported_Features_Mask_Reserved_5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Bluetooth_Supported_Features_Mask_Reserved_6">
    <label>Bluetooth_Supported_Features_Mask_Reserved_6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended features">
    <label>Extended features</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit7: Extended features
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="extended_feature_mask_page_2_byte_0_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Connectionless slave Broadcast Master Role">
    <label>Connectionless slave Broadcast Master Role</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Connectionless slave Broadcast Slave Role">
    <label>Connectionless slave Broadcast Slave Role</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Synchronization Train">
    <label>Synchronization Train</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Synchronization Scan">
    <label>Synchronization Scan</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Inquiry Response Notification Event">
    <label>Inquiry Response Notification Event</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Generalized interlaced scan">
    <label>Generalized interlaced scan</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Coarse Clock Adjustment">
    <label>Coarse Clock Adjustment</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended_feature_mask_Page_2_Reserved7">
    <label>Extended_feature_mask_Page_2_Reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="extended_feature_mask_page_2_byte_1_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Secure Connections Controller">
    <label>Secure Connections Controller</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Ping">
    <label>Ping</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Slot Availability Mask">
    <label>Slot Availability Mask</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Train Nudging">
    <label>Train Nudging</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Extended_feature_mask_Page_2_Reserved4">
    <label>Extended_feature_mask_Page_2_Reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Extended_feature_mask_Page_2_Reserved5">
    <label>Extended_feature_mask_Page_2_Reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Extended_feature_mask_Page_2_Reserved6">
    <label>Extended_feature_mask_Page_2_Reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended_feature_mask_Page_2_Reserved7">
    <label>Extended_feature_mask_Page_2_Reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="extended_feature_mask_page_2_byte_2_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Extended_feature_mask_Page_2_Reserved0">
    <label>Extended_feature_mask_Page_2_Reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Extended_feature_mask_Page_2_Reserved1">
    <label>Extended_feature_mask_Page_2_Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Extended_feature_mask_Page_2_Reserved2">
    <label>Extended_feature_mask_Page_2_Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Extended_feature_mask_Page_2_Reserved3">
    <label>Extended_feature_mask_Page_2_Reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Extended_feature_mask_Page_2_Reserved4">
    <label>Extended_feature_mask_Page_2_Reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Extended_feature_mask_Page_2_Reserved5">
    <label>Extended_feature_mask_Page_2_Reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Extended_feature_mask_Page_2_Reserved6">
    <label>Extended_feature_mask_Page_2_Reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended_feature_mask_Page_2_Reserved7">
    <label>Extended_feature_mask_Page_2_Reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="extended_feature_mask_page_2_byte_3_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Extended_feature_mask_Page_2_Reserved0">
    <label>Extended_feature_mask_Page_2_Reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Extended_feature_mask_Page_2_Reserved1">
    <label>Extended_feature_mask_Page_2_Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Extended_feature_mask_Page_2_Reserved2">
    <label>Extended_feature_mask_Page_2_Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Extended_feature_mask_Page_2_Reserved3">
    <label>Extended_feature_mask_Page_2_Reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Extended_feature_mask_Page_2_Reserved4">
    <label>Extended_feature_mask_Page_2_Reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Extended_feature_mask_Page_2_Reserved5">
    <label>Extended_feature_mask_Page_2_Reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Extended_feature_mask_Page_2_Reserved6">
    <label>Extended_feature_mask_Page_2_Reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended_feature_mask_Page_2_Reserved7">
    <label>Extended_feature_mask_Page_2_Reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="extended_feature_mask_page_2_byte_4_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Extended_feature_mask_Page_2_Reserved0">
    <label>Extended_feature_mask_Page_2_Reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Extended_feature_mask_Page_2_Reserved1">
    <label>Extended_feature_mask_Page_2_Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Extended_feature_mask_Page_2_Reserved2">
    <label>Extended_feature_mask_Page_2_Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Extended_feature_mask_Page_2_Reserved3">
    <label>Extended_feature_mask_Page_2_Reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Extended_feature_mask_Page_2_Reserved4">
    <label>Extended_feature_mask_Page_2_Reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Extended_feature_mask_Page_2_Reserved5">
    <label>Extended_feature_mask_Page_2_Reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Extended_feature_mask_Page_2_Reserved6">
    <label>Extended_feature_mask_Page_2_Reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended_feature_mask_Page_2_Reserved7">
    <label>Extended_feature_mask_Page_2_Reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="extended_feature_mask_page_2_byte_5_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Extended_feature_mask_Page_2_Reserved0">
    <label>Extended_feature_mask_Page_2_Reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Extended_feature_mask_Page_2_Reserved1">
    <label>Extended_feature_mask_Page_2_Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Extended_feature_mask_Page_2_Reserved2">
    <label>Extended_feature_mask_Page_2_Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Extended_feature_mask_Page_2_Reserved3">
    <label>Extended_feature_mask_Page_2_Reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Extended_feature_mask_Page_2_Reserved4">
    <label>Extended_feature_mask_Page_2_Reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Extended_feature_mask_Page_2_Reserved5">
    <label>Extended_feature_mask_Page_2_Reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Extended_feature_mask_Page_2_Reserved6">
    <label>Extended_feature_mask_Page_2_Reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended_feature_mask_Page_2_Reserved7">
    <label>Extended_feature_mask_Page_2_Reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="extended_feature_mask_page_2_byte_6_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Extended_feature_mask_Page_2_Reserved0">
    <label>Extended_feature_mask_Page_2_Reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Extended_feature_mask_Page_2_Reserved1">
    <label>Extended_feature_mask_Page_2_Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Extended_feature_mask_Page_2_Reserved2">
    <label>Extended_feature_mask_Page_2_Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Extended_feature_mask_Page_2_Reserved3">
    <label>Extended_feature_mask_Page_2_Reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Extended_feature_mask_Page_2_Reserved4">
    <label>Extended_feature_mask_Page_2_Reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Extended_feature_mask_Page_2_Reserved5">
    <label>Extended_feature_mask_Page_2_Reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Extended_feature_mask_Page_2_Reserved6">
    <label>Extended_feature_mask_Page_2_Reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended_feature_mask_Page_2_Reserved7">
    <label>Extended_feature_mask_Page_2_Reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="extended_feature_mask_page_2_byte_7_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Extended_feature_mask_Page_2_Reserved0">
    <label>Extended_feature_mask_Page_2_Reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Extended_feature_mask_Page_2_Reserved1">
    <label>Extended_feature_mask_Page_2_Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Extended_feature_mask_Page_2_Reserved2">
    <label>Extended_feature_mask_Page_2_Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Extended_feature_mask_Page_2_Reserved3">
    <label>Extended_feature_mask_Page_2_Reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Extended_feature_mask_Page_2_Reserved4">
    <label>Extended_feature_mask_Page_2_Reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Extended_feature_mask_Page_2_Reserved5">
    <label>Extended_feature_mask_Page_2_Reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Extended_feature_mask_Page_2_Reserved6">
    <label>Extended_feature_mask_Page_2_Reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended_feature_mask_Page_2_Reserved7">
    <label>Extended_feature_mask_Page_2_Reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="afh_params_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="ForceChanAssessment">
    <label>ForceChanAssessment</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit0: Set this bit to preempt ACL data and instead force a single channel assessment period when the first master connection is established.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="PCModeChanAssessment">
    <label>PCModeChanAssessment</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit1: Set this bit to enable PC Mode Channel Assessment.  Clear this bit to enable Cell Phone Mode Channel Assessment.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="le_supported_features_mask_byte_0_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Encryption">
    <label>Encryption</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Encryption Supported
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Conn_Param_Req">
    <label>Conn_Param_Req</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Connection Parameters Request Procedure
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Ext_Rej_Ind">
    <label>Ext_Rej_Ind</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Extended Reject Indication
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Slave_Init_Exch">
    <label>Slave_Init_Exch</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Slave-initiated Features Exchange
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Ping">
    <label>Ping</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Ping
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Data Length Extension">
    <label>Data Length Extension</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Data Packet Length Extension
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LL Privacy">
    <label>LL Privacy</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Privacy for Scanner and Advertiser.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended Scanner Filter Policies">
    <label>Extended Scanner Filter Policies</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Extended Scanner Filter Policies
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_supported_features_mask_byte_1_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="2 Mbps PHY">
    <label>2 Mbps PHY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE 2Ms/s Physical Data Rate
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Stable TX Modulation Index">
    <label>Stable TX Modulation Index</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Controller has a Stable TX Modulation Index
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Stable RX Modulation Index">
    <label>Stable RX Modulation Index</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Controller has a Stable RX Modulation Index
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Coded PHY">
    <label>Coded PHY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Coded PHY (125Kbps/500Kbps) Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Extended Advertising">
    <label>Extended Advertising</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Advertising Extension Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Periodic Advertising">
    <label>Periodic Advertising</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Advertising Extension Support for Periodic advertising
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Channel Selection Algo 2">
    <label>Channel Selection Algo 2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Support for LE channel selection algorithm 2
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Power Class 1">
    <label>Power Class 1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Support for LE Power Class 1 feature.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_supported_features_mask_byte_2_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Minimum Channels Procedure">
    <label>Minimum Channels Procedure</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Support for minimum number of used channels procedure.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Conn CTE Request">
    <label>Conn CTE Request</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Connection CTE Request supported
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Conn CTE Response">
    <label>Conn CTE Response</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Connection CTE Response supported
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Connless CTE Tx">
    <label>Connless CTE Tx</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Connectionless CTE Tx supported
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Connless CTE Rx">
    <label>Connless CTE Rx</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Connectionless CTE Rx supported
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="AntSw CTE Tx">
    <label>AntSw CTE Tx</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Antenna Switching During CTE Tx supported
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="AntSw CTE Rx">
    <label>AntSw CTE Rx</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Antenna Switching During CTE Rx supported
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Recv CTE">
    <label>Recv CTE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Receiving Constant Tone Extensions
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_supported_features_mask_byte_3_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="LE PAST Sender">
    <label>LE PAST Sender</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE PAST packet Tx support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="LE PAST Recipient">
    <label>LE PAST Recipient</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE PAST packet Rx support.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="LE SCA Update">
    <label>LE SCA Update</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Sleep Clock Accuracy Communication Support.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="LE Remote Public Key Validation">
    <label>LE Remote Public Key Validation</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Remote Public Key Validation Support.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="LE CIS Master">
    <label>LE CIS Master</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Support LE ISO CIS Master role or not.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="LE CIS Slave">
    <label>LE CIS Slave</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Support LE ISO CIS Slave role or not.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LE BIS Master">
    <label>LE BIS Master</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Support LE ISO BIS Master role or not. aka. ISO Broadcast Tx.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="LE BIS Slave">
    <label>LE BIS Slave</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Support LE ISO BIS Slave role or not.  aka. ISO Broadcast Rx.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_supported_features_mask_byte_4_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="LE_Supported_Features_Reserved_0">
    <label>LE_Supported_Features_Reserved_0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
This bit is reserved for LE_ISO_HOST_SUPPORT controlled by host. It can not overwrite the bit setting in controller.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="LE Power Control Request">
    <label>LE Power Control Request</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Power Control Request
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="LE Power Change Indication">
    <label>LE Power Change Indication</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Power Change Indication
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="LE Path Loss Monitoring">
    <label>LE Path Loss Monitoring</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Path Loss Monitoring
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="LE Periodic ADI">
    <label>LE Periodic ADI</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Periodic ADI enable
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="LE Connection Subrating">
    <label>LE Connection Subrating</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Enhanced Connection Update feature
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LE_Supported_Features_Reserved_6">
    <label>LE_Supported_Features_Reserved_6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="LE_Channel_Classification">
    <label>LE_Channel_Classification</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Channel Classification Feature
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_supported_features_mask_byte_5_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="LE_Supported_Features_Reserved_0">
    <label>LE_Supported_Features_Reserved_0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="LE_Supported_Features_Reserved_1">
    <label>LE_Supported_Features_Reserved_1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="LE_Supported_Features_Reserved_2">
    <label>LE_Supported_Features_Reserved_2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="LE_Supported_Features_Reserved_3">
    <label>LE_Supported_Features_Reserved_3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="LE_Supported_Features_Reserved_4">
    <label>LE_Supported_Features_Reserved_4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="LE_Supported_Features_Reserved_5">
    <label>LE_Supported_Features_Reserved_5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LE_Supported_Features_Reserved_6">
    <label>LE_Supported_Features_Reserved_6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="LE_Supported_Features_Reserved_7">
    <label>LE_Supported_Features_Reserved_7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_supported_features_mask_byte_6_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="LE_Supported_Features_Reserved_0">
    <label>LE_Supported_Features_Reserved_0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="LE_Supported_Features_Reserved_1">
    <label>LE_Supported_Features_Reserved_1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="LE_Supported_Features_Reserved_2">
    <label>LE_Supported_Features_Reserved_2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="LE_Supported_Features_Reserved_3">
    <label>LE_Supported_Features_Reserved_3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="LE_Supported_Features_Reserved_4">
    <label>LE_Supported_Features_Reserved_4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="LE_Supported_Features_Reserved_5">
    <label>LE_Supported_Features_Reserved_5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LE_Supported_Features_Reserved_6">
    <label>LE_Supported_Features_Reserved_6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="LE_Supported_Features_Reserved_7">
    <label>LE_Supported_Features_Reserved_7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_supported_features_mask_byte_7_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="LE_Supported_Features_Reserved_0">
    <label>LE_Supported_Features_Reserved_0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="LE_Supported_Features_Reserved_1">
    <label>LE_Supported_Features_Reserved_1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="LE_Supported_Features_Reserved_2">
    <label>LE_Supported_Features_Reserved_2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="LE_Supported_Features_Reserved_3">
    <label>LE_Supported_Features_Reserved_3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="LE_Supported_Features_Reserved_4">
    <label>LE_Supported_Features_Reserved_4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="LE_Supported_Features_Reserved_5">
    <label>LE_Supported_Features_Reserved_5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LE_Supported_Features_Reserved_6">
    <label>LE_Supported_Features_Reserved_6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="LE_Supported_Features_Reserved_7">
    <label>LE_Supported_Features_Reserved_7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="bt_local_features_control_local_feature_enable_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="L2CAP Payload Flow Control Enabled">
    <label>L2CAP Payload Flow Control Enabled</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
1 - Enabled, 0 - Disabled
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="ACL Automatic Flush">
    <label>ACL Automatic Flush</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Automatic Flush processing requires time tags associated with each HCI ACL First Packet of a Higher Layer message. This utilizes 4 bytes of the tx buffer size allocated in Tag 71. The HCI Read Buffer Size Command ACL data packet length will be 4 bytes less when this feature is enabled. This control disables automatic flush processing and the need to time tag HCI ACL packets.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Crypto Scatter Gather Enable Fallback">
    <label>Crypto Scatter Gather Enable Fallback</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0: Enables the Crypto Scatter Gather new HW implementation. 1: Enables the Legacy Crypto Scatter Gather implementation.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Controller Secure Connections">
    <label>Controller Secure Connections</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
This flag is mapped to Extended Feature mask of BT 4.1 Controller Secure Connections bit.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="EnableRSSIUpdate">
    <label>EnableRSSIUpdate</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Setting this BIT will change the RSSI update mechanism as mentioend below
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Cache Remote Features">
    <label>Cache Remote Features</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
The feature to Cache Remote device Version and feature information.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Scanner Backoff Disabled">
    <label>Scanner Backoff Disabled</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Debug variable to allow disabling of LE scanner back-off algorithm
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Brownout Detect">
    <label>Brownout Detect</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enables or disables the brownout detector.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="low_power_scan_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="LP_scanControl">
    <label>LP_scanControl</label>
    <type>lp_scancontrol_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="LP_schedulePreSlotCount">
    <label>LP_schedulePreSlotCount</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
The number of preslots to count prior to the follow on full power scan.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="LP_extendFollowScan">
    <label>LP_extendFollowScan</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Number of slots to extend the follow on scan.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Pad Byte">
    <label>Pad Byte</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Pad to byte align following data
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="LP_sniffMin">
    <label>LP_sniffMin</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Normal power scans will be run unless the sniff interval is greater than LP_sniffMin.  Units are in slots.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="LP_scanIntervalMin">
    <label>LP_scanIntervalMin</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Normal power scans will be run unless the interval between page scans is greater than LP_scanIntervalMin.  Units are in slots.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="forward_rate_adaptation_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="FRA_WEIGHTING">
    <label>FRA_WEIGHTING</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
The weighting given to repeats of ARQN 0s or 1s.  Value stored in Q15.  Default is 1/8.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FRA_HIGH_THRESH">
    <label>FRA_HIGH_THRESH</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
The threshold that must be crossed to move from prohibiting 3DH packets to allowing 3DH packets.  Number is held in Q15 format.  Default is 0.9.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="FRA_LOW_THRESH">
    <label>FRA_LOW_THRESH</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
The threshold that must be crossed from allowing 3DH packets to prohibiting 3DH packets.  The number is held in Q15 format.  Default is 0.4.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="FRA_MAX_RETRANS">
    <label>FRA_MAX_RETRANS</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
The max number of repeated ARQNs that are allowed.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="FRA_ENABLED">
    <label>FRA_ENABLED</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Tag indicates whether the FRA feature is enabled or not.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="acl_rx_phyerror_control_rec_included_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Rec Included">
    <label>Rec Included</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
If 1, override Modem register setting with the data included in this record.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="acl_rx_phyerror_control_phy_err_ctrl_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Phy Error Det Enable">
    <label>Phy Error Det Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
PHY Error Detector Enable 0: DISABLE (Disable PHY Error Detector) 1: ENABLE (Enable PHY Error Detector)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="2" name="Payload Header Len">
    <label>Payload Header Len</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
Use this parameter to select the duration of the beginning portion of the payload to place more weight 0x0: EIGHT_US (8us) 0x1: US (16us) 0x2: TWENTYFOUR_US (24us) 0x3: THIRTYTWO_US (32us)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="5" name="Payload Header Weight">
    <label>Payload Header Weight</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>31</range_max>
    <description_user>
Use this parameter to set the weight that is applied during the payload_header_length
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="bt_local_features_control_low_latency_reconnect_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Enable">
    <label>Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable LLR Trigger and Trigger Scan.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="bt_local_features_control_le_local_feature_control_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="PHY_OPTION_125K">
    <label>PHY_OPTION_125K</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Allow Coded Phy Option 125K
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="PHY_OPTION_500K">
    <label>PHY_OPTION_500K</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Allow Coded Phy Option 500K
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="AdvA_Pri_W_Aux">
    <label>AdvA_Pri_W_Aux</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Send AdvA on non coded primary advertising channels when auxiliary packet is present. Valid for Non-Connectable and Non-Scannable only.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="TargetA_Pri_W_Aux">
    <label>TargetA_Pri_W_Aux</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Send TargetA on non coded primary advertising channels when auxiliary packet is present. Valid for Non-Connectable and Non-Scannable only.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="PERIODIC_ADV_CHMU">
    <label>PERIODIC_ADV_CHMU</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable/Disable Periodic Advertisements Channel Map Update
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="le_scan_control_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="LE Scan Min Interval">
    <label>LE Scan Min Interval</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
LE Scan Minimun interval for bandwidth control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="LE Scan Max Ratio">
    <label>LE Scan Max Ratio</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>100</range_max>
    <description_user>
Maximum Ratio for LE Scan
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Filler_3">
    <label>Filler_3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
For byte-alignment
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="advm_ext_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Max_Conditions">
    <label>Max_Conditions</label>
    <type>uint8</type>
    <range_min>1</range_min>
    <range_max>255</range_max>
    <description_user>
Max number of conditions for ADVM LE advertisement monitoring
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Max_Mon_Adv">
    <label>Max_Mon_Adv</label>
    <type>uint8</type>
    <range_min>10</range_min>
    <range_max>255</range_max>
    <description_user>
Max number of devices which can be active in ADVM LE advertisement monitoring
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Max_RSSI_Handle">
    <label>Max_RSSI_Handle</label>
    <type>uint8</type>
    <range_min>5</range_min>
    <range_max>255</range_max>
    <description_user>
Max number of connection handles for ADVM rssi monitoring
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Filler">
    <label>Filler</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Filler for byte alignment
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="power_consumption_of_packet_types_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="sleep">
    <label>sleep</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Power consumption when sleep. Note the unit is uw since sleep mode consumes very minimal power.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="144" name="TX">
    <label>TX</label>
    <type>uint8</type>
    <array_length_min>18</array_length_min>
    <array_length_max>18</array_length_max>
    <is_array>1</is_array>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="144" name="RX">
    <label>RX</label>
    <type>uint8</type>
    <array_length_min>18</array_length_min>
    <array_length_max>18</array_length_max>
    <is_array>1</is_array>
  </structure_element>

  <structure_element lsb_bit_position="304" bit_width="8" name="idle">
    <label>idle</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Power consumption when idle (in mw)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="312" bit_width="8" name="RxActive">
    <label>RxActive</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
RxActive is RX window is open while not receiving any packets (in mw).
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_iso_control_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Allow Early Exit">
    <label>Allow Early Exit</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
AllowEarlyExit
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Allow Immediate Exit">
    <label>Allow Immediate Exit</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
AllowImmediateExit
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Use Host Packing">
    <label>Use Host Packing</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Set to allow host set packing, otherwise, controller uses preferred value by its own.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Pref CIG Packing">
    <label>Pref CIG Packing</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Prepferred CIG packing, 0 for sequential, 1 for interleaved.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Pref BIG Packing">
    <label>Pref BIG Packing</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Prepferred BIG packing, 0 for sequential, 1 for interleaved.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Adapt BW Mismatch">
    <label>Adapt BW Mismatch</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Switch to control if enable support of SDU BW and PDU BW is different configuration.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="CONV_FORCE_TUNE_NSE">
    <label>CONV_FORCE_TUNE_NSE</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Param_Conv: force to tune NSE if set.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="AutoGen HCI TX">
    <label>AutoGen HCI TX</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
When enabled, a timer is used to generate TX SDUs and insert them in the HCI FromHost queue at the SDU interval.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="1" name="Nearest Start SDU">
    <label>Nearest Start SDU</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Set to indicate mapping the first SDU from source to the nearest/first PDU in the coming ISO event, otherwise it's the furthest SDU in next event. BIG(M) only for now.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="9" bit_width="1" name="SAME_CIS_MAX_MIN_OFFSET">
    <label>SAME_CIS_MAX_MIN_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
if set 1, the cis max and min offset in the cis request will be the same
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="12" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="13" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="14" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="15" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="reserved_feature_reserved_feature_mask_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="RSSI_NOISE_ENABLE_BIT">
    <label>RSSI_NOISE_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="HID_EMULATION_ENABLE_BIT">
    <label>HID_EMULATION_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="LE_RSSI_FILTERING_ENABLE_BIT">
    <label>LE_RSSI_FILTERING_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="LE_SCAN_FILTERING_ENABLE_BIT">
    <label>LE_SCAN_FILTERING_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="LE_ENHANCED_PRIVACY_ENABLE_BIT">
    <label>LE_ENHANCED_PRIVACY_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="WOBT_ENABLE_BIT">
    <label>WOBT_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="SET_TRANSMIT_POWER_ENABLE_BIT">
    <label>SET_TRANSMIT_POWER_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="1" name="DYNAMIC_POWER_CONTROL_ENABLE_BIT">
    <label>DYNAMIC_POWER_CONTROL_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="9" bit_width="1" name="SET_VENDOR_SPEC_EVENT_MASK_ENABLE_BIT">
    <label>SET_VENDOR_SPEC_EVENT_MASK_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="TRANSMIT_POWER_CHANGED_EVENT_ENABLE_BIT">
    <label>TRANSMIT_POWER_CHANGED_EVENT_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="1" name="AUTO_RESUME_VIA_SIMULATE_REMOTE_WAKE_ENABLE_BIT">
    <label>AUTO_RESUME_VIA_SIMULATE_REMOTE_WAKE_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="12" bit_width="1" name="LAST_KNOWN_ABS_RSSI_BEFORE_DISCONNECT_EVENT_ENABLE_BIT">
    <label>LAST_KNOWN_ABS_RSSI_BEFORE_DISCONNECT_EVENT_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="13" bit_width="1" name="USE_STANDARD_HCI_STORE_PATCH_RADIO_SYSCFG_VERSION_ENABLE_BIT">
    <label>USE_STANDARD_HCI_STORE_PATCH_RADIO_SYSCFG_VERSION_ENABLE_BIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="14" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="15" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="17" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="18" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="19" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="20" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="21" bit_width="1" name="reserved8">
    <label>reserved8</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="22" bit_width="1" name="reserved9">
    <label>reserved9</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="23" bit_width="1" name="reserved10">
    <label>reserved10</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="1" name="reserved11">
    <label>reserved11</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="25" bit_width="1" name="reserved12">
    <label>reserved12</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="26" bit_width="1" name="reserved13">
    <label>reserved13</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="27" bit_width="1" name="reserved14">
    <label>reserved14</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="28" bit_width="1" name="reserved15">
    <label>reserved15</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="29" bit_width="1" name="reserved16">
    <label>reserved16</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="30" bit_width="1" name="reserved17">
    <label>reserved17</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="31" bit_width="1" name="reserved18">
    <label>reserved18</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="le_connection_control_link_layer_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Send_Feature_Req">
    <label>Send_Feature_Req</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Send Feature Request during connection setup.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Send_Length_Req">
    <label>Send_Length_Req</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Initiate length negotiation during connection setup.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Send_Phy_Req">
    <label>Send_Phy_Req</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Initiate phy negotiation during connection setup.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Auto_Update_Offset">
    <label>Auto_Update_Offset</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Automatically check the connection offset at connection establishment and request an update if necessary (Slave-Only).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Asymmetric PHY Enable">
    <label>Asymmetric PHY Enable</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable support for Asymmetric PHY Rates.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Send_Chan_Report_Req">
    <label>Send_Chan_Report_Req</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Send LL_CHANNEL_REPORTING_IND to enable Channel Classification
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="9" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="12" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="13" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="14" bit_width="1" name="reserved8">
    <label>reserved8</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="15" bit_width="1" name="reserved9">
    <label>reserved9</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="phy_auto_selection_phy_sel_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Enable">
    <label>Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
PHY Auto Selection Algorithm Global Enable
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_control_qlmp_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="qlmp feature enable">
    <label>qlmp feature enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
QLMP feature enable/disable
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte0_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Split ACL">
    <label>Split ACL</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Split ACL support.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="TWS eSCO">
    <label>TWS eSCO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
TWS eSCO support.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="eSCO DTX">
    <label>eSCO DTX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
eSCO DTX support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Higher Layer Channel Message">
    <label>Higher Layer Channel Message</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Higher Layer Channel Message support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="QHS-P2">
    <label>QHS-P2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
BR/EDR Packet Emulation Mode including QHS-P2 packet support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="QHS-P3">
    <label>QHS-P3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
QHS-P3 packet support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="QHS-P4">
    <label>QHS-P4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
QHS-P4 packet support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="QHS-P5">
    <label>QHS-P5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
QHS-P5 packet support
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte1_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="QHS-P6">
    <label>QHS-P6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
QHS-P6 packet support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Real Time Soft Combining">
    <label>Real Time Soft Combining</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Real Time Soft Combining
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="eSCO without MIC">
    <label>eSCO without MIC</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
QHS Classic Mode eSCO packets without MIC
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Separate ACL and eSCO Nonces">
    <label>Separate ACL and eSCO Nonces</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
QHS Classic Mode Separate ACL and eSCO Nonces
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="ACL Mirroring">
    <label>ACL Mirroring</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
ACL Mirroring
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="eSCO Mirroring">
    <label>eSCO Mirroring</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
eSCO Mirroring
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Non DM1 Encapsulated Payload">
    <label>Non DM1 Encapsulated Payload</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Non DM1 Encapsulated Payload
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte2_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="ACL Handover">
    <label>ACL Handover</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
ACL Handover
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="eSCO Handover">
    <label>eSCO Handover</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
eSCO Handover
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="ACL Data Transfer SYNC Flag">
    <label>ACL Data Transfer SYNC Flag</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
ACL Data Transfer SYNC Flag
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="QLMP As Extended Opcodes">
    <label>QLMP As Extended Opcodes</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
QLMP is exchanged as non-encapsulated LMP packets
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte3_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="QHS Bug Fixes Batch 1">
    <label>QHS Bug Fixes Batch 1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Device supports fixes to day counter initialization, crc and whitener seeding for QHS.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Connection Relay">
    <label>Connection Relay</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Device Supports Connection Relay
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Bluetooth Over IP">
    <label>Bluetooth Over IP</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Device Supports Bluetooth over IP
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="QHS Bug Fixes Batch 2">
    <label>QHS Bug Fixes Batch 2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Device Supports QHS bug fixes batch 2
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Split Connected Isochronous Group">
    <label>Split Connected Isochronous Group</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Device supports Split Connected Isochronous Group
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Support for QLMP_ACL_shadow_req2">
    <label>Support for QLMP_ACL_shadow_req2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Device Supports 2nd version of QLMP ACL shadow req
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LE ACL handover">
    <label>LE ACL handover</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Device Supports LE ACL handover
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte4_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="MIC_FWD">
    <label>MIC_FWD</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Feature Bit for MIC forwarding
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte5_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte6_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte7_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte8_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte9_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte10_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte11_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte12_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte13_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte14_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_byte15_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="per_threshold_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="2QHS Up One">
    <label>2QHS Up One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 2M Phy Rate up transition by one
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="2QHS Down One">
    <label>2QHS Down One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 2M Phy Rate down transition by one
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="3QHS Up One">
    <label>3QHS Up One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 3M Phy Rate up transition by one
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="3QHS Down One">
    <label>3QHS Down One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 3M Phy Rate down transition by one
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="16" name="4QHS Up One">
    <label>4QHS Up One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 4M Phy Rate up transition by one
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="4QHS Down One">
    <label>4QHS Down One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 4M Phy Rate down transition by one
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="4QHS Down Two">
    <label>4QHS Down Two</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 4M Phy Rate down transition by two
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="16" name="5QHS Up One">
    <label>5QHS Up One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 5M Phy Rate up transition by one
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="16" name="5QHS Down One">
    <label>5QHS Down One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 5M Phy Rate down transition by one
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="144" bit_width="16" name="5QHS Down Two">
    <label>5QHS Down Two</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 5M Phy Rate down transition by two
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="16" name="5QHS To 2QHS">
    <label>5QHS To 2QHS</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS5 to BT-QHS2 transition
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="176" bit_width="16" name="6QHS Down One">
    <label>6QHS Down One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 6M Phy Rate down transition by one
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="16" name="6QHS Down Two">
    <label>6QHS Down Two</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS 6M Phy Rate down transition by two
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="208" bit_width="16" name="6QHS To 2QHS">
    <label>6QHS To 2QHS</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS6 to BT-QHS2 transition
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="224" bit_width="16" name="5QHS Down One Aptx Low Latency Mode">
    <label>5QHS Down One Aptx Low Latency Mode</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER for BT-QHS5 to BT-QHS4 transition in aptx low latency mode
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_control_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="QLL Enable">
    <label>QLL Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
This bit is used to enable/disable QLL feature.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_link_key_supported_key_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Insecure Q-Root Key">
    <label>Insecure Q-Root Key</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable/disable bit for Insecure Q-Root Key
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Secure Q-Root Key">
    <label>Secure Q-Root Key</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable/disable bit for Secure Q-Root Key
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="9" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="reserved8">
    <label>reserved8</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="1" name="reserved9">
    <label>reserved9</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="12" bit_width="1" name="reserved10">
    <label>reserved10</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="13" bit_width="1" name="reserved11">
    <label>reserved11</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="14" bit_width="1" name="reserved12">
    <label>reserved12</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="15" bit_width="1" name="reserved13">
    <label>reserved13</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="1" name="reserved14">
    <label>reserved14</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="17" bit_width="1" name="reserved15">
    <label>reserved15</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="18" bit_width="1" name="reserved16">
    <label>reserved16</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="19" bit_width="1" name="reserved17">
    <label>reserved17</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="20" bit_width="1" name="reserved18">
    <label>reserved18</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="21" bit_width="1" name="reserved19">
    <label>reserved19</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="22" bit_width="1" name="reserved20">
    <label>reserved20</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="23" bit_width="1" name="reserved21">
    <label>reserved21</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="1" name="reserved22">
    <label>reserved22</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="25" bit_width="1" name="reserved23">
    <label>reserved23</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="26" bit_width="1" name="reserved24">
    <label>reserved24</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="27" bit_width="1" name="reserved25">
    <label>reserved25</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="28" bit_width="1" name="reserved26">
    <label>reserved26</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="29" bit_width="1" name="reserved27">
    <label>reserved27</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="30" bit_width="1" name="reserved28">
    <label>reserved28</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="31" bit_width="1" name="reserved29">
    <label>reserved29</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="undefined_link_key_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="Link Key Byte">
    <label>Link Key Byte</label>
    <type>uint8</type>
    <array_length_min>16</array_length_min>
    <array_length_max>16</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="insecure_q_root_key_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="Link Key Byte">
    <label>Link Key Byte</label>
    <type>uint8</type>
    <array_length_min>16</array_length_min>
    <array_length_max>16</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="secure_q_root_key_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="Link Key Byte">
    <label>Link Key Byte</label>
    <type>uint8</type>
    <array_length_min>16</array_length_min>
    <array_length_max>16</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_feature_set_byte_0_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="LEHS-P2 TX">
    <label>LEHS-P2 TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-P2 Tx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="LEHS-P3 TX">
    <label>LEHS-P3 TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-P3 Tx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="LEHS-P4 TX">
    <label>LEHS-P4 TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-P4 Tx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="LEHS-P5 TX">
    <label>LEHS-P5 TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-P5 Tx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="LEHS-P6 TX">
    <label>LEHS-P6 TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-P6 Tx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="LEHS-P2 RX">
    <label>LEHS-P2 RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-P2 Rx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LEHS-P3 RX">
    <label>LEHS-P3 RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-P3 Rx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="LEHS-P4 RX">
    <label>LEHS-P4 RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-P4 Rx Support
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_feature_set_byte_1_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="LEHS-P5 RX">
    <label>LEHS-P5 RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-P5 Rx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="LEHS-P6 RX">
    <label>LEHS-P6 RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-P6 Rx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="LEHS-F2 TX">
    <label>LEHS-F2 TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-F2 Tx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="LEHS-F3 TX">
    <label>LEHS-F3 TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-F3 Tx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="LEHS-F4 TX">
    <label>LEHS-F4 TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-F4 Tx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="LEHS-F5 TX">
    <label>LEHS-F5 TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-F5 Tx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LEHS-F6 TX">
    <label>LEHS-F6 TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-F6 Tx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="LEHS-F2 RX">
    <label>LEHS-F2 RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-F2 Rx Support
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_feature_set_byte_2_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="LEHS-F3 RX">
    <label>LEHS-F3 RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-F3 Rx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="LEHS-F4 RX">
    <label>LEHS-F4 RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-F4 Rx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="LEHS-F5 RX">
    <label>LEHS-F5 RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-F5 Rx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="LEHS-F6 RX">
    <label>LEHS-F6 RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LEHS-F6 Rx Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="RTSC">
    <label>RTSC</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Real Time Soft Combining support as receiver.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Reserved">
    <label>Reserved</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved bit. Was QLL LE Power Control feature support.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Extended ISO">
    <label>Extended ISO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Extended ISO Channel support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Extended ISOAL">
    <label>Extended ISOAL</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Extended ISOAL host aware.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_feature_set_byte_3_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="LE EDPH">
    <label>LE EDPH</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
LE Empty Data Packet Hard Align.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Undefined Bits">
    <label>Undefined Bits</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Undefined bits
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="FT CHANGE">
    <label>FT CHANGE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Dynamic Flush Timeout for adaptive LE audio
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="BN VARIATION BY QHS RATE">
    <label>BN VARIATION BY QHS RATE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Dynamic Burst Number support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="4" name="Undefined Bits">
    <label>Undefined Bits</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>15</range_max>
    <description_user>
Undefined Bits
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_feature_set_byte_4_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="CIS Flushing Point Improvement">
    <label>CIS Flushing Point Improvement</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Improvements to the CIS flushing point calculations for better reliability.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Reseved_Bit1">
    <label>Reseved_Bit1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit is not used
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Reserved_Bit2">
    <label>Reserved_Bit2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit is not used
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Adaptive ISO">
    <label>Adaptive ISO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Used for adaptive ISO feature
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Reserved_Bit4">
    <label>Reserved_Bit4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit is not used
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Reserved_Bit5">
    <label>Reserved_Bit5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit is not used
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Reserved_Bit6">
    <label>Reserved_Bit6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit is not used
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Adaptive ISO multi cfg update">
    <label>Adaptive ISO multi cfg update</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Adaptive ISO multi config update feature
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_feature_set_byte_5_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Undefined Bits">
    <label>Undefined Bits</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Undefined Bits
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_feature_set_byte_6_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Undefined Bits">
    <label>Undefined Bits</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Undefined Bits
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_feature_set_byte_7_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Undefined Bits">
    <label>Undefined Bits</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Undefined Bits
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="lehs_per_threshold_config_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="LEHS2 Up One">
    <label>LEHS2 Up One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS2 up one.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="LEHS3 Up One">
    <label>LEHS3 Up One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS2 up one.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="LEHS3 Down One">
    <label>LEHS3 Down One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS3 down one.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="LEHS4 Up One">
    <label>LEHS4 Up One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS4 up one.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="16" name="LEHS4 Down One">
    <label>LEHS4 Down One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS4 down one.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="LEHS4 Down Two">
    <label>LEHS4 Down Two</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS4 down two.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="LEHS5 Up One">
    <label>LEHS5 Up One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS5 up one.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="16" name="LEHS5 Down One">
    <label>LEHS5 Down One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS5 down one.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="16" name="LEHS5 Down Two">
    <label>LEHS5 Down Two</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS5 down two.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="144" bit_width="16" name="LEHS5 To LEHS2">
    <label>LEHS5 To LEHS2</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS5 to LEHS2.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="16" name="LEHS6 Down One">
    <label>LEHS6 Down One</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS6 down one.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="176" bit_width="16" name="LEHS6 Down Two">
    <label>LEHS6 Down Two</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS6 down two.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="16" name="LEHS6 To LEHS2">
    <label>LEHS6 To LEHS2</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Threshold PER of LEHS6 to LEHS2.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="208" bit_width="16" name="Reserved">
    <label>Reserved</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="add_on_feature_support_byte0_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="WiPower Fastboot Enable">
    <label>WiPower Fastboot Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Split A2DP - Scramble Data Required">
    <label>Split A2DP - Scramble Data Required</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Split A2DP - 44p1Khz Sample Freq">
    <label>Split A2DP - 44p1Khz Sample Freq</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Split A2DP - 48Khz Sample Freq">
    <label>Split A2DP - 48Khz Sample Freq</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Split A2DP Single VS Command Support">
    <label>Split A2DP Single VS Command Support</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Split A2DP Source - SBC Encoding">
    <label>Split A2DP Source - SBC Encoding</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Reserved2">
    <label>Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="add_on_feature_support_byte1_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Split A2DP Source - SBC">
    <label>Split A2DP Source - SBC</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Split A2DP Source - MP3">
    <label>Split A2DP Source - MP3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Split A2DP Source - AAC">
    <label>Split A2DP Source - AAC</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Split A2DP Source - LDAC">
    <label>Split A2DP Source - LDAC</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Split A2DP Source - APTX">
    <label>Split A2DP Source - APTX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Split A2DP Source - APTX HD">
    <label>Split A2DP Source - APTX HD</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Split A2DP Source - APTX ADAPTIVE">
    <label>Split A2DP Source - APTX ADAPTIVE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Split A2DP Source - APTX TWS PLUS">
    <label>Split A2DP Source - APTX TWS PLUS</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="add_on_feature_support_byte2_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Split A2DP Sink - SBC">
    <label>Split A2DP Sink - SBC</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Split A2DP Sink - MP3">
    <label>Split A2DP Sink - MP3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Split A2DP Sink - AAC">
    <label>Split A2DP Sink - AAC</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Split A2DP Sink - LDAC">
    <label>Split A2DP Sink - LDAC</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Split A2DP Sink - APTX">
    <label>Split A2DP Sink - APTX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Split A2DP Sink - APTX HD">
    <label>Split A2DP Sink - APTX HD</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Split A2DP Sink - APTX ADAPTIVE">
    <label>Split A2DP Sink - APTX ADAPTIVE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Split A2DP Sink - APTX TWS PLUS">
    <label>Split A2DP Sink - APTX TWS PLUS</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="add_on_feature_support_byte3_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Voice - Dual SCO">
    <label>Voice - Dual SCO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Voice - TWS Plus Dual eSCO AG">
    <label>Voice - TWS Plus Dual eSCO AG</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Voice - SWB APTX ADAPTIVE AG">
    <label>Voice - SWB APTX ADAPTIVE AG</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Split A2DP Source - LHDC">
    <label>Split A2DP Source - LHDC</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Split A2DP Source - LHDC
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Q2Q-QLE HCI support">
    <label>Q2Q-QLE HCI support</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Q2Q-QLE HCI support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Q2Q-QCM HCI support">
    <label>Q2Q-QCM HCI support</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Q2Q-QCM HCI support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Reserved6">
    <label>Reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Reserved7">
    <label>Reserved7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="add_on_feature_support_byte4_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Broadcast Audio Tx with EC-2-5">
    <label>Broadcast Audio Tx with EC-2-5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Broadcast Audio Tx with EC-3-9">
    <label>Broadcast Audio Tx with EC-3-9</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Broadcast Audio Rx with EC-2-5">
    <label>Broadcast Audio Rx with EC-2-5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Broadcast Audio Rx with EC-3-9">
    <label>Broadcast Audio Rx with EC-3-9</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_uart_settings_h4_uart_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="HW Flow Control En">
    <label>HW Flow Control En</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Configure UART HW FLOW CONTROL. Set 1 to enable or 0 to disable HW Flow Control.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="3" name="FIFO Empty Entries to Flow Off">
    <label>FIFO Empty Entries to Flow Off</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
    <description_user>
If the number of empty entries in the Rx FIFO falls below this number, the host will be flowed off.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="8 Byte FIFO">
    <label>8 Byte FIFO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
When set to 1 this will enable the 8 byte FIFO.  When set to 0, the default 2 byte FIFO will be used.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="user_defined_baud_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="Integer Rate Divisor">
    <label>Integer Rate Divisor</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Integer Baud Rate divisor;  Formula's to Calculate Baud Rate Registers: ibrd = ( BBCLK/(8*BAUD) ); For SiW1750/1760: BBCLK = 16,000,000; For the SiW3000 : BBCLK = 32,000,000; For QCA6174 2.x : BBCLK = 32,000,000; For QCA6174 3.x : BBCLK = 32,000,000 or 64,000,000
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Fractional Rate Divisor">
    <label>Fractional Rate Divisor</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
SiW1750/1760: BBCLK = 16,000,000; For the SiW3000 : BBCLK = 32,000,000; For QCA6174 2.x : BBCLK = 32,000,000; For QCA6174 3.x : BBCLK = 32,000,000 or 64,000,000
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="sibs_parameters_options_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Wake Byte Required">
    <label>Wake Byte Required</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
When enabled (set to 1), an actual Wake byte must be received to respond with a Wake Ack byte.  When disabled, a Wake Ack byte will be sent on wakeup due to any Rx activity.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Dynamic Wake Retransmit Timeout">
    <label>Dynamic Wake Retransmit Timeout</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Wake Retransmit Timeout can be set to either constant value always or can be configured to increment dynamically based on number of Wake Indication Timeouts. When this BIT is set to 1: Wake Retransmit timeout will increment linearly. For example if the Wake Retransmit timeout is set to 10msec then Wake Indication will be sent out at 0, 10, 20, 30, 40, 50, 60msec timeouts.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="2" name="Wakeup Source">
    <label>Wakeup Source</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
Wakeup source selection for SIBS mode. Value of 0x0(default) is used when both HCI RxD &amp; RxD Fast are configured as wakeup source., Value of 0x1 is used when HCI RxD only is configured as wakeup source.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hwoob_parameters_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="BTWake Polarity">
    <label>BTWake Polarity</label>
    <type>btwake_polarity_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="HostWake Polarity">
    <label>HostWake Polarity</label>
    <type>hostwake_polarity_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="BTWake Pin">
    <label>BTWake Pin</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="HostWake Pin">
    <label>HostWake Pin</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="sleep_parameters_power_control_select_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="2" name="Pwr Req Select Option">
    <label>Pwr Req Select Option</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
00=reg on, 01=osc on, 10=rst off, 11=clks active.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="2" name="Bias Req Select Option">
    <label>Bias Req Select Option</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
00=reg on, 01=osc on, 10=rst off, 11= clks active.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="AClk Req Select Option">
    <label>AClk Req Select Option</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
00=reg on, 01=osc on, 10=rst off, 11= clks active.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="1" name="RAM Sleep Sel">
    <label>RAM Sleep Sel</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0=Sleep Control, 1= Always On
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="9" bit_width="1" name="CLK Gate Sel">
    <label>CLK Gate Sel</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0=Sleep Control, 1= Always On
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="12" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="13" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="14" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="15" bit_width="1" name="reserved8">
    <label>reserved8</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="2" name="Core Reset Option">
    <label>Core Reset Option</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
00=reg on, 01=osc on, 10=rst off, 11=clks active.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="18" bit_width="1" name="reserved9">
    <label>reserved9</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="19" bit_width="1" name="reserved10">
    <label>reserved10</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="20" bit_width="1" name="reserved11">
    <label>reserved11</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="21" bit_width="1" name="reserved12">
    <label>reserved12</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="22" bit_width="1" name="reserved13">
    <label>reserved13</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="23" bit_width="1" name="reserved14">
    <label>reserved14</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="2" name="Protection Gates Option">
    <label>Protection Gates Option</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
00=reg on, 01=osc on, 10=rst off, 11=clks active.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="26" bit_width="1" name="reserved15">
    <label>reserved15</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="27" bit_width="1" name="reserved16">
    <label>reserved16</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="28" bit_width="1" name="reserved17">
    <label>reserved17</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="29" bit_width="1" name="reserved18">
    <label>reserved18</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="30" bit_width="1" name="reserved19">
    <label>reserved19</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="31" bit_width="1" name="reserved20">
    <label>reserved20</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="debug_parameters_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Host GPIO Control">
    <label>Host GPIO Control</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit0: Enable Host GPIO Control.  0==Device GPIO Control (default), 1==Host GPIO Control.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Enable LL Logger">
    <label>Enable LL Logger</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit1: Enables logger output from the Lower Layer stack.  0==LL logger disabled (default), 1==LL logger enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Enable UL Logger">
    <label>Enable UL Logger</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit2: Enables logger output from the Upper Layer stack.  0==UL logger disabled (default), 1==UL logger enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Reserved_Bit_0">
    <label>Reserved_Bit_0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit3: This bit has been deprecated for BT65_A1 and beyond. Please use relevant field in &quot;Logger Params&quot;
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Inhibit VS NOP Command Complete">
    <label>Inhibit VS NOP Command Complete</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit4: Inhibits the sending of Command Complete (with opcode of NOP) after processing all Vendor Specific HCI commands, for compatibility with older scripts.  Default==0.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="IOP Run From ROM">
    <label>IOP Run From ROM</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit5: Used to debug Bali by forcing the IOP code to execute directly out of ROM.  Otherwise, the IOP code will copy itself to RAM and run from there.  Default = 0 (run from RAM).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Display Stacks">
    <label>Display Stacks</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit6: 1: Enable Display of IRQ, FIQ, SYS, and Task Stacks sizes and free every 10 seconds. 0: Disable the display.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Disable Nap">
    <label>Disable Nap</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit7: 1: Disable the Nap (Pause) feature for easier JTAG debugging.  0: Enable Nap feature.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="1" name="Enable ISR Logger">
    <label>Enable ISR Logger</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit8: Enable PF_DBG_ISR API's to support SLC layer logging.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="9" bit_width="1" name="Topology Logging">
    <label>Topology Logging</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit9: Enable Topology Log messages. This option requires the ISR Logger.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="Display Heap Stats">
    <label>Display Heap Stats</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit10: When Enabled, Display the Upper and Lower Heap Statistics at the time of Idle Task.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="12" bit_width="1" name="Bus Error Interrupt">
    <label>Bus Error Interrupt</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit12: Enable the Bus Error Interrupt
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="13" bit_width="1" name="CPU Profiling">
    <label>CPU Profiling</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit13: Enable CPU Profiling
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="14" bit_width="1" name="AHB Timeout Interrupt">
    <label>AHB Timeout Interrupt</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit14: Enable the AHB Timeout Interrupt
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="15" bit_width="1" name="RAM Mask Interrupt">
    <label>RAM Mask Interrupt</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit15: Disable the RAM Mask Interrupt
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="1" name="RAM Mask RGN0 Interrupt">
    <label>RAM Mask RGN0 Interrupt</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Disable the RAM Mask RGN0 Interrupt
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="17" bit_width="1" name="RAM Mask RGN1 Interrupt">
    <label>RAM Mask RGN1 Interrupt</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Disable the RAM Mask RGN1 Interrupt
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="18" bit_width="1" name="Flow Off after Crashdump">
    <label>Flow Off after Crashdump</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit18: Flag to indicate if we need to flow off Uart after sending crashdump to Host
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="19" bit_width="1" name="xSCO_PERIOD">
    <label>xSCO_PERIOD</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable xSCO period logging.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="20" bit_width="1" name="Enable Power Monitoring">
    <label>Enable Power Monitoring</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit20: For allocating memory to logger counter buffer.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="21" bit_width="1" name="Pgm Cntr Capture Enable">
    <label>Pgm Cntr Capture Enable</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Program Counter Capture on NMI
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="22" bit_width="1" name="Enable Infra Assert">
    <label>Enable Infra Assert</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Assert when Infra fails for debug.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="23" bit_width="1" name="Enable Memory Dump for Standalone Testing">
    <label>Enable Memory Dump for Standalone Testing</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable memory dump to be send over UART. This is for standalone testing of Unified Crashdump in Slate.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="25" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="26" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="27" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="28" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="29" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="30" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="31" bit_width="1" name="reserved8">
    <label>reserved8</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="logger_params_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="NBLK Logger Memory Usage">
    <label>NBLK Logger Memory Usage</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Not used for ROME. Total memory for logger is defined in oscfg instead.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="NBLK Logger Memory Block Size">
    <label>NBLK Logger Memory Block Size</label>
    <type>uint8</type>
    <range_min>4</range_min>
    <range_max>255</range_max>
    <description_user>
Not used for ROME. Memory block size for logger is defined in oscfg instead.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="NBLK Stats Timer Interval">
    <label>NBLK Stats Timer Interval</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Timer Interval (Secs) to display Logger Statistics/Info, when Logger is in NonBlocking (Asynchronous) Mode. A value of 0 turns off the Statistics Display.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="debug_parameters_logger_hci_filter_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Commands at HCI Task Enable">
    <label>Commands at HCI Task Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Logging of HCI Commands sent down from Host to SoC (seen @ the HCI Task)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Events at HCI Task Enable">
    <label>Events at HCI Task Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Logging of HCI Events sent from Soc to the Host (seen @ the HCI Task)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Commands at LLM Task Enable">
    <label>Commands at LLM Task Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Logging of HCI Commands sent to SoC from the host (seen @ the LLM Task)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="State at LLM Task Enable">
    <label>State at LLM Task Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Logging of State information (seen @ the LLM Task)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Info at LLM Task Enable">
    <label>Info at LLM Task Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Logging of Debug information (@ the LLM Task)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="enh_logging_params_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Enh Log Enable">
    <label>Enh Log Enable</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Flag to enable/disable Enhanced Logging. 0-Disable; 1-Enable
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Overwrite Prev Logs">
    <label>Overwrite Prev Logs</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0: Drop the latest logs when log buffers are not available. 1: Dequeue the previous log buffer from Dbg Queue and use it for latest logs.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Dynamic Logging Enable">
    <label>Dynamic Logging Enable</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0: When HOST is in sleep don't send the logs immediately. Wait until HOST is awake. 1: Send out the Logs as when they are queued to transmit to HOST.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Is Expect Fatal">
    <label>Is Expect Fatal</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Set 1 to Consider EXPECT as FATAL.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Txp Assert Fatal">
    <label>Txp Assert Fatal</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
When set, a transport layer error will cause a fatal assert.  When not set, a transport layer error will cause a Hardware Error event to be sent to the host only.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="CalcRomCrc">
    <label>CalcRomCrc</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Calculate ROM CRC on Crash
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Voice_Audio_Log">
    <label>Voice_Audio_Log</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Flag to enable/disable IOP Voice/Audio buffers dump.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="SLC Dynamic Logging Enable">
    <label>SLC Dynamic Logging Enable</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0: When HOST is in sleep don't send the logs immediately. Wait until HOST is awake. 1: Send out the Logs as when they are queued to transmit to HOST.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="1" name="VSE Log Enable">
    <label>VSE Log Enable</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable mask for VS Event Logs
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="9" bit_width="1" name="Route Enh Log to Hydra Log">
    <label>Route Enh Log to Hydra Log</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Routes enhanced logging to hydra logging.0-Off;1-On
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="Disable Enh Log Buffering">
    <label>Disable Enh Log Buffering</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
When Set, disable Enhance log Buffer mechanism and queue each log immediately.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="1" name="LC Fatal Abort Assert">
    <label>LC Fatal Abort Assert</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
If set to 1, cause assert on Link Controller Fatal Abort.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="12" bit_width="1" name="Audio_Latency_Log">
    <label>Audio_Latency_Log</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
1-Enable mask for Audio latency log. Controller would log out latency data for each media packet.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="13" bit_width="1" name="Disable Enh Log Flush">
    <label>Disable Enh Log Flush</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
If set, disable flush mechanism and send enhanced logs only when actual Host traffic is active
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="14" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="15" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="enh_logging_slc_mask_slc_mask_0_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Reserved_0">
    <label>Reserved_0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="TX_INFO">
    <label>TX_INFO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Unused?
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="RX_INFO">
    <label>RX_INFO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Unused?
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="SCHED_CLOCK_SHORT">
    <label>SCHED_CLOCK_SHORT</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs only the lower two bytes of the interger portion of the piconet clock
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="SCHED_CLOCK">
    <label>SCHED_CLOCK</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs all 4 bytes of the interger portion of the piconet clock
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="POLLMGR_RESULT">
    <label>POLLMGR_RESULT</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the connection handle and priority of the resulting dispatch from the PollMgr
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="DISPATCH_CONSUMED">
    <label>DISPATCH_CONSUMED</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information from the dispatch element that was consumed by the scheduler.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="DISPATCH_NOT_CONSUMED">
    <label>DISPATCH_NOT_CONSUMED</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information from the dispatch element that was NOT consumed by the scheduler.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="enh_logging_slc_mask_slc_mask_1_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="DISPATCH_LATE">
    <label>DISPATCH_LATE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information from the dispatch element that was determined to be late by the scheduler.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="DISPATCH_FUTURE">
    <label>DISPATCH_FUTURE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information from the dispatch element that was determined to be in the future by the scheduler.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="DISPATCH_SEARCH_PRIO_ELEM">
    <label>DISPATCH_SEARCH_PRIO_ELEM</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information for each next time-ordered dispatch element the scheduler considers while the scheduler decides the correct choice for the next job to dispatch.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="DISPATCH_SEARCH_CHECK_ELEM">
    <label>DISPATCH_SEARCH_CHECK_ELEM</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information for next time-ordered dispatch element the scheduler compares against DISPATCH_SEARCH_PRIO_ELEM to decide the next correct job to dispatch.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="DISPATCH_SEARCH_OVERLAP">
    <label>DISPATCH_SEARCH_OVERLAP</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information for the next time-ordered dispatch element the scheduler considers higher priority and overlapping in time compared to DISPATCH_SEARCH_PRIO_ELEM while the scheduler decides the correct choice for the next job to dispatch.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="DISPATCH_SEARCH_UNWIND">
    <label>DISPATCH_SEARCH_UNWIND</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information for each dispatch element the scheduler considers to not overlap with the next higher priority dispatch while the scheduler decides the correct choice for the next job to dispatch.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="DISPATCH_LATE_REPORT">
    <label>DISPATCH_LATE_REPORT</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Unused?
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="DISPATCH_VERBOSE">
    <label>DISPATCH_VERBOSE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Unused?
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="enh_logging_slc_mask_slc_mask_2_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="TX_VERBOSE">
    <label>TX_VERBOSE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the header for each BR/EDR packet transmitted.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="RX_VERBOSE">
    <label>RX_VERBOSE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the packet header for each BR/EDR packet received.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="LE_TX_VERBOSE">
    <label>LE_TX_VERBOSE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the packet header for each LE packet transmitted.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="LE_RX_VERBOSE">
    <label>LE_RX_VERBOSE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the packet header for each LE packet received.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="LE_ADV_VERBOSE">
    <label>LE_ADV_VERBOSE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the packet header for each LE advertising packet transmitted.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="PRIORITY_CHANGE">
    <label>PRIORITY_CHANGE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the change in priority and reason for a dispatch element.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LE_CONN_EVT_END">
    <label>LE_CONN_EVT_END</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the reason why an LE connection event ended unnaturally (e.g. no data to Tx/Rx).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="POLLMGR_RESULT_TYPE">
    <label>POLLMGR_RESULT_TYPE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information about the resulting PollMgr task chosen.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="enh_logging_slc_mask_slc_mask_3_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="A2DP_TX_BUFFER_SIZE_ERROR">
    <label>A2DP_TX_BUFFER_SIZE_ERROR</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs a message when there is insufficient baseband buffer space available for the current A2DP packet.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="DISPATCH_HANDLE">
    <label>DISPATCH_HANDLE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the connection handle/ISO group ID for select dispatch handlers.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="QLL_ALT_PHY_RATE">
    <label>QLL_ALT_PHY_RATE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs alternate PHY information for QLL ISO
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="QLL_CIS_EVT_CNT">
    <label>QLL_CIS_EVT_CNT</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Event counter at the time QLL_ALT_PHY_RATE is logged.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Reserved_4">
    <label>Reserved_4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Reserved_5">
    <label>Reserved_5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Reserved_6">
    <label>Reserved_6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Reserved_7">
    <label>Reserved_7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="enh_logging_slc_mask_slc_mask_4_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="ALE_PERIODIC_SYNC_INFO">
    <label>ALE_PERIODIC_SYNC_INFO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs state machine information related to a LE periodic link.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="LPRX_SCAN_INFO">
    <label>LPRX_SCAN_INFO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information related to low power page/inquiry scan.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Reserved_2">
    <label>Reserved_2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Reserved_3">
    <label>Reserved_3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Reserved_4">
    <label>Reserved_4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Reserved_5">
    <label>Reserved_5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="LE_SUBRATE_INFO">
    <label>LE_SUBRATE_INFO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs information related to LE subrate feature.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Reserved_7">
    <label>Reserved_7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="enh_logging_slc_mask_slc_mask_5_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Reserved_0">
    <label>Reserved_0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="SLC_LOG_ID_QHS_TX">
    <label>SLC_LOG_ID_QHS_TX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the header for each TX QHS packet
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="SLC_LOG_ID_QHS_RX">
    <label>SLC_LOG_ID_QHS_RX</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Logs the header for each RX QHS packet
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Reserved_3">
    <label>Reserved_3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Reserved_4">
    <label>Reserved_4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Reserved_5">
    <label>Reserved_5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Reserved_6">
    <label>Reserved_6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Reserved_7">
    <label>Reserved_7</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="enh_logging_slc_mask_slc_mask_7_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Reserved_0">
    <label>Reserved_0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="ASSERT">
    <label>ASSERT</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Unused?
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Reserved_2">
    <label>Reserved_2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Reserved_3">
    <label>Reserved_3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Reserved_4">
    <label>Reserved_4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Reserved_5">
    <label>Reserved_5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Reserved_6">
    <label>Reserved_6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Reserved for future use
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="EXTID">
    <label>EXTID</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
SLC logging extendable ID.  Through the use of a sub-ID, this may be used to extend the number of SLC log types possible.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_logging_config_host_report_mask_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Page_Timeout">
    <label>Page_Timeout</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Half_LSTO">
    <label>Half_LSTO</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="audio_glitch">
    <label>audio_glitch</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="SCO_Misses">
    <label>SCO_Misses</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="LSTO">
    <label>LSTO</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="CONN_FAIL">
    <label>CONN_FAIL</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="10" name="Reserved">
    <label>Reserved</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1023</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="sco_misses_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="MinReportIntervalMs">
    <label>MinReportIntervalMs</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Minimum report interval in ms.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="RetxThreshold">
    <label>RetxThreshold</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
This value is defined so as to obtain a eSCO retransmission threshold. (300/tsco) is equivalent to the logic of 30% retransmission slots for 1sec period, i.e. (((1000/tsco)*30)/100)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="DbgThreshold">
    <label>DbgThreshold</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
This value is a threshold for debug parameters other than retransmission, which can cause a SCO blip.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="FailureRateThreshold">
    <label>FailureRateThreshold</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>100</range_max>
    <description_user>
In one period, if failure rate exceeds this threshold, this period will be regarded as glitch happened.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="GlitchCountThreshold">
    <label>GlitchCountThreshold</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
In one report interval, if the glitches happen more than this threshold, need report to host.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="header_fec_errors_allowed_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="ACL">
    <label>ACL</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Number of header FEC errors allowed before NACKing an ACL packet
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="SCO">
    <label>SCO</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Number of header FEC errors allowed before NACKing a SCO packet
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="ppm_drift_rate_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="Drift Rate BTC">
    <label>Drift Rate BTC</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>250</range_max>
    <description_user>
PPM Drift Rate for BT Classical (Default: 0x2D, 45d)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="Drift Rate BLE">
    <label>Drift Rate BLE</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>500</range_max>
    <description_user>
PPM Drift Rate for BLE (Default: 0x2D, 45d)
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_power_configuration_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Advertising Power Level Index">
    <label>Advertising Power Level Index</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>9</range_max>
    <description_user>
Advertising power level index (Default=0x7, 7d). Host can control range by limiting Tx Output Power. This Tx Power is used for Advertising and Scan Response. Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Scan Request Power Level Index">
    <label>Scan Request Power Level Index</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>9</range_max>
    <description_user>
Scan Request Tx Power Level Index (Default=0x7, 7d). Host can control range by limiting Tx Output Power. Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Connection Power Level Index">
    <label>Connection Power Level Index</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>9</range_max>
    <description_user>
Connection power level index (Default=0x7, 7d). Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Broadcaster Power Level Index">
    <label>Broadcaster Power Level Index</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>9</range_max>
    <description_user>
LE ISO BIG Tx power level. (Default=0x7, 7d). Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="MultiAdvTxPower_min">
    <label>MultiAdvTxPower_min</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>9</range_max>
    <description_user>
Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="MultiAdvTxPower_low">
    <label>MultiAdvTxPower_low</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>9</range_max>
    <description_user>
Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="MultiAdvTxPower_mid">
    <label>MultiAdvTxPower_mid</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>9</range_max>
    <description_user>
Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="MultiAdvTxPower_high">
    <label>MultiAdvTxPower_high</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>9</range_max>
    <description_user>
Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="MultiAdvTxPower_max">
    <label>MultiAdvTxPower_max</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>9</range_max>
    <description_user>
Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="generic_pool_config_mem_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
00: lower heap only; 01: upper heap only;
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Preallocate memory
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="retaddr">
    <label>retaddr</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
record the return address of the caller.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="large_hci_cmd_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="large_hci_event_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="small_hci_cmd_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="small_hci_event_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="lmp_tx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="lmp_rx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_lms_command_status_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_filter_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="lms_dispatch_queue_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="medium_hci_event_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_logmsg_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ant_cmd_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ant_event_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ant_data_from_host_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ant_data_to_host_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_log_small_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_log_very_large_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="prhl_power_event_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_log_slcbuf_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_log_mcibuf_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_log_mwsbuf_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="rx_nonrt_offload_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="mci_msg_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_sco_conn_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_piconet_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_conn_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="wip_dbg_log_event_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="estack_tmr_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_data_tx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_data_rx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="mci_sched_predict_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="senuart_data_tx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="senuart_data_rx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_le_data_tx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="sco_create_msg_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="accmd_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="bccmd_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_le_deferred_cmd_queue_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="le_long_ctrl_tx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="voice_audio_log_buffer_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="a2dp_sink_media_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="bcaud_ec_segment_pool_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_sco_tx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_sco_rx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_iso_tx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_iso_rx_block_config_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="section">
    <label>section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="coex_spta_configuration_coex_spta_configuration_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Enable">
    <label>Enable</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
SPTA enable, 1 for enabled, 0 for disabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Abort Enable for PP0 TX">
    <label>Abort Enable for PP0 TX</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Abort Enable for PP0 TX.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Abort Enable for PP1 TX">
    <label>Abort Enable for PP1 TX</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Abort Enable for PP1 TX.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Abort Enable for PP2 TX">
    <label>Abort Enable for PP2 TX</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Abort Enable for PP2 TX.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Abort Enable for PP0 RX">
    <label>Abort Enable for PP0 RX</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Abort Enable for PP0 RX.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Abort Enable for PP1 RX">
    <label>Abort Enable for PP1 RX</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Abort Enable for PP1 RX.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Abort Enable for PP2 RX">
    <label>Abort Enable for PP2 RX</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Abort Enable for PP2 RX.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="9" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="12" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="13" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="14" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="15" bit_width="1" name="reserved8">
    <label>reserved8</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="correlator_threshold_br_edr_default_t">
  <structure_element lsb_bit_position="0" bit_width="19" name="Threshold">
    <label>Threshold</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>524287</range_max>
    <description_user>
Allows specification of the Acquisition Threshold threshold value.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="19" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="20" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="21" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="22" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="23" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="6" name="Delay">
    <label>Delay</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>63</range_max>
    <description_user>
Allows specification of the Acquisition Threshold delay value.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="30" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="31" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="correlator_threshold_le_1mbps_default_t">
  <structure_element lsb_bit_position="0" bit_width="19" name="Threshold">
    <label>Threshold</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>524287</range_max>
    <description_user>
Allows specification of the Acquisition Threshold threshold value.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="19" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="20" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="21" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="22" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="23" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="6" name="Delay">
    <label>Delay</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>63</range_max>
    <description_user>
Allows specification of the Acquisition Threshold delay value.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="30" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="31" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="correlator_threshold_le_2mbps_default_t">
  <structure_element lsb_bit_position="0" bit_width="19" name="Threshold">
    <label>Threshold</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>524287</range_max>
    <description_user>
Allows specification of the Acquisition Threshold threshold value.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="19" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="20" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="21" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="22" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="23" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="6" name="Delay">
    <label>Delay</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>63</range_max>
    <description_user>
Allows specification of the Acquisition Threshold delay value.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="30" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="31" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="correlator_threshold_ant_default_t">
  <structure_element lsb_bit_position="0" bit_width="19" name="Threshold">
    <label>Threshold</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>524287</range_max>
    <description_user>
Allows specification of the Acquisition Threshold threshold value.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="19" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="20" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="21" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="22" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="23" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="6" name="Delay">
    <label>Delay</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>63</range_max>
    <description_user>
Allows specification of the Acquisition Threshold delay value.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="30" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="31" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="br_edr_parameters_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="COS Beta High">
    <label>COS Beta High</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="COS Beta Low">
    <label>COS Beta Low</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="32" name="COS Beta Combined">
    <label>COS Beta Combined</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="32" name="SIN Beta High">
    <label>SIN Beta High</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="SIN Beta Low">
    <label>SIN Beta Low</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="32" name="SIN Beta Combined">
    <label>SIN Beta Combined</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="32" name="COS Phase Mismatch">
    <label>COS Phase Mismatch</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="224" bit_width="32" name="Lambda">
    <label>Lambda</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="256" bit_width="16" name="DMin">
    <label>DMin</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="272" bit_width="16" name="Mismatch Comp">
    <label>Mismatch Comp</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="le_1mbps_parameters_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="COS Beta High">
    <label>COS Beta High</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="COS Beta Low">
    <label>COS Beta Low</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="32" name="COS Beta Combined">
    <label>COS Beta Combined</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="32" name="SIN Beta High">
    <label>SIN Beta High</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="SIN Beta Low">
    <label>SIN Beta Low</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="32" name="SIN Beta Combined">
    <label>SIN Beta Combined</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="32" name="COS Phase Mismatch">
    <label>COS Phase Mismatch</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="224" bit_width="32" name="Lambda">
    <label>Lambda</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="256" bit_width="16" name="DMin">
    <label>DMin</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="272" bit_width="16" name="Mismatch Comp">
    <label>Mismatch Comp</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="le_2mbps_parameters_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="COS Beta High">
    <label>COS Beta High</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="COS Beta Low">
    <label>COS Beta Low</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="32" name="COS Beta Combined">
    <label>COS Beta Combined</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="32" name="SIN Beta High">
    <label>SIN Beta High</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="SIN Beta Low">
    <label>SIN Beta Low</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="32" name="SIN Beta Combined">
    <label>SIN Beta Combined</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="32" name="COS Phase Mismatch">
    <label>COS Phase Mismatch</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="224" bit_width="32" name="Lambda">
    <label>Lambda</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="256" bit_width="16" name="DMin">
    <label>DMin</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="272" bit_width="16" name="Mismatch Comp">
    <label>Mismatch Comp</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ant_parameters_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="COS Beta High">
    <label>COS Beta High</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="COS Beta Low">
    <label>COS Beta Low</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="32" name="COS Beta Combined">
    <label>COS Beta Combined</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="32" name="SIN Beta High">
    <label>SIN Beta High</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="SIN Beta Low">
    <label>SIN Beta Low</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="32" name="SIN Beta Combined">
    <label>SIN Beta Combined</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="32" name="COS Phase Mismatch">
    <label>COS Phase Mismatch</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="224" bit_width="32" name="Lambda">
    <label>Lambda</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="256" bit_width="16" name="DMin">
    <label>DMin</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="272" bit_width="16" name="Mismatch Comp">
    <label>Mismatch Comp</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="correlator_threshold_threshold_control_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Use BR EDR Default">
    <label>Use BR EDR Default</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0 - Use dynamic calculation based on sync word  1 - Use default values
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Use LE 1Mbps Default">
    <label>Use LE 1Mbps Default</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0 - Use dynamic calculation based on sync word  1 - Use default values
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Use LE 2Mbps Default">
    <label>Use LE 2Mbps Default</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0 - Use dynamic calculation based on sync word  1 - Use default values
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Use ANT Default">
    <label>Use ANT Default</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0 - Use dynamic calculation based on sync word  1 - Use default values
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="pp_state_ctrl_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="T_LDO_BIAS_ON">
    <label>T_LDO_BIAS_ON</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="T_LDO_BIAS_OFF">
    <label>T_LDO_BIAS_OFF</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="T_SYNTH_OFF">
    <label>T_SYNTH_OFF</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="T_TX_SYNTH_TUNE">
    <label>T_TX_SYNTH_TUNE</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="16" name="T_TX_RF_ON">
    <label>T_TX_RF_ON</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="T_TX_RF_OFF">
    <label>T_TX_RF_OFF</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="T_RX_SYNTH_TUNE">
    <label>T_RX_SYNTH_TUNE</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="16" name="T_RX_FULL_RF_ON">
    <label>T_RX_FULL_RF_ON</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="16" name="T_RX_FULL_RF_OFF">
    <label>T_RX_FULL_RF_OFF</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="144" bit_width="16" name="T_RX_PRTL_RF_ON">
    <label>T_RX_PRTL_RF_ON</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="16" name="T_RX_PRTL_RF_OFF">
    <label>T_RX_PRTL_RF_OFF</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>511</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="rcu_state_ctrl_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="TX_RF_TURN_OFF_DONE_DELAY">
    <label>TX_RF_TURN_OFF_DONE_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="TX_SYNTH_OFF_DONE_DELAY">
    <label>TX_SYNTH_OFF_DONE_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="TX_BIAS_OFF_DONE_DELAY">
    <label>TX_BIAS_OFF_DONE_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="TX_RF_TURN_ON_DONE_DELAY">
    <label>TX_RF_TURN_ON_DONE_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="RX_RF_TURN_OFF_DONE_DELAY">
    <label>RX_RF_TURN_OFF_DONE_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="RX_SYNTH_OFF_DONE_DELAY">
    <label>RX_SYNTH_OFF_DONE_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="RX_BIAS_OFF_DONE_DELAY">
    <label>RX_BIAS_OFF_DONE_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="RX_RF_TURN_ON_DONE_DELAY">
    <label>RX_RF_TURN_ON_DONE_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="MODEM_TX_EN_ON_DELAY">
    <label>MODEM_TX_EN_ON_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="MODEM_TX_EN_OFF_DELAY">
    <label>MODEM_TX_EN_OFF_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="8" name="MODEM_RX_EN_ON_DELAY">
    <label>MODEM_RX_EN_ON_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="88" bit_width="8" name="MODEM_RX_EN_OFF_DELAY">
    <label>MODEM_RX_EN_OFF_DELAY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ramp_alpha_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="ramp_up_alpha">
    <label>ramp_up_alpha</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="ramp_down_alpha">
    <label>ramp_down_alpha</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="btc_pp_delay_compensation_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="RX_SOF_TSTAMP_OFFSET">
    <label>RX_SOF_TSTAMP_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="TX_SOF_TSTAMP_OFFSET">
    <label>TX_SOF_TSTAMP_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="RX_EOF_TSTAMP_1M_OFFSET">
    <label>RX_EOF_TSTAMP_1M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="RX_EOF_TSTAMP_2M_OFFSET">
    <label>RX_EOF_TSTAMP_2M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="16" name="RX_EOF_TSTAMP_3M_OFFSET">
    <label>RX_EOF_TSTAMP_3M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="RX_EOF_TSTAMP_4M_OFFSET">
    <label>RX_EOF_TSTAMP_4M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="RX_EOF_TSTAMP_6M_OFFSET">
    <label>RX_EOF_TSTAMP_6M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="16" name="RX_EOF_TSTAMP_8M_OFFSET">
    <label>RX_EOF_TSTAMP_8M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="16" name="TX_EOF_TSTAMP_1M_OFFSET">
    <label>TX_EOF_TSTAMP_1M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="144" bit_width="16" name="TX_EOF_TSTAMP_2M_OFFSET">
    <label>TX_EOF_TSTAMP_2M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="16" name="TX_EOF_TSTAMP_3M_OFFSET">
    <label>TX_EOF_TSTAMP_3M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="176" bit_width="16" name="TX_EOF_TSTAMP_4M_OFFSET">
    <label>TX_EOF_TSTAMP_4M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="16" name="TX_EOF_TSTAMP_6M_OFFSET">
    <label>TX_EOF_TSTAMP_6M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="208" bit_width="16" name="TX_EOF_TSTAMP_8M_OFFSET">
    <label>TX_EOF_TSTAMP_8M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="224" bit_width="16" name="SC_SYS_T_WARM_UP">
    <label>SC_SYS_T_WARM_UP</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>31</range_max>
  </structure_element>

  <structure_element lsb_bit_position="240" bit_width="16" name="SC_TX_SCHED_START_CAL_OFFSET">
    <label>SC_TX_SCHED_START_CAL_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="256" bit_width="16" name="SC_RX_SCHED_START_CAL_OFFSET">
    <label>SC_RX_SCHED_START_CAL_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="272" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="280" bit_width="8" name="Reserved2">
    <label>Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="ble_pp_delay_compensation_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="RX_SOF_TSTAMP_1M_OFFSET">
    <label>RX_SOF_TSTAMP_1M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="RX_SOF_TSTAMP_2M_OFFSET">
    <label>RX_SOF_TSTAMP_2M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="RX_SOF_TSTAMP_LEHS_OFFSET">
    <label>RX_SOF_TSTAMP_LEHS_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="TX_SOF_TSTAMP_1M_OFFSET">
    <label>TX_SOF_TSTAMP_1M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="16" name="TX_SOF_TSTAMP_2M_OFFSET">
    <label>TX_SOF_TSTAMP_2M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="TX_SOF_TSTAMP_LEHS_OFFSET">
    <label>TX_SOF_TSTAMP_LEHS_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="RX_EOF_TSTAMP_1M_NO_AOX_OFFSET">
    <label>RX_EOF_TSTAMP_1M_NO_AOX_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="16" name="RX_EOF_TSTAMP_2M_NO_AOX_OFFSET">
    <label>RX_EOF_TSTAMP_2M_NO_AOX_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="16" name="RX_EOF_TSTAMP_LEHS_2M_NO_AOX_OFFSET">
    <label>RX_EOF_TSTAMP_LEHS_2M_NO_AOX_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="144" bit_width="16" name="RX_EOF_TSTAMP_LEHS_3M_NO_AOX_OFFSET">
    <label>RX_EOF_TSTAMP_LEHS_3M_NO_AOX_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="16" name="RX_EOF_TSTAMP_LEHS_4M_NO_AOX_OFFSET">
    <label>RX_EOF_TSTAMP_LEHS_4M_NO_AOX_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="176" bit_width="16" name="RX_EOF_TSTAMP_LEHS_5M_NO_AOX_OFFSET">
    <label>RX_EOF_TSTAMP_LEHS_5M_NO_AOX_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="16" name="RX_EOF_TSTAMP_LEHS_6M_NO_AOX_OFFSET">
    <label>RX_EOF_TSTAMP_LEHS_6M_NO_AOX_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="208" bit_width="16" name="SC_SYS_T_WARM_UP">
    <label>SC_SYS_T_WARM_UP</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>31</range_max>
  </structure_element>

  <structure_element lsb_bit_position="224" bit_width="16" name="SC_RX_SCHED_START_CAL_OFFSET">
    <label>SC_RX_SCHED_START_CAL_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="240" bit_width="16" name="SC_TX_SCHED_START_CAL_OFFSET">
    <label>SC_TX_SCHED_START_CAL_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="256" bit_width="16" name="TX_EOF_TSTAMP_1M_NO_AOX_OFFSET">
    <label>TX_EOF_TSTAMP_1M_NO_AOX_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="272" bit_width="16" name="TX_EOF_TSTAMP_2M_NO_AOX_OFFSET">
    <label>TX_EOF_TSTAMP_2M_NO_AOX_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="288" bit_width="16" name="TX_EOF_TSTAMP_LEHS_NO_AOX_2M_OFFSET">
    <label>TX_EOF_TSTAMP_LEHS_NO_AOX_2M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="304" bit_width="16" name="TX_EOF_TSTAMP_LEHS_NO_AOX_3M_OFFSET">
    <label>TX_EOF_TSTAMP_LEHS_NO_AOX_3M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="320" bit_width="16" name="TX_EOF_TSTAMP_LEHS_NO_AOX_4M_OFFSET">
    <label>TX_EOF_TSTAMP_LEHS_NO_AOX_4M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="336" bit_width="16" name="TX_EOF_TSTAMP_LEHS_NO_AOX_5M_OFFSET">
    <label>TX_EOF_TSTAMP_LEHS_NO_AOX_5M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="352" bit_width="16" name="TX_EOF_TSTAMP_LEHS_NO_AOX_6M_OFFSET">
    <label>TX_EOF_TSTAMP_LEHS_NO_AOX_6M_OFFSET</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
  </structure_element>

  <structure_element lsb_bit_position="368" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="376" bit_width="8" name="Reserved2">
    <label>Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="384" bit_width="32" name="TX_IFS_WAIT">
    <label>TX_IFS_WAIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1048575</range_max>
  </structure_element>

  <structure_element lsb_bit_position="416" bit_width="32" name="RX_IFS_WAIT">
    <label>RX_IFS_WAIT</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1048575</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="psu_defaults_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="BT_ANA_PSU_EN_SEL">
    <label>BT_ANA_PSU_EN_SEL</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="BT_ANA_PSU_SW_OVR">
    <label>BT_ANA_PSU_SW_OVR</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="periodic_cal_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="PRIORITY_UPDATE_INTERVAL">
    <label>PRIORITY_UPDATE_INTERVAL</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
    <description_user>
Interval in which the periodic calibration dispatch priority shall be updated if preempted by other higher priory tasks. Unit in BT CLK LSB, 312.5 us. Default is 100 ms.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="MAX_DURATION">
    <label>MAX_DURATION</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>20</range_max>
    <description_user>
Max duration for which the periodic calibration is allowed to run in a single shot. Unit in BT CLK LSB, 312.5 us.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Reserved2">
    <label>Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="br_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="txAtten">
    <label>txAtten</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Attenuation for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="txPwrMag">
    <label>txPwrMag</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Mag for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="txPwrExp">
    <label>txPwrExp</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Exp for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="flags">
    <label>flags</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Flags for AMAM
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="dBm">
    <label>dBm</label>
    <type>int8</type>
    <range_min>-20</range_min>
    <range_max>20</range_max>
    <description_user>
Tx power in dBm
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="edr_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="txAtten">
    <label>txAtten</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Attenuation for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="txPwrMag">
    <label>txPwrMag</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Mag for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="txPwrExp">
    <label>txPwrExp</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Exp for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="flags">
    <label>flags</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Flags for AMAM
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="dBm">
    <label>dBm</label>
    <type>int8</type>
    <range_min>-20</range_min>
    <range_max>20</range_max>
    <description_user>
Tx power in dBm
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="txAtten">
    <label>txAtten</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Attenuation for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="txPwrMag">
    <label>txPwrMag</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Mag for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="txPwrExp">
    <label>txPwrExp</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Exp for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="flags">
    <label>flags</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Flags for AMAM
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="dBm">
    <label>dBm</label>
    <type>int8</type>
    <range_min>-20</range_min>
    <range_max>20</range_max>
    <description_user>
Tx power in dBm
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qhs_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="txAtten">
    <label>txAtten</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Attenuation for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="txPwrMag">
    <label>txPwrMag</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Mag for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="txPwrExp">
    <label>txPwrExp</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Exp for digital control
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="flags">
    <label>flags</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="dBm">
    <label>dBm</label>
    <type>int8</type>
    <range_min>-20</range_min>
    <range_max>20</range_max>
    <description_user>
Tx power in dBm
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="common_params_cals_enabled_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="am_cal_am">
    <label>am_cal_am</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="am_cal_pm">
    <label>am_cal_pm</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable AMPM Cal
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="mdac_cal_k1">
    <label>mdac_cal_k1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="mdac_cal_k2">
    <label>mdac_cal_k2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="mdac_cal_curve">
    <label>mdac_cal_curve</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="mdac_cal_lut1">
    <label>mdac_cal_lut1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="mdac_cal_lut2">
    <label>mdac_cal_lut2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="mdac_cal_lut3">
    <label>mdac_cal_lut3</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="1" name="cdac_cal_4g8">
    <label>cdac_cal_4g8</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="9" bit_width="1" name="cdac_cal_3g6">
    <label>cdac_cal_3g6</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="am_cal_path_delay">
    <label>am_cal_path_delay</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="1" name="vco_cal_amp">
    <label>vco_cal_amp</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="12" bit_width="1" name="rx_cal_rssi_det">
    <label>rx_cal_rssi_det</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="13" bit_width="1" name="ldo_cal_offset">
    <label>ldo_cal_offset</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="14" bit_width="1" name="power_cal">
    <label>power_cal</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="15" bit_width="1" name="mdac_cal_1p5">
    <label>mdac_cal_1p5</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="1" name="rx_cal_ip2">
    <label>rx_cal_ip2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="17" bit_width="1" name="loopback_lut_attn">
    <label>loopback_lut_attn</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
This when set, will enable the calibration of  the loopback attenuation setting during the amam and ampm calibraitons.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="18" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="19" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="20" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="21" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="22" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="23" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="25" bit_width="1" name="reserved7">
    <label>reserved7</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="26" bit_width="1" name="reserved8">
    <label>reserved8</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="27" bit_width="1" name="reserved9">
    <label>reserved9</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="28" bit_width="1" name="reserved10">
    <label>reserved10</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="29" bit_width="1" name="reserved11">
    <label>reserved11</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="30" bit_width="1" name="reserved12">
    <label>reserved12</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="31" bit_width="1" name="reserved13">
    <label>reserved13</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="vco_ampl_cal_params_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="lo_ref_bias">
    <label>lo_ref_bias</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="target_ampl_mV_rx2x">
    <label>target_ampl_mV_rx2x</label>
    <type>int16</type>
    <range_min>-32768</range_min>
    <range_max>32767</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="target_ampl_mV_tx1p5x">
    <label>target_ampl_mV_tx1p5x</label>
    <type>int16</type>
    <range_min>-32768</range_min>
    <range_max>32767</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ldo_offset_cal_params_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="meas_dac">
    <label>meas_dac</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1024</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="ctap_min">
    <label>ctap_min</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="ctap_max">
    <label>ctap_max</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="am_coeff_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="coeff">
    <label>coeff</label>
    <type>int16</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="am_coeff_0_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="coeff">
    <label>coeff</label>
    <type>int16</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="am_coeff_1_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="coeff">
    <label>coeff</label>
    <type>int16</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="am_coeff_2_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="coeff">
    <label>coeff</label>
    <type>int16</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="am_coeff_3_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="coeff">
    <label>coeff</label>
    <type>int16</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="am_coeff_4_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="coeff">
    <label>coeff</label>
    <type>int16</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="am_coeff_5_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="coeff">
    <label>coeff</label>
    <type>int16</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="am_coeff_6_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="coeff">
    <label>coeff</label>
    <type>int16</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="am_coeff_7_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="coeff">
    <label>coeff</label>
    <type>int16</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="lna_gain_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="lna_sz">
    <label>lna_sz</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="lna_atten">
    <label>lna_atten</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>31</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="lna_en_hg">
    <label>lna_en_hg</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="psrc_dlna">
    <label>psrc_dlna</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>15</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="mdac_cal_params_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="offset">
    <label>offset</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="freq_meas_time_ms">
    <label>freq_meas_time_ms</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="reserve">
    <label>reserve</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="amam_cal_params_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="lut_loopback_attn">
    <label>lut_loopback_attn</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>15</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="temp_threshold">
    <label>temp_threshold</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="sweep_loopback_disabled">
    <label>sweep_loopback_disabled</label>
    <type>sweep_loopback_disabled_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="FM_LO">
    <label>FM_LO</label>
    <type>fm_lo_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="n_samples_dc_avg">
    <label>n_samples_dc_avg</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Number of samples of DC notch output used for averaging.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="psrc_mx_itrim">
    <label>psrc_mx_itrim</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="n_samples_fm">
    <label>n_samples_fm</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Number of IQ samples used for FM in bytes. So this value/4 will be the number of words filled with randon data.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="ampm_cal_params_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="num_extp_pnts">
    <label>num_extp_pnts</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>17</range_max>
    <description_user>
Number of points to be extrapolated.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="compensation_type">
    <label>compensation_type</label>
    <type>compensation_type_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="phase_offset">
    <label>phase_offset</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Shift the computed phase correction to be centered around this value.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="dac_sweep">
    <label>dac_sweep</label>
    <type>dac_sweep_t</type>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="rx_control_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="RX ON State">
    <label>RX ON State</label>
    <type>rx_on_state_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="RX OFF State">
    <label>RX OFF State</label>
    <type>rx_off_state_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="RX ON Time">
    <label>RX ON Time</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="RX OFF Time">
    <label>RX OFF Time</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="tx_control_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="TX ON STATE">
    <label>TX ON STATE</label>
    <type>tx_on_state_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="TX OFF STATE">
    <label>TX OFF STATE</label>
    <type>tx_off_state_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="TX ON TIME">
    <label>TX ON TIME</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="TX OFF TIME">
    <label>TX OFF TIME</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="txrx_control_tx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="TXRX TX ON STATE">
    <label>TXRX TX ON STATE</label>
    <type>txrx_tx_on_state_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="TXRX TX OFF STATE">
    <label>TXRX TX OFF STATE</label>
    <type>txrx_tx_off_state_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="TXRX TX ON TIME">
    <label>TXRX TX ON TIME</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="TXRX TX OFF TIME">
    <label>TXRX TX OFF TIME</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="txrx_control_rx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="TXRX RX ON STATE">
    <label>TXRX RX ON STATE</label>
    <type>txrx_rx_on_state_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="TXRX RX OFF STATE">
    <label>TXRX RX OFF STATE</label>
    <type>txrx_rx_off_state_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="TXRX RX ON TIME">
    <label>TXRX RX ON TIME</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="TXRX RX OFF TIME">
    <label>TXRX RX OFF TIME</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="rcu_dynamic_txrx_control2_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="TXRX Control Tx">
    <label>TXRX Control Tx</label>
    <type>txrx_control_tx_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="TXRX Control Rx">
    <label>TXRX Control Rx</label>
    <type>txrx_control_rx_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="common_cal_result_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="cal_temp">
    <label>cal_temp</label>
    <type>int16</type>
    <range_min>-273</range_min>
    <range_max>2000</range_max>
    <description_user>
Temperature at which calibration is done
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="cdac_lut_rx_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="base">
    <label>base</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>127</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="48" name="cdac_rx_threshold">
    <label>cdac_rx_threshold</label>
    <type>uint16</type>
    <array_length_min>3</array_length_min>
    <array_length_max>3</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="cdac_lut_tx_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="base">
    <label>base</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>127</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="48" name="cdac_tx_threshold">
    <label>cdac_tx_threshold</label>
    <type>uint16</type>
    <array_length_min>3</array_length_min>
    <array_length_max>3</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="vco_amp_cal_results_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="bias_trim_rx">
    <label>bias_trim_rx</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>32</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="bias_trim_tx">
    <label>bias_trim_tx</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>32</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="ref_trim">
    <label>ref_trim</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="am_delay_cal_results_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="mdel">
    <label>mdel</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="p1del">
    <label>p1del</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="p2del">
    <label>p2del</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="64" name="frac_delay_coeff">
    <label>frac_delay_coeff</label>
    <type>int8</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="8" name="mdel_64msps">
    <label>mdel_64msps</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="120" bit_width="64" name="frac_dly_coeff_64msps">
    <label>frac_dly_coeff_64msps</label>
    <type>int8</type>
    <array_length_min>8</array_length_min>
    <array_length_max>8</array_length_max>
    <is_array>1</is_array>
  </structure_element>

  <structure_element lsb_bit_position="184" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="mdac_cal_results_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="k1">
    <label>k1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="k2">
    <label>k2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="lut1">
    <label>lut1</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1024</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="lut2">
    <label>lut2</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1024</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="lut3">
    <label>lut3</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1024</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="272" name="curve">
    <label>curve</label>
    <type>uint16</type>
    <array_length_min>17</array_length_min>
    <array_length_max>17</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="comp_t">
  <structure_element lsb_bit_position="0" bit_width="272" name="table">
    <label>table</label>
    <type>uint16</type>
    <array_length_min>17</array_length_min>
    <array_length_max>17</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="table_0_t">
  <structure_element lsb_bit_position="0" bit_width="272" name="table">
    <label>table</label>
    <type>uint16</type>
    <array_length_min>17</array_length_min>
    <array_length_max>17</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="table_1_t">
  <structure_element lsb_bit_position="0" bit_width="272" name="table">
    <label>table</label>
    <type>uint16</type>
    <array_length_min>17</array_length_min>
    <array_length_max>17</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="table_2_t">
  <structure_element lsb_bit_position="0" bit_width="272" name="table">
    <label>table</label>
    <type>uint16</type>
    <array_length_min>17</array_length_min>
    <array_length_max>17</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="table_3_t">
  <structure_element lsb_bit_position="0" bit_width="272" name="table">
    <label>table</label>
    <type>uint16</type>
    <array_length_min>17</array_length_min>
    <array_length_max>17</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="table_t">
  <structure_element lsb_bit_position="0" bit_width="272" name="table">
    <label>table</label>
    <type>uint16</type>
    <array_length_min>17</array_length_min>
    <array_length_max>17</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="table_array_t">
  <structure_element lsb_bit_position="0" bit_width="272" name="table_0">
    <label>table_0</label>
    <type>table_0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="272" bit_width="272" name="table_1">
    <label>table_1</label>
    <type>table_1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="544" bit_width="272" name="table_2">
    <label>table_2</label>
    <type>table_2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="816" bit_width="272" name="table_3">
    <label>table_3</label>
    <type>table_3_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="temp_comp_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="absolute">
    <label>absolute</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="internal">
    <label>internal</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Internal power reduction factor, in 1/16ths of dBm
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="edr_temp_comp_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="absolute">
    <label>absolute</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="internal">
    <label>internal</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Internal power reduction factor, in 1/16ths of dBm
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_temp_lut_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="absolute">
    <label>absolute</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="internal">
    <label>internal</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="qhs_temp_lut_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="absolute">
    <label>absolute</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="internal">
    <label>internal</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="default_voice_settings_default_settings_t">
  <structure_element lsb_bit_position="0" bit_width="2" name="Air Format">
    <label>Air Format</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
Bits0_1: Air Format (0=CVSD, 1=u-law,2=A-law)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="3" name="Linear PCM MSB">
    <label>Linear PCM MSB</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
    <description_user>
Bits2_4: Linear PCM MSB (0=MSB is bit 15, 1=MSB is bit 14 etc.)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Linear size">
    <label>Linear size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit5: Linear size (0=8-bit, 1=16-bit)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="2" name="Input Sign Format">
    <label>Input Sign Format</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
Bits6_7: Input Sign Format (0=1's comp, 1=2's comp, 2=signed magnitude, 3=CVSD (SiW Vendor Specific)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="2" name="Input Format">
    <label>Input Format</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
Bits8_9: Input Format (0=Linear, 1=u-law,2=A-law)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="Audio SCO routing">
    <label>Audio SCO routing</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit 10: Create audio routing automatically on SCO link creation for Hydra architecture (1 - BTSS creates routing; 0 - do not create routing, another subsystem is expected to do this)
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="5" name="Undefined">
    <label>Undefined</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>31</range_max>
    <description_user>
Bits11_15: Undefined
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="options_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="EDP Vote Enable">
    <label>EDP Vote Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enables bitwise majority voting as part of Rx Erroneous Data Processing.  Disabling will eliminate some CPU-intensive processing, at the cost of quality.  Default=1.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="NBS PLC Enable">
    <label>NBS PLC Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enables NBS Packet Loss Concealment. Default=1.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NBS PLC Replace Single eSCO CRC Failure">
    <label>NBS PLC Replace Single eSCO CRC Failure</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
If NBS PLC is enabled, this flag controls the handling of an eSCO window in which a single eSCO packet is received with a CRC failure (and all other sSCO packets were lost).  If set to 1, then such a packet is discarded in favor of PLC.  If set to 0, then such a packet is consumed as voice data.  Default=1.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="WBS PLC Enable">
    <label>WBS PLC Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enables WBS Packet Loss Concealment. Default=1.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Use MSBC For Transp Voice_Setting">
    <label>Use MSBC For Transp Voice_Setting</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
If set, translates a legacy HCI Voice_Setting parameter of &quot;Transparent Data&quot; to &quot;mSBC&quot; instead, to force controller-based encoding/decoding of mSBC (WBS) voice data.  If clear, a legacy Voice_Setting parameter of &quot;Transparent Data&quot; will be treated as transparent which will disable controller-based encoding/decoding.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Use MSBC For Transp Coding_Format">
    <label>Use MSBC For Transp Coding_Format</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
If set, translates an HCI Enhanced Setup (Accept) Synchronous Connection Command Transmit_Coding_Format/Receive_Coding_Format parameter of &quot;Transparent&quot; to &quot;mSBC&quot; instead.  If clear, the Transmit_Coding_Format/Receive_Coding_Format parameter will be treated as transparent which will disable controller-based encoding/decoding.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="NBS Sample Doubling Enable">
    <label>NBS Sample Doubling Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
If set, then the 16 kHz WBS sample rate is applied to NBS streams over the ACI transport. NBS samples are doubled with the expectation that the receiving side will only process every other sample.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="eSCO RTSC Enable">
    <label>eSCO RTSC Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enables RTSC (HW Based EDP) for eSCO packets.  Default=0.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="sco_audio_routing_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="SCO Audio route">
    <label>SCO Audio route</label>
    <type>sco_audio_route_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Channel">
    <label>Channel</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
I2S / Codec channel  or slot for PCM
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Instance">
    <label>Instance</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
I2S / PCM instance. Not applicable for Codec
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Reserved">
    <label>Reserved</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="loopback_cal_params_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="amam_cal_attn">
    <label>amam_cal_attn</label>
    <type>uint8</type>
    <array_length_min>16</array_length_min>
    <array_length_max>16</array_length_max>
    <is_array>1</is_array>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="8" name="iq_imb_gain">
    <label>iq_imb_gain</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Value of the gain factor in the IQ imbalance correction to be used in the loopback configuration
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="136" bit_width="8" name="iq_imb_phase">
    <label>iq_imb_phase</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Value of the phase correction to be applied for IQ imbalance correction in the loop back configuration.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="config_rtsc_config_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Enable Common ACL RTSC Instance">
    <label>Enable Common ACL RTSC Instance</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Common ACL RTSC Instance
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Enable LE ISO RTSC">
    <label>Enable LE ISO RTSC</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable RTSC for LE ISO. RTSC for LE ISO can be supported only if the RTSC HW supports Weak Bit Mask generation.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="up_rate_rssi_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Q2">
    <label>Q2</label>
    <type>int8</type>
    <range_min>-100</range_min>
    <range_max>100</range_max>
    <description_user>
QHS-2 Sensitivity
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Q3">
    <label>Q3</label>
    <type>int8</type>
    <range_min>-100</range_min>
    <range_max>100</range_max>
    <description_user>
QHS-3 Sensitivity
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Q4">
    <label>Q4</label>
    <type>int8</type>
    <range_min>-100</range_min>
    <range_max>100</range_max>
    <description_user>
QHS-4 Sensitivity
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Q5">
    <label>Q5</label>
    <type>int8</type>
    <range_min>-100</range_min>
    <range_max>100</range_max>
    <description_user>
QHS-5 Sensitivity
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Q6">
    <label>Q6</label>
    <type>int8</type>
    <range_min>-100</range_min>
    <range_max>100</range_max>
    <description_user>
QHS-6 Sensitivity
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Pad">
    <label>Pad</label>
    <type>int8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="compatibility_control_compatibility_control_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="USB_WHCK_TEST">
    <label>USB_WHCK_TEST</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0: Disable the whck test workaround; 1: Enable the whck test workaround
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="SUPPORT_SIMULTANEOUS_LE_HOST">
    <label>SUPPORT_SIMULTANEOUS_LE_HOST</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0: Disable Simultaneous LE Host Support; 1: Enable Simultaneous LE Host Support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="critical_event_reserved_count_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="large">
    <label>large</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Reserved count in Large Event Pool.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="medium">
    <label>medium</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Reserved count in Medium Event Pool.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="small">
    <label>small</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Reserved count in Small Event Pool.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="reserved">
    <label>reserved</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
reserved
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="statistic_le_tx_duty_cycle_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Enable">
    <label>Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
enable the feature: 0: disable, 1: enable
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="DebugEnable">
    <label>DebugEnable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
enable debug log, 0: disable, 1: enable
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="AnalysisPeriod">
    <label>AnalysisPeriod</label>
    <type>uint16</type>
    <range_min>72</range_min>
    <range_max>65535</range_max>
    <description_user>
Analysis Period in multiples of 1.25ms.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="NotifyPeriod">
    <label>NotifyPeriod</label>
    <type>uint16</type>
    <range_min>72</range_min>
    <range_max>65535</range_max>
    <description_user>
Notify Period in multiples of 1.25ms.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="Reserved0">
    <label>Reserved0</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="32" name="Reserved1">
    <label>Reserved1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="128" name="DutyCycleThreshold">
    <label>DutyCycleThreshold</label>
    <type>uint8</type>
    <array_length_min>16</array_length_min>
    <array_length_max>16</array_length_max>
    <is_array>1</is_array>
  </structure_element>

</struct_def>

<struct_def struct_name="xsco_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="Max SDU Size">
    <label>Max SDU Size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max eSCO SDU size in bytes.  Typically 120 if QHS is supported, else 60.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="Max Sample Buf Size">
    <label>Max Sample Buf Size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max eSCO Sample Buffer size in bytes.  Typically 240 if QHS is supported, else 120.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_0_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_1_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_2_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_3_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_4_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_5_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_6_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_7_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_8_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_9_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_10_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_11_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_12_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_13_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_14_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_15_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="ToAir">
    <label>ToAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max ToAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="FromAir">
    <label>FromAir</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max FromAir SDU size in bytes for this stream.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="iso_audio_routing_0_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="ISO Audio route">
    <label>ISO Audio route</label>
    <type>iso_audio_route_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Channel">
    <label>Channel</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
I2S / Codec channel  or slot for PCM
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Instance">
    <label>Instance</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
I2S / PCM instance. Not applicable for Codec
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Coding">
    <label>Coding</label>
    <type>coding_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="Flags">
    <label>Flags</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="Sample rate">
    <label>Sample rate</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Sample rate divided by 25
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="Sample size">
    <label>Sample size</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="LC3 packet len">
    <label>LC3 packet len</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="LC3 buffer size">
    <label>LC3 buffer size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="8" name="Reserved2">
    <label>Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="120" bit_width="8" name="Reserved3">
    <label>Reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="LC3 ttp latency">
    <label>LC3 ttp latency</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="iso_audio_routing_1_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="ISO Audio route">
    <label>ISO Audio route</label>
    <type>iso_audio_route_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Channel">
    <label>Channel</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
I2S / Codec channel  or slot for PCM
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Instance">
    <label>Instance</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
I2S / PCM instance. Not applicable for Codec
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Coding">
    <label>Coding</label>
    <type>coding_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="Flags">
    <label>Flags</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="Sample rate">
    <label>Sample rate</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Sample rate divided by 25
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="Sample size">
    <label>Sample size</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="LC3 packet len">
    <label>LC3 packet len</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="LC3 buffer size">
    <label>LC3 buffer size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="8" name="Reserved2">
    <label>Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="120" bit_width="8" name="Reserved3">
    <label>Reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="LC3 ttp latency">
    <label>LC3 ttp latency</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="iso_audio_routing_2_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="ISO Audio route">
    <label>ISO Audio route</label>
    <type>iso_audio_route_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Channel">
    <label>Channel</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
I2S / Codec channel  or slot for PCM
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Instance">
    <label>Instance</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
I2S / PCM instance. Not applicable for Codec
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Coding">
    <label>Coding</label>
    <type>coding_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="Flags">
    <label>Flags</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="Sample rate">
    <label>Sample rate</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Sample rate divided by 25
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="Sample size">
    <label>Sample size</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="LC3 packet len">
    <label>LC3 packet len</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="LC3 buffer size">
    <label>LC3 buffer size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="8" name="Reserved2">
    <label>Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="120" bit_width="8" name="Reserved3">
    <label>Reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="LC3 ttp latency">
    <label>LC3 ttp latency</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="iso_audio_routing_3_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="ISO Audio route">
    <label>ISO Audio route</label>
    <type>iso_audio_route_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Channel">
    <label>Channel</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
I2S / Codec channel  or slot for PCM
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Instance">
    <label>Instance</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
I2S / PCM instance. Not applicable for Codec
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Coding">
    <label>Coding</label>
    <type>coding_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="Flags">
    <label>Flags</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="Sample rate">
    <label>Sample rate</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Sample rate divided by 25
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="Sample size">
    <label>Sample size</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="LC3 packet len">
    <label>LC3 packet len</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="LC3 buffer size">
    <label>LC3 buffer size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="8" name="Reserved2">
    <label>Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="120" bit_width="8" name="Reserved3">
    <label>Reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="LC3 ttp latency">
    <label>LC3 ttp latency</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="wber_thresholds_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="Switch down 2-DH3">
    <label>Switch down 2-DH3</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="Switch down 2-DH5">
    <label>Switch down 2-DH5</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="Switch down 3-DH1">
    <label>Switch down 3-DH1</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="Switch down 3-DH3">
    <label>Switch down 3-DH3</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="16" name="Switch down 3-DH5">
    <label>Switch down 3-DH5</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="Switch up 2-DH1 low">
    <label>Switch up 2-DH1 low</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="Switch up 2-DH1 high">
    <label>Switch up 2-DH1 high</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="16" name="Switch up 2-DH3">
    <label>Switch up 2-DH3</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="16" name="Switch up 2-DH5">
    <label>Switch up 2-DH5</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="144" bit_width="16" name="Switch up 3-DH1">
    <label>Switch up 3-DH1</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="16" name="Switch up 3-DH3">
    <label>Switch up 3-DH3</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="lo_loop_gain_ctrl1_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="hg_cp_bias_current_tx2x">
    <label>hg_cp_bias_current_tx2x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="hg_cp_ibias_tx2x">
    <label>hg_cp_ibias_tx2x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="hg_lpf_bw_tx2x">
    <label>hg_lpf_bw_tx2x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>128</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="lo_loop_gain_ctrl2_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="lg_cp_bias_current_tx2x">
    <label>lg_cp_bias_current_tx2x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="lg_cp_ibias_tx2x">
    <label>lg_cp_ibias_tx2x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="lg_lpf_bw_tx2x">
    <label>lg_lpf_bw_tx2x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>128</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="lo_loop_gain_ctrl3_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="hg_cp_bias_current_tx1p5x">
    <label>hg_cp_bias_current_tx1p5x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="hg_cp_ibias_tx1p5x">
    <label>hg_cp_ibias_tx1p5x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="hg_lpf_bw_tx1p5x">
    <label>hg_lpf_bw_tx1p5x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>128</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="lo_loop_gain_ctrl4_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="lg_cp_bias_current_tx1p5x">
    <label>lg_cp_bias_current_tx1p5x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="lg_cp_ibias_tx1p5x">
    <label>lg_cp_ibias_tx1p5x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="lg_lpf_bw_tx1p5x">
    <label>lg_lpf_bw_tx1p5x</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>128</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="rx_mdm_if_loside_en_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="RX_MDM_IF_LOSIDE_EN_0">
    <label>RX_MDM_IF_LOSIDE_EN_0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="RX_MDM_IF_LOSIDE_EN_1">
    <label>RX_MDM_IF_LOSIDE_EN_1</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="16" name="RX_MDM_IF_LOSIDE_EN_2">
    <label>RX_MDM_IF_LOSIDE_EN_2</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="Reserved_1">
    <label>Reserved_1</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="rx_mdm_spur_chan_idx_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="RX_MDM_SPUR_CHAN_IDX_7_0">
    <label>RX_MDM_SPUR_CHAN_IDX_7_0</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="RX_MDM_SPUR_CHAN_IDX_15_8">
    <label>RX_MDM_SPUR_CHAN_IDX_15_8</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="32" name="RX_MDM_SPUR_CHAN_IDX_23_16">
    <label>RX_MDM_SPUR_CHAN_IDX_23_16</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="32" name="RX_MDM_SPUR_CHAN_IDX_31_24">
    <label>RX_MDM_SPUR_CHAN_IDX_31_24</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="RX_MDM_SPUR_CHAN_IDX_39_32">
    <label>RX_MDM_SPUR_CHAN_IDX_39_32</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="32" name="RX_MDM_SPUR_CHAN_IDX_47_40">
    <label>RX_MDM_SPUR_CHAN_IDX_47_40</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="32" name="RX_MDM_SPUR_CHAN_IDX_55_48">
    <label>RX_MDM_SPUR_CHAN_IDX_55_48</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="224" bit_width="32" name="RX_MDM_SPUR_CHAN_IDX_63_56">
    <label>RX_MDM_SPUR_CHAN_IDX_63_56</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="256" bit_width="32" name="RX_MDM_SPUR_CHAN_IDX_71_64">
    <label>RX_MDM_SPUR_CHAN_IDX_71_64</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="288" bit_width="32" name="RX_MDM_SPUR_CHAN_IDX_78_72">
    <label>RX_MDM_SPUR_CHAN_IDX_78_72</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="gain_table_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="RX_LNA_SZ">
    <label>RX_LNA_SZ</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="RX_LNA_ATTN">
    <label>RX_LNA_ATTN</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>31</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="RX_LNA_EN_HG">
    <label>RX_LNA_EN_HG</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="PSRC_DLNA">
    <label>PSRC_DLNA</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>15</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="gfsk_rem_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="high_power">
    <label>high_power</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>127</range_max>
    <description_user>
Remembrance factor/forget factor to be used at high RSSI levels while receiving GFSK modulated packets.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="low_power">
    <label>low_power</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>127</range_max>
    <description_user>
Remembrance factor/forget factor to be used at low RSSI levels  while receiving GFSK modulated packets.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="pwr_thresh">
    <label>pwr_thresh</label>
    <type>int8</type>
    <range_min>-110</range_min>
    <range_max>0</range_max>
    <description_user>
Power threshold to change the remembrance factor from high power to low power while receiving GFSK modulated packets.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le2m_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="high_power">
    <label>high_power</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>127</range_max>
    <description_user>
Remembrance factor/forget factor to be used at high RSSI levels while receiving LE2M packets.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="low_power">
    <label>low_power</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>127</range_max>
    <description_user>
Remembrance factor/forget factor to be used at low RSSI levels while receiving LE2M packets.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="pwr_thresh">
    <label>pwr_thresh</label>
    <type>int8</type>
    <range_min>-110</range_min>
    <range_max>0</range_max>
    <description_user>
Power threshold to change the remembrance factor from high power to low power while receiving LE2M packets.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="edr2_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="high_power">
    <label>high_power</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>127</range_max>
    <description_user>
Remembrance factor/forget factor to be used at high RSSI levels while receiving DQPSK modulated packets.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="low_power">
    <label>low_power</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>127</range_max>
    <description_user>
Remembrance factor/forget factor to be used at low RSSI levels while receiving DQPSK modulated packets.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="pwr_thresh">
    <label>pwr_thresh</label>
    <type>int8</type>
    <range_min>-110</range_min>
    <range_max>0</range_max>
    <description_user>
Power threshold to change the remembrance factor from high power to low power while receiving DQPSK modulated packets.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="edr3_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="high_power">
    <label>high_power</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>127</range_max>
    <description_user>
Remembrance factor/forget factor to be used at high RSSI levels while receiving D8PSK modulated packets.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="low_power">
    <label>low_power</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>127</range_max>
    <description_user>
Remembrance factor/forget factor to be used at low RSSI levels while receiving D8PSK modulated packets.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="pwr_thresh">
    <label>pwr_thresh</label>
    <type>int8</type>
    <range_min>-110</range_min>
    <range_max>0</range_max>
    <description_user>
Power threshold to change the remembrance factor from high power to low power while receiving D8PSK modulated packets.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="gain_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="lna_sz">
    <label>lna_sz</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>7</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="lna_attn">
    <label>lna_attn</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>31</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="lna_en_hg">
    <label>lna_en_hg</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="psrc_dlna">
    <label>psrc_dlna</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>15</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ip2_cal_results_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="vco_bias_trim">
    <label>vco_bias_trim</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>31</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="i_cal">
    <label>i_cal</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="q_cal">
    <label>q_cal</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="options_flags_ext_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Prefill Nontransparent ToAir Data">
    <label>Prefill Nontransparent ToAir Data</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
For non-transparent ToAir data, enables prefilling of the encoding buffer with a default pattern that will get transmitted OTA if the ToAir ISR does not complete its encoding in time.  This relaxes the deadline for encoding in the ToAir ISR:  the SLC will configure the LC HW with the address and length of this stuff pattern buffer, then the ToAir ISR can continue to run to complete its encoding of real data which will overwrite this default stuff pattern in the same buffer.  If the encoding doesn't complete before the LC HW starts transmitting OTA, then this stuff pattern will get transmitted instead.  Note that this runs the risk of transmitting different data in retransmission slots. Default=0.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="LE ISO RTSC Enable">
    <label>LE ISO RTSC Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enables RTSC (HW Based EDP) for LE ISO packets.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Hard Clash Detection">
    <label>Hard Clash Detection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Uses a hard clash detection to select when to reject eSCO parameters with RESERVED_SLOT_VIOLATION or POSSIBLE_BUT_NOT_PREFERRED
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Peer eSCO Accept Option">
    <label>Peer eSCO Accept Option</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
When set will accept non hard clashing peer eSCO parameters rather than downgrade eSCO by selecting a new combination. Only applicable if &quot;Hard Clash Detection&quot; bit is set to 1.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="T_18_ESCO_SUPPORT">
    <label>T_18_ESCO_SUPPORT</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enables support for T=18 eSCO
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="ForceVoicePath">
    <label>ForceVoicePath</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
When forceNvmPath=1, ignore  enhanceSCO.data_path=1~0xFE, which means vsc, when enhancesco_data_path is 0 or 0xff, follow btspec.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="predefpool_ext_cfg_block_cfg_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Section">
    <label>Section</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="prealloc">
    <label>prealloc</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="NVMSection">
    <label>NVMSection</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="br_packet_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Fine Power Adjust PL0">
    <label>Fine Power Adjust PL0</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL0.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 0.  Fine Power Adjust PL0 = Actual Power PL0 - 4 * Coarse Power PL0.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Fine Power Adjust PL1">
    <label>Fine Power Adjust PL1</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL1.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 1.  Fine Power Adjust PL1 = Actual Power PL1 - 4 * Coarse Power PL1.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Fine Power Adjust PL2">
    <label>Fine Power Adjust PL2</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL2.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 2.  Fine Power Adjust PL2 = Actual Power PL2 - 4 * Coarse Power PL2.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Fine Power Adjust PL3">
    <label>Fine Power Adjust PL3</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL3.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 3.  Fine Power Adjust PL3 = Actual Power PL3 - 4 * Coarse Power PL3.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Fine Power Adjust PL4">
    <label>Fine Power Adjust PL4</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL4.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 4.  Fine Power Adjust PL4 = Actual Power PL4 - 4 * Coarse Power PL4.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Fine Power Adjust PL5">
    <label>Fine Power Adjust PL5</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL5.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 5.  Fine Power Adjust PL5 = Actual Power PL5 - 4 * Coarse Power PL5.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="Fine Power Adjust PL6">
    <label>Fine Power Adjust PL6</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL6.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 6.  Fine Power Adjust PL6 = Actual Power PL6 - 4 * Coarse Power PL6.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Fine Power Adjust PL7">
    <label>Fine Power Adjust PL7</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL7.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 7.  Fine Power Adjust PL7 = Actual Power PL7 - 4 * Coarse Power PL7.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="Fine Power Adjust PL8">
    <label>Fine Power Adjust PL8</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL8.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 8.  Fine Power Adjust PL8 = Actual Power PL8 - 4 * Coarse Power PL8.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="Fine Power Adjust PL9">
    <label>Fine Power Adjust PL9</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL9.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 9.  Fine Power Adjust PL9 = Actual Power PL9 - 4 * Coarse Power PL9.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="edr_packet_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Fine Power Adjust PL0">
    <label>Fine Power Adjust PL0</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL0.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 0.  Fine Power Adjust PL0 = Actual Power PL0 - 4 * Coarse Power PL0.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Fine Power Adjust PL1">
    <label>Fine Power Adjust PL1</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL1.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 1.  Fine Power Adjust PL1 = Actual Power PL1 - 4 * Coarse Power PL1.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Fine Power Adjust PL2">
    <label>Fine Power Adjust PL2</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL2.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 2.  Fine Power Adjust PL2 = Actual Power PL2 - 4 * Coarse Power PL2.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Fine Power Adjust PL3">
    <label>Fine Power Adjust PL3</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL3.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 3.  Fine Power Adjust PL3 = Actual Power PL3 - 4 * Coarse Power PL3.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Fine Power Adjust PL4">
    <label>Fine Power Adjust PL4</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL4.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 4.  Fine Power Adjust PL4 = Actual Power PL4 - 4 * Coarse Power PL4.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Fine Power Adjust PL5">
    <label>Fine Power Adjust PL5</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL5.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 5.  Fine Power Adjust PL5 = Actual Power PL5 - 4 * Coarse Power PL5.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="Fine Power Adjust PL6">
    <label>Fine Power Adjust PL6</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL6.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 6.  Fine Power Adjust PL6 = Actual Power PL6 - 4 * Coarse Power PL6.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Fine Power Adjust PL7">
    <label>Fine Power Adjust PL7</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL7.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 7.  Fine Power Adjust PL7 = Actual Power PL7 - 4 * Coarse Power PL7.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="Fine Power Adjust PL8">
    <label>Fine Power Adjust PL8</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL8.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 8.  Fine Power Adjust PL8 = Actual Power PL8 - 4 * Coarse Power PL8.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="Fine Power Adjust PL9">
    <label>Fine Power Adjust PL9</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL9.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 9.  Fine Power Adjust PL9 = Actual Power PL9 - 4 * Coarse Power PL9.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="le_packet_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Fine Power Adjust PL0">
    <label>Fine Power Adjust PL0</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL0.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 0.  Fine Power Adjust PL0 = Actual Power PL0 - 4 * Coarse Power PL0.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Fine Power Adjust PL1">
    <label>Fine Power Adjust PL1</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL1.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 1.  Fine Power Adjust PL1 = Actual Power PL1 - 4 * Coarse Power PL1.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Fine Power Adjust PL2">
    <label>Fine Power Adjust PL2</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL2.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 2.  Fine Power Adjust PL2 = Actual Power PL2 - 4 * Coarse Power PL2.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Fine Power Adjust PL3">
    <label>Fine Power Adjust PL3</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL3.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 3.  Fine Power Adjust PL3 = Actual Power PL3 - 4 * Coarse Power PL3.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Fine Power Adjust PL4">
    <label>Fine Power Adjust PL4</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL4.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 4.  Fine Power Adjust PL4 = Actual Power PL4 - 4 * Coarse Power PL4.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Fine Power Adjust PL5">
    <label>Fine Power Adjust PL5</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL5.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 5.  Fine Power Adjust PL5 = Actual Power PL5 - 4 * Coarse Power PL5.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="Fine Power Adjust PL6">
    <label>Fine Power Adjust PL6</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL6.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 6.  Fine Power Adjust PL6 = Actual Power PL6 - 4 * Coarse Power PL6.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Fine Power Adjust PL7">
    <label>Fine Power Adjust PL7</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL7.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 7.  Fine Power Adjust PL7 = Actual Power PL7 - 4 * Coarse Power PL7.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="Fine Power Adjust PL8">
    <label>Fine Power Adjust PL8</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL8.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 8.  Fine Power Adjust PL8 = Actual Power PL8 - 4 * Coarse Power PL8.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="Fine Power Adjust PL9">
    <label>Fine Power Adjust PL9</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL9.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 9.  Fine Power Adjust PL9 = Actual Power PL9 - 4 * Coarse Power PL9.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="lehs_packet_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Fine Power Adjust PL0">
    <label>Fine Power Adjust PL0</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL0.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 0.  Fine Power Adjust PL0 = Actual Power PL0 - 4 * Coarse Power PL0.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Fine Power Adjust PL1">
    <label>Fine Power Adjust PL1</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL1.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 1.  Fine Power Adjust PL1 = Actual Power PL1 - 4 * Coarse Power PL1.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Fine Power Adjust PL2">
    <label>Fine Power Adjust PL2</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL2.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 2.  Fine Power Adjust PL2 = Actual Power PL2 - 4 * Coarse Power PL2.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Fine Power Adjust PL3">
    <label>Fine Power Adjust PL3</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL3.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 3.  Fine Power Adjust PL3 = Actual Power PL3 - 4 * Coarse Power PL3.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Fine Power Adjust PL4">
    <label>Fine Power Adjust PL4</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL4.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 4.  Fine Power Adjust PL4 = Actual Power PL4 - 4 * Coarse Power PL4.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Fine Power Adjust PL5">
    <label>Fine Power Adjust PL5</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL5.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 5.  Fine Power Adjust PL5 = Actual Power PL5 - 4 * Coarse Power PL5.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="Fine Power Adjust PL6">
    <label>Fine Power Adjust PL6</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL6.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 6.  Fine Power Adjust PL6 = Actual Power PL6 - 4 * Coarse Power PL6.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Fine Power Adjust PL7">
    <label>Fine Power Adjust PL7</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL7.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 7.  Fine Power Adjust PL7 = Actual Power PL7 - 4 * Coarse Power PL7.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="Fine Power Adjust PL8">
    <label>Fine Power Adjust PL8</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL8.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 8.  Fine Power Adjust PL8 = Actual Power PL8 - 4 * Coarse Power PL8.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="Fine Power Adjust PL9">
    <label>Fine Power Adjust PL9</label>
    <type>int8</type>
    <range_min>-128</range_min>
    <range_max>127</range_max>
    <description_user>
Fine Power Adjust for PL9.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 9.  Fine Power Adjust PL9 = Actual Power PL9 - 4 * Coarse Power PL9.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="scheduler_control_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="A2DP Disable Backoff Polling">
    <label>A2DP Disable Backoff Polling</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
By default, the same polling method is used by the master in both ACL and A2DP modes - exponential backoff. To allow a larger gap between POLLs sent in A2DP mode, set this flag to 1, and then the master will wait Tpoll before sending the next POLL when the slave doesn't send data.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="MCC poll manager policy">
    <label>MCC poll manager policy</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
By default, for MCC, if long time no sync, put task into inactive queue instead of suspend queue.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="acl_relay_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Barge In">
    <label>Barge In</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable truncated page scan on primary during ACL relay. This provides incoming connection indications to host without making connections.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved6">
    <label>reserved6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="link_quality_parameters_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="avgLatency">
    <label>avgLatency</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="activeConnCount">
    <label>activeConnCount</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="avgDenialDuration">
    <label>avgDenialDuration</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="32" name="flowOnOffGap">
    <label>flowOnOffGap</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="a2dp_link_quality_parameters_concurrency_scenario_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Paging">
    <label>Paging</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0 -&gt; Do not reduce bit rate when Paging is active,  1-&gt; Reduce bit rate to moderate level  if paging is active
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Inquiry">
    <label>Inquiry</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
0 -&gt; Do not reduce bit rate when Inquiry is active,  1-&gt; Reduce bit rate to moderate level  if Inquiry is active
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="a2dp_config_a2dp_feature_control_flag_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="A2DP_DISALLOW_3M_PKT_BASEDON_LINKQUALITY_CONTROL_FLAG">
    <label>A2DP_DISALLOW_3M_PKT_BASEDON_LINKQUALITY_CONTROL_FLAG</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
control flag to enable/disable 3M packet usage for a2dp based on link quality
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="SPLIT_A2DP_FEEDBACK_HCI">
    <label>SPLIT_A2DP_FEEDBACK_HCI</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Flag is used to config A2DP link quality feedback mode.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="SPLIT_A2DP_SBC_SUBFRAME_MODE">
    <label>SPLIT_A2DP_SBC_SUBFRAME_MODE</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
SBC encoded data is arrived per frame or not.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="channel_search_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="min_channel">
    <label>min_channel</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>78</range_max>
    <description_user>
Channels below this will be discarded in frequency sweep
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max_channel">
    <label>max_channel</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>78</range_max>
    <description_user>
Channels above this will be discarded in frequency sweep
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="spacing">
    <label>spacing</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>78</range_max>
    <description_user>
Spacing between channel hop
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="num_iterations">
    <label>num_iterations</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>79</range_max>
    <description_user>
Number of hop iterations before exiting channel sweep
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="hydra_audio_routing_adaptive_le_flags_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Extended Audio Format Enable">
    <label>Extended Audio Format Enable</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Use extended format to deliver frames to the audio subsystem.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="High Data Rate Enabled">
    <label>High Data Rate Enabled</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable HDR (High Data Rate) transport support
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="debug_parameters_ext_llm_panic_on_connection_type_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Panic On BREDR link Connection timeout">
    <label>Panic On BREDR link Connection timeout</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit0: Enable Panic on BREDR connection.  0==Panic disabled (default), 1==Panic Enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="Panic On LE link Connection timeout">
    <label>Panic On LE link Connection timeout</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit1: Enable Panic on LE connection.  0==Panic disabled (default), 1==Panic Enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Panic On CIS link Connection timeout">
    <label>Panic On CIS link Connection timeout</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit2: Enable Panic on CIS connection.  0==Panic disabled (default), 1==Panic Enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Panic On BIS link Connection timeout">
    <label>Panic On BIS link Connection timeout</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit3: Enable Panic on BIS connection.  0==Panic disabled (default), 1==Panic Enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="Panic On Mirror link Connection timeout">
    <label>Panic On Mirror link Connection timeout</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit4: Enable Panic on Mirror connection.  0==Panic disabled (default), 1==Panic Enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="Panic On PA Connection timeout">
    <label>Panic On PA Connection timeout</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit5: Enable Panic on PA connection.  0==Panic disabled (default), 1==Panic Enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="Panic On Buddy Link Connection timeout">
    <label>Panic On Buddy Link Connection timeout</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit6: Enable Panic on Buddy Link connection.  0==Panic disabled (default), 1==Panic Enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="Panic On Non Mirror Link Connection timeout">
    <label>Panic On Non Mirror Link Connection timeout</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit7: Enable Panic on Non Buddy Link connection.  0==Panic disabled (default), 1==Panic Enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="1" name="Panic On BREDR LMP Response">
    <label>Panic On BREDR LMP Response</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit8: Enable Panic on BREDR LMP Response.  0==Panic disabled (default), 1==Panic Enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="9" bit_width="1" name="Panic On LE LMP Response">
    <label>Panic On LE LMP Response</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Bit9: Enable Panic on LE LMP Response.  0==Panic disabled (default), 1==Panic Enabled.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="10" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="11" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="12" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="13" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="14" bit_width="1" name="reserved4">
    <label>reserved4</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="15" bit_width="1" name="reserved5">
    <label>reserved5</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="bqr_interval_filter_by_link_type_t">
  <structure_element lsb_bit_position="0" bit_width="1" name="Mirror Link">
    <label>Mirror Link</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Link Quality Metrics for Mirror Link. This bit is meaningful only in TWM scenario.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="1" bit_width="1" name="BREDR NonMirror Link">
    <label>BREDR NonMirror Link</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
In TWM scenario, this enables stats for the non-mirrored ACL link. In non-TWM scenario, this field enables stats for the BR/EDR ACL link.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="2" bit_width="1" name="Relay Link">
    <label>Relay Link</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Link Quality Metrics for Relay Link. This bit is meaningful only in TWM scenario.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="3" bit_width="1" name="Buddy Link">
    <label>Buddy Link</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
    <description_user>
Enable Link Quality Metrics for Buddy Link. This bit is meaningful only in TWM scenario.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="4" bit_width="1" name="reserved0">
    <label>reserved0</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="5" bit_width="1" name="reserved1">
    <label>reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="6" bit_width="1" name="reserved2">
    <label>reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="7" bit_width="1" name="reserved3">
    <label>reserved3</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="supported_features_mask_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Byte0">
    <label>Byte0</label>
    <type>supported_features_mask_byte0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Byte1">
    <label>Byte1</label>
    <type>supported_features_mask_byte1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Byte2">
    <label>Byte2</label>
    <type>supported_features_mask_byte2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Byte3">
    <label>Byte3</label>
    <type>supported_features_mask_byte3_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Byte4">
    <label>Byte4</label>
    <type>supported_features_mask_byte4_t</type>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Byte5">
    <label>Byte5</label>
    <type>supported_features_mask_byte5_t</type>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="Byte6">
    <label>Byte6</label>
    <type>supported_features_mask_byte6_t</type>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Byte7">
    <label>Byte7</label>
    <type>supported_features_mask_byte7_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="extended_feature_mask_page_2_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Byte 0">
    <label>Byte 0</label>
    <type>extended_feature_mask_page_2_byte_0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Byte 1">
    <label>Byte 1</label>
    <type>extended_feature_mask_page_2_byte_1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Byte 2">
    <label>Byte 2</label>
    <type>extended_feature_mask_page_2_byte_2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Byte 3">
    <label>Byte 3</label>
    <type>extended_feature_mask_page_2_byte_3_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Byte 4">
    <label>Byte 4</label>
    <type>extended_feature_mask_page_2_byte_4_t</type>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Byte 5">
    <label>Byte 5</label>
    <type>extended_feature_mask_page_2_byte_5_t</type>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="Byte 6">
    <label>Byte 6</label>
    <type>extended_feature_mask_page_2_byte_6_t</type>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Byte 7">
    <label>Byte 7</label>
    <type>extended_feature_mask_page_2_byte_7_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="le_supported_features_mask_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Byte 0">
    <label>Byte 0</label>
    <type>le_supported_features_mask_byte_0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Byte 1">
    <label>Byte 1</label>
    <type>le_supported_features_mask_byte_1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Byte 2">
    <label>Byte 2</label>
    <type>le_supported_features_mask_byte_2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Byte 3">
    <label>Byte 3</label>
    <type>le_supported_features_mask_byte_3_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Byte 4">
    <label>Byte 4</label>
    <type>le_supported_features_mask_byte_4_t</type>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Byte 5">
    <label>Byte 5</label>
    <type>le_supported_features_mask_byte_5_t</type>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="Byte 6">
    <label>Byte 6</label>
    <type>le_supported_features_mask_byte_6_t</type>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Byte 7">
    <label>Byte 7</label>
    <type>le_supported_features_mask_byte_7_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="acl_rx_phyerror_control_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Phy Err Ctrl Auto Abort">
    <label>Phy Err Ctrl Auto Abort</label>
    <type>phy_err_ctrl_auto_abort_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Filler">
    <label>Filler</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Filler for byte alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Rec Included">
    <label>Rec Included</label>
    <type>acl_rx_phyerror_control_rec_included_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Phy Err Ctrl">
    <label>Phy Err Ctrl</label>
    <type>acl_rx_phyerror_control_phy_err_ctrl_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="GFSK Err Region">
    <label>GFSK Err Region</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
    <description_user>
This threshold sets the region where the GFSK demodulators decision metric will be used to calculate the error metric for GFSK
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="DQPSK Err Region">
    <label>DQPSK Err Region</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
    <description_user>
This threshold sets the region where the DQPSK demodulators decision metric will be used to calculate the error metric for DQPSK
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="16" name="D8PSK Err Region">
    <label>D8PSK Err Region</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>2047</range_max>
    <description_user>
This threshold sets the region where the D8PSK demodulators decision metric will be used to calculate the error metric for D8PSK
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="16" name="GFSK Err">
    <label>GFSK Err</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>16383</range_max>
    <description_user>
If the error metric for GFSK is greater than this threshold, the erroneous_bit_detected is asserted
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="16" name="DQPSK Err">
    <label>DQPSK Err</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>16383</range_max>
    <description_user>
If the error metric for DQPSK is greater than this threshold, the erroneous_bit_detected is asserted
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="16" name="D8PSK Err">
    <label>D8PSK Err</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>16383</range_max>
    <description_user>
If the error metric for D8PSK is greater than this threshold, the erroneous_bit_detected is asserted
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="qlmp_feature_set_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Byte0">
    <label>Byte0</label>
    <type>qlmp_feature_set_byte0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Byte1">
    <label>Byte1</label>
    <type>qlmp_feature_set_byte1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Byte2">
    <label>Byte2</label>
    <type>qlmp_feature_set_byte2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Byte3">
    <label>Byte3</label>
    <type>qlmp_feature_set_byte3_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Byte4">
    <label>Byte4</label>
    <type>qlmp_feature_set_byte4_t</type>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Byte5">
    <label>Byte5</label>
    <type>qlmp_feature_set_byte5_t</type>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="Byte6">
    <label>Byte6</label>
    <type>qlmp_feature_set_byte6_t</type>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Byte7">
    <label>Byte7</label>
    <type>qlmp_feature_set_byte7_t</type>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="Byte8">
    <label>Byte8</label>
    <type>qlmp_feature_set_byte8_t</type>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="Byte9">
    <label>Byte9</label>
    <type>qlmp_feature_set_byte9_t</type>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="8" name="Byte10">
    <label>Byte10</label>
    <type>qlmp_feature_set_byte10_t</type>
  </structure_element>

  <structure_element lsb_bit_position="88" bit_width="8" name="Byte11">
    <label>Byte11</label>
    <type>qlmp_feature_set_byte11_t</type>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="8" name="Byte12">
    <label>Byte12</label>
    <type>qlmp_feature_set_byte12_t</type>
  </structure_element>

  <structure_element lsb_bit_position="104" bit_width="8" name="Byte13">
    <label>Byte13</label>
    <type>qlmp_feature_set_byte13_t</type>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="8" name="Byte14">
    <label>Byte14</label>
    <type>qlmp_feature_set_byte14_t</type>
  </structure_element>

  <structure_element lsb_bit_position="120" bit_width="8" name="Byte15">
    <label>Byte15</label>
    <type>qlmp_feature_set_byte15_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="undefined_link_key_array_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="Insecure Q-Root Key">
    <label>Insecure Q-Root Key</label>
    <type>insecure_q_root_key_t</type>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="128" name="Secure Q-Root Key">
    <label>Secure Q-Root Key</label>
    <type>secure_q_root_key_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_feature_set_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Byte_0">
    <label>Byte_0</label>
    <type>qll_feature_set_byte_0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Byte_1">
    <label>Byte_1</label>
    <type>qll_feature_set_byte_1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Byte_2">
    <label>Byte_2</label>
    <type>qll_feature_set_byte_2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Byte_3">
    <label>Byte_3</label>
    <type>qll_feature_set_byte_3_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Byte_4">
    <label>Byte_4</label>
    <type>qll_feature_set_byte_4_t</type>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="Byte_5">
    <label>Byte_5</label>
    <type>qll_feature_set_byte_5_t</type>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="Byte_6">
    <label>Byte_6</label>
    <type>qll_feature_set_byte_6_t</type>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="Byte_7">
    <label>Byte_7</label>
    <type>qll_feature_set_byte_7_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="add_on_feature_support_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Byte0">
    <label>Byte0</label>
    <type>add_on_feature_support_byte0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Byte1">
    <label>Byte1</label>
    <type>add_on_feature_support_byte1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Byte2">
    <label>Byte2</label>
    <type>add_on_feature_support_byte2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Byte3">
    <label>Byte3</label>
    <type>add_on_feature_support_byte3_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="Byte4">
    <label>Byte4</label>
    <type>add_on_feature_support_byte4_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="sibs_parameters_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Wake Retransmission Timeout">
    <label>Wake Retransmission Timeout</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Software In-Band Sleep Wake Retransmission Timeout in ms. Wake will be re-transmitted after this number of ms if a Wake Ack is not received.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Tx Idle Timeout">
    <label>Tx Idle Timeout</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Software In-Band Sleep Tx Idle Timeout in ms. Sleep signal will be sent if Tx stays idle for the defined timeout period.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Options">
    <label>Options</label>
    <type>sibs_parameters_options_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="enh_logging_slc_mask_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="SLC_MASK_0">
    <label>SLC_MASK_0</label>
    <type>enh_logging_slc_mask_slc_mask_0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="SLC_MASK_1">
    <label>SLC_MASK_1</label>
    <type>enh_logging_slc_mask_slc_mask_1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="SLC_MASK_2">
    <label>SLC_MASK_2</label>
    <type>enh_logging_slc_mask_slc_mask_2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="SLC_MASK_3">
    <label>SLC_MASK_3</label>
    <type>enh_logging_slc_mask_slc_mask_3_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="8" name="SLC_MASK_4">
    <label>SLC_MASK_4</label>
    <type>enh_logging_slc_mask_slc_mask_4_t</type>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="8" name="SLC_MASK_5">
    <label>SLC_MASK_5</label>
    <type>enh_logging_slc_mask_slc_mask_5_t</type>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="8" name="SLC_MASK_6">
    <label>SLC_MASK_6</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="56" bit_width="8" name="SLC_MASK_7">
    <label>SLC_MASK_7</label>
    <type>enh_logging_slc_mask_slc_mask_7_t</type>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="SLC_MASK_8">
    <label>SLC_MASK_8</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="SLC_MASK_9">
    <label>SLC_MASK_9</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="8" name="SLC_MASK_10">
    <label>SLC_MASK_10</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="88" bit_width="8" name="SLC_MASK_11">
    <label>SLC_MASK_11</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="8" name="SLC_MASK_12">
    <label>SLC_MASK_12</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="104" bit_width="8" name="SLC_MASK_13">
    <label>SLC_MASK_13</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="112" bit_width="8" name="SLC_MASK_14">
    <label>SLC_MASK_14</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="120" bit_width="8" name="SLC_MASK_15">
    <label>SLC_MASK_15</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_logging_config_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="Host_Report_Mask">
    <label>Host_Report_Mask</label>
    <type>hci_logging_config_host_report_mask_t</type>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="64" name="SCO_Misses">
    <label>SCO_Misses</label>
    <type>sco_misses_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="generic_pool_config_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="mem config">
    <label>mem config</label>
    <type>generic_pool_config_mem_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
minimum memory blocks allocated when memory pool is initialized.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
maximum memory blocks allowed to be allocated from memory pool. Note the block size should be in increasing ordrer for optimal allocation
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="large_hci_cmd_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>large_hci_cmd_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="large_hci_event_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>large_hci_event_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="small_hci_cmd_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>small_hci_cmd_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="small_hci_event_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>small_hci_event_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="lmp_tx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>lmp_tx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="lmp_rx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>lmp_rx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_lms_command_status_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>llm_lms_command_status_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_filter_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>llm_filter_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="lms_dispatch_queue_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>lms_dispatch_queue_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="medium_hci_event_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>medium_hci_event_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_logmsg_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>dbg_logmsg_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ant_cmd_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>ant_cmd_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ant_event_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>ant_event_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ant_data_from_host_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>ant_data_from_host_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="ant_data_to_host_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>ant_data_to_host_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_log_small_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>dbg_log_small_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_log_very_large_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>dbg_log_very_large_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="prhl_power_event_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>prhl_power_event_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_log_slcbuf_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>dbg_log_slcbuf_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_log_mcibuf_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>dbg_log_mcibuf_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="dbg_log_mwsbuf_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>dbg_log_mwsbuf_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="rx_nonrt_offload_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>rx_nonrt_offload_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="mci_msg_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>mci_msg_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_sco_conn_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>llm_sco_conn_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_piconet_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>llm_piconet_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_conn_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>llm_conn_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="wip_dbg_log_event_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>wip_dbg_log_event_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="estack_tmr_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>estack_tmr_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_data_tx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>hci_data_tx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
The size of each Tx buffer, in bytes (Default: 1036 (0x408)). The ACL_U Isochronous Flush mechanism clock tags each Tx HCI data packet. This allocation needs to account 4 bytes for this clock tag.  Note:  The BB Tx mechanism builds baseband ACL packets by concatenating up to three HCI Tx packets. If the specified Tx packet size is to small ( &lt;117 bytes BR, &lt;345 bytes EDR) smaller BT packets will be used to Tx the data.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_data_rx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>hci_data_rx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
The size of each Rx buffer, in bytes (Default: 372 (0x174)). Note: The baseband Rx mechanism expects a minimum Rx packet size of 64 bytes. If a smaller value is specified, ACL data traffic will stall due to insufficient buffering to handle an incomming  BT Rx ACL packet.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="mci_sched_predict_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>mci_sched_predict_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="senuart_data_tx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>senuart_data_tx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="senuart_data_rx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>senuart_data_rx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_le_data_tx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>hci_le_data_tx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="sco_create_msg_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>sco_create_msg_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="accmd_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>accmd_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="bccmd_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>bccmd_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="llm_le_deferred_cmd_queue_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>llm_le_deferred_cmd_queue_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="le_long_ctrl_tx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>le_long_ctrl_tx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>1</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>251</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="voice_audio_log_buffer_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>voice_audio_log_buffer_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="a2dp_sink_media_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>a2dp_sink_media_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="bcaud_ec_segment_pool_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>bcaud_ec_segment_pool_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
EC(2,5) creates 5 segments in one go. max vlaue is set to 10 to hold max 2 set of EC coded segments
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
Max size = max data size of 2DH5 packet + 3(EC Header)
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_sco_tx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>hci_sco_tx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Total number of HCI SCO Tx buffers.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Size of each HCI SCO TX buffer. 240-byte payload + 4-byte SCO header.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_sco_rx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>hci_sco_rx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Total number of HCI SCO Rx buffers.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Size of each HCI SCO RX buffer. 240-byte payload + 4-byte SCO header.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_iso_tx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>hci_iso_tx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Total number of HCI ISO Tx buffers.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>16388</range_max>
    <description_user>
Size of each HCI ISO TX buffer. 5 bytes for the ISO header.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="hci_iso_rx_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block config">
    <label>block config</label>
    <type>hci_iso_rx_block_config_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Total number of HCI ISO Rx buffers.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>16388</range_max>
    <description_user>
Size of each HCI ISO RX buffer. 5 bytes for the ISO header.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="tx_ramp_ctrl_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="T_TX_OFF_DLY">
    <label>T_TX_OFF_DLY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Value in us
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="T_TX_GRP_DLY">
    <label>T_TX_GRP_DLY</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="T_START_DIG_RAMP_UP">
    <label>T_START_DIG_RAMP_UP</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="16" name="ramp_alpha">
    <label>ramp_alpha</label>
    <type>ramp_alpha_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="tx_power_table_t">
  <structure_element lsb_bit_position="0" bit_width="40" name="BR">
    <label>BR</label>
    <type>br_t</type>
  </structure_element>

  <structure_element lsb_bit_position="40" bit_width="40" name="EDR">
    <label>EDR</label>
    <type>edr_t</type>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="40" name="LE">
    <label>LE</label>
    <type>le_t</type>
  </structure_element>

  <structure_element lsb_bit_position="120" bit_width="40" name="QHS">
    <label>QHS</label>
    <type>qhs_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="common_params_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="channel">
    <label>channel</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>78</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="am_cals_agc_index">
    <label>am_cals_agc_index</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>8</range_max>
    <description_user>
AGC gain table index to be used during AMAM and AMPM calibrations.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="psu_mode">
    <label>psu_mode</label>
    <type>psu_mode_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="cals_enabled">
    <label>cals_enabled</label>
    <type>common_params_cals_enabled_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="am_coeff_array_t">
  <structure_element lsb_bit_position="0" bit_width="128" name="am_coeff_0">
    <label>am_coeff_0</label>
    <type>am_coeff_0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="128" name="am_coeff_1">
    <label>am_coeff_1</label>
    <type>am_coeff_1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="256" bit_width="128" name="am_coeff_2">
    <label>am_coeff_2</label>
    <type>am_coeff_2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="384" bit_width="128" name="am_coeff_3">
    <label>am_coeff_3</label>
    <type>am_coeff_3_t</type>
  </structure_element>

  <structure_element lsb_bit_position="512" bit_width="128" name="am_coeff_4">
    <label>am_coeff_4</label>
    <type>am_coeff_4_t</type>
  </structure_element>

  <structure_element lsb_bit_position="640" bit_width="128" name="am_coeff_5">
    <label>am_coeff_5</label>
    <type>am_coeff_5_t</type>
  </structure_element>

  <structure_element lsb_bit_position="768" bit_width="128" name="am_coeff_6">
    <label>am_coeff_6</label>
    <type>am_coeff_6_t</type>
  </structure_element>

  <structure_element lsb_bit_position="896" bit_width="128" name="am_coeff_7">
    <label>am_coeff_7</label>
    <type>am_coeff_7_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="rssi_det_cal_params_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="temp_delta">
    <label>temp_delta</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="update_margin">
    <label>update_margin</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="dac_code_start">
    <label>dac_code_start</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="dac_code_stop">
    <label>dac_code_stop</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="gain_index">
    <label>gain_index</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>16</range_max>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="32" name="lna_gain">
    <label>lna_gain</label>
    <type>lna_gain_t</type>
  </structure_element>

  <structure_element lsb_bit_position="104" bit_width="8" name="Reserved2">
    <label>Reserved2</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="rcu_dynamic_rx_control_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="RX Control">
    <label>RX Control</label>
    <type>rx_control_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="rcu_dynamic_tx_control_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="TX Control">
    <label>TX Control</label>
    <type>tx_control_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="rcu_dynamic_txrx_control_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="TXRX Control Tx">
    <label>TXRX Control Tx</label>
    <type>txrx_control_tx_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="TXRX Control Rx">
    <label>TXRX Control Rx</label>
    <type>txrx_control_rx_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="cdac_cal_results_t">
  <structure_element lsb_bit_position="0" bit_width="64" name="cdac_lut_rx">
    <label>cdac_lut_rx</label>
    <type>cdac_lut_rx_t</type>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="64" name="cdac_lut_tx">
    <label>cdac_lut_tx</label>
    <type>cdac_lut_tx_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="comp_array_t">
  <structure_element lsb_bit_position="0" bit_width="272" name="table_0">
    <label>table_0</label>
    <type>table_0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="272" bit_width="272" name="table_1">
    <label>table_1</label>
    <type>table_1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="544" bit_width="272" name="table_2">
    <label>table_2</label>
    <type>table_2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="816" bit_width="272" name="table_3">
    <label>table_3</label>
    <type>table_3_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="ampm_cal_results_t">
  <structure_element lsb_bit_position="0" bit_width="1088" name="table Array">
    <label>table Array</label>
    <type>table_array_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="config_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Num RTSC Mode Buffers">
    <label>Num RTSC Mode Buffers</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>3</range_max>
    <description_user>
RTSC Buffer here means one instance, which needs three 1K buffer entires in start buffer pointer. Additional 1K buffers each are needed for Weak Bit Mask and last packet received if supported.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Num QBM Mode Buffers">
    <label>Num QBM Mode Buffers</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>2</range_max>
    <description_user>
For targets prior to Zealis 3.0, QBM Mode needs single entry in start buffer pointer table for each QBM instance of size 5 times payload size + 8 bytes of metadata. From Zealis 3.0, QBM Mode supports fragmented buffers. Each QBM instance needs 5 buffer pointers entries in the start buffer pointer table. Size of each buffer is payload size + 4 bytes of metadata.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="RTSC Config Flags">
    <label>RTSC Config Flags</label>
    <type>config_rtsc_config_flags_t</type>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="RTSC operational mode switch threshold">
    <label>RTSC operational mode switch threshold</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
Number of receive opportunities less than or equal to which Qbm mode is used and above which RTSC mode is used. Setting this NVM tag to zero will ensure RTSC mode is used always and setting it to 255 will ensure Qbm mode is used always.
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="max_sdu_size_array_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="Max SDU Size_0">
    <label>Max SDU Size_0</label>
    <type>max_sdu_size_0_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="32" name="Max SDU Size_1">
    <label>Max SDU Size_1</label>
    <type>max_sdu_size_1_t</type>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="32" name="Max SDU Size_2">
    <label>Max SDU Size_2</label>
    <type>max_sdu_size_2_t</type>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="32" name="Max SDU Size_3">
    <label>Max SDU Size_3</label>
    <type>max_sdu_size_3_t</type>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="Max SDU Size_4">
    <label>Max SDU Size_4</label>
    <type>max_sdu_size_4_t</type>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="32" name="Max SDU Size_5">
    <label>Max SDU Size_5</label>
    <type>max_sdu_size_5_t</type>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="32" name="Max SDU Size_6">
    <label>Max SDU Size_6</label>
    <type>max_sdu_size_6_t</type>
  </structure_element>

  <structure_element lsb_bit_position="224" bit_width="32" name="Max SDU Size_7">
    <label>Max SDU Size_7</label>
    <type>max_sdu_size_7_t</type>
  </structure_element>

  <structure_element lsb_bit_position="256" bit_width="32" name="Max SDU Size_8">
    <label>Max SDU Size_8</label>
    <type>max_sdu_size_8_t</type>
  </structure_element>

  <structure_element lsb_bit_position="288" bit_width="32" name="Max SDU Size_9">
    <label>Max SDU Size_9</label>
    <type>max_sdu_size_9_t</type>
  </structure_element>

  <structure_element lsb_bit_position="320" bit_width="32" name="Max SDU Size_10">
    <label>Max SDU Size_10</label>
    <type>max_sdu_size_10_t</type>
  </structure_element>

  <structure_element lsb_bit_position="352" bit_width="32" name="Max SDU Size_11">
    <label>Max SDU Size_11</label>
    <type>max_sdu_size_11_t</type>
  </structure_element>

  <structure_element lsb_bit_position="384" bit_width="32" name="Max SDU Size_12">
    <label>Max SDU Size_12</label>
    <type>max_sdu_size_12_t</type>
  </structure_element>

  <structure_element lsb_bit_position="416" bit_width="32" name="Max SDU Size_13">
    <label>Max SDU Size_13</label>
    <type>max_sdu_size_13_t</type>
  </structure_element>

  <structure_element lsb_bit_position="448" bit_width="32" name="Max SDU Size_14">
    <label>Max SDU Size_14</label>
    <type>max_sdu_size_14_t</type>
  </structure_element>

  <structure_element lsb_bit_position="480" bit_width="32" name="Max SDU Size_15">
    <label>Max SDU Size_15</label>
    <type>max_sdu_size_15_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="ip2_cal_params_t">
  <structure_element lsb_bit_position="0" bit_width="16" name="target_vco_ampl">
    <label>target_vco_ampl</label>
    <type>int16</type>
    <range_min>0</range_min>
    <range_max>500</range_max>
    <description_user>
VCO amplitude for RX mode operation during IP2 calibration.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="dac_start">
    <label>dac_start</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1024</range_max>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="dac_step">
    <label>dac_step</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>256</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="dac_end">
    <label>dac_end</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>1024</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="8" name="channel">
    <label>channel</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>78</range_max>
  </structure_element>

  <structure_element lsb_bit_position="72" bit_width="8" name="dfe_propagation_delay">
    <label>dfe_propagation_delay</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="80" bit_width="8" name="num_dc_average">
    <label>num_dc_average</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="88" bit_width="8" name="dc_time_average">
    <label>dc_time_average</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="32" name="if_freq">
    <label>if_freq</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="32" name="gain">
    <label>gain</label>
    <type>gain_t</type>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="32" name="resampler">
    <label>resampler</label>
    <type>uint32</type>
    <range_min>0</range_min>
    <range_max>4294967295</range_max>
  </structure_element>

</struct_def>

<struct_def struct_name="predefpool_ext_cfg_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="block cfg">
    <label>block cfg</label>
    <type>predefpool_ext_cfg_block_cfg_t</type>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="max count">
    <label>max count</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
    <description_user>
This pool is used in Slate specific feature. So, updating deafult value as zero
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="16" name="block size">
    <label>block size</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
    <description_user>
The default size of TXP buffer is configured as 1036 to match with ACL TX buffer default block size value sothat BTSS is able to copy the max size onChip buffered PDU as well
    </description_user>
  </structure_element>

</struct_def>

<struct_def struct_name="amam_cal_param_upd_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="channel_search">
    <label>channel_search</label>
    <type>channel_search_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="qll_link_key_t">
  <structure_element lsb_bit_position="0" bit_width="32" name="Supported Key">
    <label>Supported Key</label>
    <type>qll_link_key_supported_key_t</type>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="256" name="Undefined Link Key Array">
    <label>Undefined Link Key Array</label>
    <type>undefined_link_key_array_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="am_delay_cal_params_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="tx_atten">
    <label>tx_atten</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>15</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="servo_gain_min">
    <label>servo_gain_min</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="servo_gain_max">
    <label>servo_gain_max</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Reserved1">
    <label>Reserved1</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding bytes for alignment
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="16" name="wait_min_gain">
    <label>wait_min_gain</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="48" bit_width="16" name="wait_max_gain">
    <label>wait_max_gain</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="64" bit_width="32" name="comparator_delay">
    <label>comparator_delay</label>
    <type>int32</type>
    <range_min>-2147483648</range_min>
    <range_max>2147483647</range_max>
    <description_user>
0.65 Ref clock cycles
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="96" bit_width="32" name="delay_adjust">
    <label>delay_adjust</label>
    <type>int32</type>
    <range_min>-2147483648</range_min>
    <range_max>2147483647</range_max>
    <description_user>
3.5 in S32.12 format.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="128" bit_width="16" name="offset_high">
    <label>offset_high</label>
    <type>int16</type>
    <range_min>-512</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="144" bit_width="16" name="offset_low">
    <label>offset_low</label>
    <type>int16</type>
    <range_min>-512</range_min>
    <range_max>511</range_max>
  </structure_element>

  <structure_element lsb_bit_position="160" bit_width="8" name="phase_divisor">
    <label>phase_divisor</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>255</range_max>
  </structure_element>

  <structure_element lsb_bit_position="168" bit_width="8" name="phase_residue">
    <label>phase_residue</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>64</range_max>
  </structure_element>

  <structure_element lsb_bit_position="176" bit_width="16" name="phase_incr">
    <label>phase_incr</label>
    <type>uint16</type>
    <range_min>0</range_min>
    <range_max>65535</range_max>
  </structure_element>

  <structure_element lsb_bit_position="192" bit_width="1024" name="am_coeff Array">
    <label>am_coeff Array</label>
    <type>am_coeff_array_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="amam_cal_results_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="num_atten">
    <label>num_atten</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>10</range_max>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Reserve">
    <label>Reserve</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="1088" name="comp Array">
    <label>comp Array</label>
    <type>comp_array_t</type>
  </structure_element>

</struct_def>

<struct_def struct_name="iso_t">
  <structure_element lsb_bit_position="0" bit_width="8" name="Max Num Streams">
    <label>Max Num Streams</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>16</range_max>
    <description_user>
Maximum number of streams per ISO group.  Bidirectional streams count as 1 stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="8" bit_width="8" name="Max Num ToAir Streams">
    <label>Max Num ToAir Streams</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>16</range_max>
    <description_user>
Maximum number of ToAir streams per ISO group.  Bidirectional streams count as 1 ToAir stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="16" bit_width="8" name="Max Num FromAir Streams">
    <label>Max Num FromAir Streams</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>16</range_max>
    <description_user>
Maximum number of FromAir streams per ISO group.  Bidirectional streams count as 1 FromAir stream.
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="24" bit_width="8" name="Reserved">
    <label>Reserved</label>
    <type>uint8</type>
    <range_min>0</range_min>
    <range_max>0</range_max>
    <description_user>
Padding byte
    </description_user>
  </structure_element>

  <structure_element lsb_bit_position="32" bit_width="512" name="Max SDU Size Array">
    <label>Max SDU Size Array</label>
    <type>max_sdu_size_array_t</type>
  </structure_element>

</struct_def>

<config_element name="2 Mbps PHY" psid="">
  <label>2 Mbps PHY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE 2Ms/s Physical Data Rate
  </description_user>
</config_element>

<config_element name="2QHS Down One" psid="">
  <label>2QHS Down One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 2M Phy Rate down transition by one
  </description_user>
</config_element>

<config_element name="2QHS Up One" psid="">
  <label>2QHS Up One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 2M Phy Rate up transition by one
  </description_user>
</config_element>

<config_element name="3-slot packets" psid="">
  <label>3-slot packets</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit0: 3-slot packets
  </description_user>
</config_element>

<config_element name="3QHS Down One" psid="">
  <label>3QHS Down One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 3M Phy Rate down transition by one
  </description_user>
</config_element>

<config_element name="3QHS Up One" psid="">
  <label>3QHS Up One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 3M Phy Rate up transition by one
  </description_user>
</config_element>

<config_element name="4QHS Down One" psid="">
  <label>4QHS Down One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 4M Phy Rate down transition by one
  </description_user>
</config_element>

<config_element name="4QHS Down Two" psid="">
  <label>4QHS Down Two</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 4M Phy Rate down transition by two
  </description_user>
</config_element>

<config_element name="4QHS Up One" psid="">
  <label>4QHS Up One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 4M Phy Rate up transition by one
  </description_user>
</config_element>

<config_element name="5-Slot packets" psid="">
  <label>5-Slot packets</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit1: 5-Slot packets
  </description_user>
</config_element>

<config_element name="5QHS Down One" psid="">
  <label>5QHS Down One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 5M Phy Rate down transition by one
  </description_user>
</config_element>

<config_element name="5QHS Down One Aptx Low Latency Mode" psid="">
  <label>5QHS Down One Aptx Low Latency Mode</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS5 to BT-QHS4 transition in aptx low latency mode
  </description_user>
</config_element>

<config_element name="5QHS Down Two" psid="">
  <label>5QHS Down Two</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 5M Phy Rate down transition by two
  </description_user>
</config_element>

<config_element name="5QHS To 2QHS" psid="">
  <label>5QHS To 2QHS</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS5 to BT-QHS2 transition
  </description_user>
</config_element>

<config_element name="5QHS Up One" psid="">
  <label>5QHS Up One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 5M Phy Rate up transition by one
  </description_user>
</config_element>

<config_element name="6QHS Down One" psid="">
  <label>6QHS Down One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 6M Phy Rate down transition by one
  </description_user>
</config_element>

<config_element name="6QHS Down Two" psid="">
  <label>6QHS Down Two</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS 6M Phy Rate down transition by two
  </description_user>
</config_element>

<config_element name="6QHS To 2QHS" psid="">
  <label>6QHS To 2QHS</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER for BT-QHS6 to BT-QHS2 transition
  </description_user>
</config_element>

<config_element name="8 Byte FIFO" psid="">
  <label>8 Byte FIFO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
When set to 1 this will enable the 8 byte FIFO.  When set to 0, the default 2 byte FIFO will be used.
  </description_user>
</config_element>

<config_element name="A-Law log" psid="">
  <label>A-Law log</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit7: A-Law log
  </description_user>
</config_element>

<config_element name="A2DP Disable Backoff Polling" psid="">
  <label>A2DP Disable Backoff Polling</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
By default, the same polling method is used by the master in both ACL and A2DP modes - exponential backoff. To allow a larger gap between POLLs sent in A2DP mode, set this flag to 1, and then the master will wait Tpoll before sending the next POLL when the slave doesn't send data.
  </description_user>
</config_element>

<config_element name="A2DP_DISALLOW_3M_PKT_BASEDON_LINKQUALITY_CONTROL_FLAG" psid="">
  <label>A2DP_DISALLOW_3M_PKT_BASEDON_LINKQUALITY_CONTROL_FLAG</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
control flag to enable/disable 3M packet usage for a2dp based on link quality
  </description_user>
</config_element>

<config_element name="A2DP_TX_BUFFER_SIZE_ERROR" psid="">
  <label>A2DP_TX_BUFFER_SIZE_ERROR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs a message when there is insufficient baseband buffer space available for the current A2DP packet.
  </description_user>
</config_element>

<config_element name="ACL" psid="">
  <label>ACL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Number of header FEC errors allowed before NACKing an ACL packet
  </description_user>
</config_element>

<config_element name="ACL Automatic Flush" psid="">
  <label>ACL Automatic Flush</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Automatic Flush processing requires time tags associated with each HCI ACL First Packet of a Higher Layer message. This utilizes 4 bytes of the tx buffer size allocated in Tag 71. The HCI Read Buffer Size Command ACL data packet length will be 4 bytes less when this feature is enabled. This control disables automatic flush processing and the need to time tag HCI ACL packets.
  </description_user>
</config_element>

<config_element name="ACL Data Transfer SYNC Flag" psid="">
  <label>ACL Data Transfer SYNC Flag</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
ACL Data Transfer SYNC Flag
  </description_user>
</config_element>

<config_element name="ACL Handover" psid="">
  <label>ACL Handover</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
ACL Handover
  </description_user>
</config_element>

<config_element name="ACL Mirroring" psid="">
  <label>ACL Mirroring</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
ACL Mirroring
  </description_user>
</config_element>

<config_element name="AClk Req Select Option" psid="">
  <label>AClk Req Select Option</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
00=reg on, 01=osc on, 10=rst off, 11= clks active.
  </description_user>
</config_element>

<config_element name="AFH capable master" psid="">
  <label>AFH capable master</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit3: AFH capable master
  </description_user>
</config_element>

<config_element name="AFH capable slave" psid="">
  <label>AFH capable slave</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit3: AFH capable slave
  </description_user>
</config_element>

<config_element name="AFH classification master" psid="">
  <label>AFH classification master</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit4: AFH classification master
  </description_user>
</config_element>

<config_element name="AFH classification slave" psid="">
  <label>AFH classification slave</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit4: AFH classification slave
  </description_user>
</config_element>

<config_element name="AHB Timeout Interrupt" psid="">
  <label>AHB Timeout Interrupt</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit14: Enable the AHB Timeout Interrupt
  </description_user>
</config_element>

<config_element name="ALE_PERIODIC_SYNC_INFO" psid="">
  <label>ALE_PERIODIC_SYNC_INFO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs state machine information related to a LE periodic link.
  </description_user>
</config_element>

<config_element name="ASSERT" psid="">
  <label>ASSERT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Unused?
  </description_user>
</config_element>

<config_element name="AUTO_RESUME_VIA_SIMULATE_REMOTE_WAKE_ENABLE_BIT" psid="">
  <label>AUTO_RESUME_VIA_SIMULATE_REMOTE_WAKE_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Abort Enable for PP0 RX" psid="">
  <label>Abort Enable for PP0 RX</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Abort Enable for PP0 RX.
  </description_user>
</config_element>

<config_element name="Abort Enable for PP0 TX" psid="">
  <label>Abort Enable for PP0 TX</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Abort Enable for PP0 TX.
  </description_user>
</config_element>

<config_element name="Abort Enable for PP1 RX" psid="">
  <label>Abort Enable for PP1 RX</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Abort Enable for PP1 RX.
  </description_user>
</config_element>

<config_element name="Abort Enable for PP1 TX" psid="">
  <label>Abort Enable for PP1 TX</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Abort Enable for PP1 TX.
  </description_user>
</config_element>

<config_element name="Abort Enable for PP2 RX" psid="">
  <label>Abort Enable for PP2 RX</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Abort Enable for PP2 RX.
  </description_user>
</config_element>

<config_element name="Abort Enable for PP2 TX" psid="">
  <label>Abort Enable for PP2 TX</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Abort Enable for PP2 TX.
  </description_user>
</config_element>

<config_element name="Adapt BW Mismatch" psid="">
  <label>Adapt BW Mismatch</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Switch to control if enable support of SDU BW and PDU BW is different configuration.
  </description_user>
</config_element>

<config_element name="Adaptive ISO" psid="">
  <label>Adaptive ISO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Used for adaptive ISO feature
  </description_user>
</config_element>

<config_element name="Adaptive ISO multi cfg update" psid="">
  <label>Adaptive ISO multi cfg update</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Adaptive ISO multi config update feature
  </description_user>
</config_element>

<config_element name="AdvA_Pri_W_Aux" psid="">
  <label>AdvA_Pri_W_Aux</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Send AdvA on non coded primary advertising channels when auxiliary packet is present. Valid for Non-Connectable and Non-Scannable only.
  </description_user>
</config_element>

<config_element name="Advertising Power Level Index" psid="">
  <label>Advertising Power Level Index</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>9</range_max>
  <description_user>
Advertising power level index (Default=0x7, 7d). Host can control range by limiting Tx Output Power. This Tx Power is used for Advertising and Scan Response. Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
  </description_user>
</config_element>

<config_element name="Air Format" psid="">
  <label>Air Format</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
Bits0_1: Air Format (0=CVSD, 1=u-law,2=A-law)
  </description_user>
</config_element>

<config_element name="Allow Early Exit" psid="">
  <label>Allow Early Exit</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
AllowEarlyExit
  </description_user>
</config_element>

<config_element name="Allow Immediate Exit" psid="">
  <label>Allow Immediate Exit</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
AllowImmediateExit
  </description_user>
</config_element>

<config_element name="AnalysisPeriod" psid="">
  <label>AnalysisPeriod</label>
  <type>uint16</type>
  <range_min>72</range_min>
  <range_max>65535</range_max>
  <description_user>
Analysis Period in multiples of 1.25ms.
  </description_user>
</config_element>

<config_element name="AntSw CTE Rx" psid="">
  <label>AntSw CTE Rx</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Antenna Switching During CTE Rx supported
  </description_user>
</config_element>

<config_element name="AntSw CTE Tx" psid="">
  <label>AntSw CTE Tx</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Antenna Switching During CTE Tx supported
  </description_user>
</config_element>

<config_element name="Asymmetric PHY Enable" psid="">
  <label>Asymmetric PHY Enable</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable support for Asymmetric PHY Rates.
  </description_user>
</config_element>

<config_element name="Audio SCO routing" psid="">
  <label>Audio SCO routing</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit 10: Create audio routing automatically on SCO link creation for Hydra architecture (1 - BTSS creates routing; 0 - do not create routing, another subsystem is expected to do this)
  </description_user>
</config_element>

<config_element name="Audio_Latency_Log" psid="">
  <label>Audio_Latency_Log</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
1-Enable mask for Audio latency log. Controller would log out latency data for each media packet.
  </description_user>
</config_element>

<config_element name="AutoGen HCI TX" psid="">
  <label>AutoGen HCI TX</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
When enabled, a timer is used to generate TX SDUs and insert them in the HCI FromHost queue at the SDU interval.
  </description_user>
</config_element>

<config_element name="Auto_Update_Offset" psid="">
  <label>Auto_Update_Offset</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Automatically check the connection offset at connection establishment and request an update if necessary (Slave-Only).
  </description_user>
</config_element>

<config_element name="BN VARIATION BY QHS RATE" psid="">
  <label>BN VARIATION BY QHS RATE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Dynamic Burst Number support
  </description_user>
</config_element>

<config_element name="BR" psid="">
  <label>BR</label>
  <type>br_t</type>
</config_element>

<config_element name="BREDR NonMirror Link" psid="">
  <label>BREDR NonMirror Link</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
In TWM scenario, this enables stats for the non-mirrored ACL link. In non-TWM scenario, this field enables stats for the BR/EDR ACL link.
  </description_user>
</config_element>

<config_element name="BREDR Not Supported" psid="">
  <label>BREDR Not Supported</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit5: BR/EDR Not Supported
  </description_user>
</config_element>

<config_element name="BTWake Pin" psid="">
  <label>BTWake Pin</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="BTWake Polarity" psid="">
  <label>BTWake Polarity</label>
  <type>btwake_polarity_t</type>
</config_element>

<config_element name="BT_ANA_PSU_EN_SEL" psid="">
  <label>BT_ANA_PSU_EN_SEL</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="BT_ANA_PSU_SW_OVR" psid="">
  <label>BT_ANA_PSU_SW_OVR</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Barge In" psid="">
  <label>Barge In</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable truncated page scan on primary during ACL relay. This provides incoming connection indications to host without making connections.
  </description_user>
</config_element>

<config_element name="Bias Req Select Option" psid="">
  <label>Bias Req Select Option</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
00=reg on, 01=osc on, 10=rst off, 11= clks active.
  </description_user>
</config_element>

<config_element name="Bluetooth Over IP" psid="">
  <label>Bluetooth Over IP</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Device Supports Bluetooth over IP
  </description_user>
</config_element>

<config_element name="Bluetooth_Supported_Features_Mask_Reserved_3" psid="">
  <label>Bluetooth_Supported_Features_Mask_Reserved_3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Bluetooth_Supported_Features_Mask_Reserved_4" psid="">
  <label>Bluetooth_Supported_Features_Mask_Reserved_4</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Bluetooth_Supported_Features_Mask_Reserved_5" psid="">
  <label>Bluetooth_Supported_Features_Mask_Reserved_5</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Bluetooth_Supported_Features_Mask_Reserved_6" psid="">
  <label>Bluetooth_Supported_Features_Mask_Reserved_6</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Broadcast Audio Rx with EC-2-5" psid="">
  <label>Broadcast Audio Rx with EC-2-5</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Broadcast Audio Rx with EC-3-9" psid="">
  <label>Broadcast Audio Rx with EC-3-9</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Broadcast Audio Tx with EC-2-5" psid="">
  <label>Broadcast Audio Tx with EC-2-5</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Broadcast Audio Tx with EC-3-9" psid="">
  <label>Broadcast Audio Tx with EC-3-9</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Broadcast Encryption" psid="">
  <label>Broadcast Encryption</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit7: Broadcast Encryption
  </description_user>
</config_element>

<config_element name="Broadcaster Power Level Index" psid="">
  <label>Broadcaster Power Level Index</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>9</range_max>
  <description_user>
LE ISO BIG Tx power level. (Default=0x7, 7d). Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
  </description_user>
</config_element>

<config_element name="Brownout Detect" psid="">
  <label>Brownout Detect</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enables or disables the brownout detector.
  </description_user>
</config_element>

<config_element name="Buddy Link" psid="">
  <label>Buddy Link</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Link Quality Metrics for Buddy Link. This bit is meaningful only in TWM scenario.
  </description_user>
</config_element>

<config_element name="Bus Error Interrupt" psid="">
  <label>Bus Error Interrupt</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit12: Enable the Bus Error Interrupt
  </description_user>
</config_element>

<config_element name="Byte 0" psid="">
  <label>Byte 0</label>
  <type>extended_feature_mask_page_2_byte_0_t</type>
</config_element>

<config_element name="Byte 0" psid="">
  <label>Byte 0</label>
  <type>le_supported_features_mask_byte_0_t</type>
</config_element>

<config_element name="Byte 1" psid="">
  <label>Byte 1</label>
  <type>extended_feature_mask_page_2_byte_1_t</type>
</config_element>

<config_element name="Byte 1" psid="">
  <label>Byte 1</label>
  <type>le_supported_features_mask_byte_1_t</type>
</config_element>

<config_element name="Byte 2" psid="">
  <label>Byte 2</label>
  <type>extended_feature_mask_page_2_byte_2_t</type>
</config_element>

<config_element name="Byte 2" psid="">
  <label>Byte 2</label>
  <type>le_supported_features_mask_byte_2_t</type>
</config_element>

<config_element name="Byte 3" psid="">
  <label>Byte 3</label>
  <type>extended_feature_mask_page_2_byte_3_t</type>
</config_element>

<config_element name="Byte 3" psid="">
  <label>Byte 3</label>
  <type>le_supported_features_mask_byte_3_t</type>
</config_element>

<config_element name="Byte 4" psid="">
  <label>Byte 4</label>
  <type>extended_feature_mask_page_2_byte_4_t</type>
</config_element>

<config_element name="Byte 4" psid="">
  <label>Byte 4</label>
  <type>le_supported_features_mask_byte_4_t</type>
</config_element>

<config_element name="Byte 5" psid="">
  <label>Byte 5</label>
  <type>extended_feature_mask_page_2_byte_5_t</type>
</config_element>

<config_element name="Byte 5" psid="">
  <label>Byte 5</label>
  <type>le_supported_features_mask_byte_5_t</type>
</config_element>

<config_element name="Byte 6" psid="">
  <label>Byte 6</label>
  <type>extended_feature_mask_page_2_byte_6_t</type>
</config_element>

<config_element name="Byte 6" psid="">
  <label>Byte 6</label>
  <type>le_supported_features_mask_byte_6_t</type>
</config_element>

<config_element name="Byte 7" psid="">
  <label>Byte 7</label>
  <type>extended_feature_mask_page_2_byte_7_t</type>
</config_element>

<config_element name="Byte 7" psid="">
  <label>Byte 7</label>
  <type>le_supported_features_mask_byte_7_t</type>
</config_element>

<config_element name="Byte0" psid="">
  <label>Byte0</label>
  <type>supported_features_mask_byte0_t</type>
</config_element>

<config_element name="Byte0" psid="">
  <label>Byte0</label>
  <type>qlmp_feature_set_byte0_t</type>
</config_element>

<config_element name="Byte0" psid="">
  <label>Byte0</label>
  <type>add_on_feature_support_byte0_t</type>
</config_element>

<config_element name="Byte1" psid="">
  <label>Byte1</label>
  <type>supported_features_mask_byte1_t</type>
</config_element>

<config_element name="Byte1" psid="">
  <label>Byte1</label>
  <type>qlmp_feature_set_byte1_t</type>
</config_element>

<config_element name="Byte1" psid="">
  <label>Byte1</label>
  <type>add_on_feature_support_byte1_t</type>
</config_element>

<config_element name="Byte10" psid="">
  <label>Byte10</label>
  <type>qlmp_feature_set_byte10_t</type>
</config_element>

<config_element name="Byte11" psid="">
  <label>Byte11</label>
  <type>qlmp_feature_set_byte11_t</type>
</config_element>

<config_element name="Byte12" psid="">
  <label>Byte12</label>
  <type>qlmp_feature_set_byte12_t</type>
</config_element>

<config_element name="Byte13" psid="">
  <label>Byte13</label>
  <type>qlmp_feature_set_byte13_t</type>
</config_element>

<config_element name="Byte14" psid="">
  <label>Byte14</label>
  <type>qlmp_feature_set_byte14_t</type>
</config_element>

<config_element name="Byte15" psid="">
  <label>Byte15</label>
  <type>qlmp_feature_set_byte15_t</type>
</config_element>

<config_element name="Byte2" psid="">
  <label>Byte2</label>
  <type>supported_features_mask_byte2_t</type>
</config_element>

<config_element name="Byte2" psid="">
  <label>Byte2</label>
  <type>qlmp_feature_set_byte2_t</type>
</config_element>

<config_element name="Byte2" psid="">
  <label>Byte2</label>
  <type>add_on_feature_support_byte2_t</type>
</config_element>

<config_element name="Byte3" psid="">
  <label>Byte3</label>
  <type>supported_features_mask_byte3_t</type>
</config_element>

<config_element name="Byte3" psid="">
  <label>Byte3</label>
  <type>qlmp_feature_set_byte3_t</type>
</config_element>

<config_element name="Byte3" psid="">
  <label>Byte3</label>
  <type>add_on_feature_support_byte3_t</type>
</config_element>

<config_element name="Byte4" psid="">
  <label>Byte4</label>
  <type>supported_features_mask_byte4_t</type>
</config_element>

<config_element name="Byte4" psid="">
  <label>Byte4</label>
  <type>qlmp_feature_set_byte4_t</type>
</config_element>

<config_element name="Byte4" psid="">
  <label>Byte4</label>
  <type>add_on_feature_support_byte4_t</type>
</config_element>

<config_element name="Byte5" psid="">
  <label>Byte5</label>
  <type>supported_features_mask_byte5_t</type>
</config_element>

<config_element name="Byte5" psid="">
  <label>Byte5</label>
  <type>qlmp_feature_set_byte5_t</type>
</config_element>

<config_element name="Byte6" psid="">
  <label>Byte6</label>
  <type>supported_features_mask_byte6_t</type>
</config_element>

<config_element name="Byte6" psid="">
  <label>Byte6</label>
  <type>qlmp_feature_set_byte6_t</type>
</config_element>

<config_element name="Byte7" psid="">
  <label>Byte7</label>
  <type>supported_features_mask_byte7_t</type>
</config_element>

<config_element name="Byte7" psid="">
  <label>Byte7</label>
  <type>qlmp_feature_set_byte7_t</type>
</config_element>

<config_element name="Byte8" psid="">
  <label>Byte8</label>
  <type>qlmp_feature_set_byte8_t</type>
</config_element>

<config_element name="Byte9" psid="">
  <label>Byte9</label>
  <type>qlmp_feature_set_byte9_t</type>
</config_element>

<config_element name="Byte_0" psid="">
  <label>Byte_0</label>
  <type>qll_feature_set_byte_0_t</type>
</config_element>

<config_element name="Byte_1" psid="">
  <label>Byte_1</label>
  <type>qll_feature_set_byte_1_t</type>
</config_element>

<config_element name="Byte_2" psid="">
  <label>Byte_2</label>
  <type>qll_feature_set_byte_2_t</type>
</config_element>

<config_element name="Byte_3" psid="">
  <label>Byte_3</label>
  <type>qll_feature_set_byte_3_t</type>
</config_element>

<config_element name="Byte_4" psid="">
  <label>Byte_4</label>
  <type>qll_feature_set_byte_4_t</type>
</config_element>

<config_element name="Byte_5" psid="">
  <label>Byte_5</label>
  <type>qll_feature_set_byte_5_t</type>
</config_element>

<config_element name="Byte_6" psid="">
  <label>Byte_6</label>
  <type>qll_feature_set_byte_6_t</type>
</config_element>

<config_element name="Byte_7" psid="">
  <label>Byte_7</label>
  <type>qll_feature_set_byte_7_t</type>
</config_element>

<config_element name="CIS Flushing Point Improvement" psid="">
  <label>CIS Flushing Point Improvement</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Improvements to the CIS flushing point calculations for better reliability.
  </description_user>
</config_element>

<config_element name="CLK Gate Sel" psid="">
  <label>CLK Gate Sel</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0=Sleep Control, 1= Always On
  </description_user>
</config_element>

<config_element name="CONN_FAIL" psid="">
  <label>CONN_FAIL</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="CONV_FORCE_TUNE_NSE" psid="">
  <label>CONV_FORCE_TUNE_NSE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Param_Conv: force to tune NSE if set.
  </description_user>
</config_element>

<config_element name="COS Beta Combined" psid="">
  <label>COS Beta Combined</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="COS Beta High" psid="">
  <label>COS Beta High</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="COS Beta Low" psid="">
  <label>COS Beta Low</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="COS Phase Mismatch" psid="">
  <label>COS Phase Mismatch</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="CPU Profiling" psid="">
  <label>CPU Profiling</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit13: Enable CPU Profiling
  </description_user>
</config_element>

<config_element name="CQDDR" psid="">
  <label>CQDDR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit2: Channel Quality Driven Data Rate
  </description_user>
</config_element>

<config_element name="CVSD synchronous data" psid="">
  <label>CVSD synchronous data</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit0: CVSD synchronous data
  </description_user>
</config_element>

<config_element name="Cache Remote Features" psid="">
  <label>Cache Remote Features</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
The feature to Cache Remote device Version and feature information.
  </description_user>
</config_element>

<config_element name="CalcRomCrc" psid="">
  <label>CalcRomCrc</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Calculate ROM CRC on Crash
  </description_user>
</config_element>

<config_element name="Channel" psid="">
  <label>Channel</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
I2S / Codec channel  or slot for PCM
  </description_user>
</config_element>

<config_element name="Channel Selection Algo 2" psid="">
  <label>Channel Selection Algo 2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Support for LE channel selection algorithm 2
  </description_user>
</config_element>

<config_element name="Coarse Clock Adjustment" psid="">
  <label>Coarse Clock Adjustment</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Coded PHY" psid="">
  <label>Coded PHY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Coded PHY (125Kbps/500Kbps) Support
  </description_user>
</config_element>

<config_element name="Coding" psid="">
  <label>Coding</label>
  <type>coding_t</type>
</config_element>

<config_element name="Commands at HCI Task Enable" psid="">
  <label>Commands at HCI Task Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Logging of HCI Commands sent down from Host to SoC (seen @ the HCI Task)
  </description_user>
</config_element>

<config_element name="Commands at LLM Task Enable" psid="">
  <label>Commands at LLM Task Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Logging of HCI Commands sent to SoC from the host (seen @ the LLM Task)
  </description_user>
</config_element>

<config_element name="Conn CTE Request" psid="">
  <label>Conn CTE Request</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Connection CTE Request supported
  </description_user>
</config_element>

<config_element name="Conn CTE Response" psid="">
  <label>Conn CTE Response</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Connection CTE Response supported
  </description_user>
</config_element>

<config_element name="Conn_Param_Req" psid="">
  <label>Conn_Param_Req</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Connection Parameters Request Procedure
  </description_user>
</config_element>

<config_element name="Connection Power Level Index" psid="">
  <label>Connection Power Level Index</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>9</range_max>
  <description_user>
Connection power level index (Default=0x7, 7d). Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
  </description_user>
</config_element>

<config_element name="Connection Relay" psid="">
  <label>Connection Relay</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Device Supports Connection Relay
  </description_user>
</config_element>

<config_element name="Connectionless slave Broadcast Master Role" psid="">
  <label>Connectionless slave Broadcast Master Role</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Connectionless slave Broadcast Slave Role" psid="">
  <label>Connectionless slave Broadcast Slave Role</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Connless CTE Rx" psid="">
  <label>Connless CTE Rx</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Connectionless CTE Rx supported
  </description_user>
</config_element>

<config_element name="Connless CTE Tx" psid="">
  <label>Connless CTE Tx</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Connectionless CTE Tx supported
  </description_user>
</config_element>

<config_element name="Controller Secure Connections" psid="">
  <label>Controller Secure Connections</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
This flag is mapped to Extended Feature mask of BT 4.1 Controller Secure Connections bit.
  </description_user>
</config_element>

<config_element name="Core Reset Option" psid="">
  <label>Core Reset Option</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
00=reg on, 01=osc on, 10=rst off, 11=clks active.
  </description_user>
</config_element>

<config_element name="Crypto Scatter Gather Enable Fallback" psid="">
  <label>Crypto Scatter Gather Enable Fallback</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0: Enables the Crypto Scatter Gather new HW implementation. 1: Enables the Legacy Crypto Scatter Gather implementation.
  </description_user>
</config_element>

<config_element name="D8PSK Err" psid="">
  <label>D8PSK Err</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>16383</range_max>
  <description_user>
If the error metric for D8PSK is greater than this threshold, the erroneous_bit_detected is asserted
  </description_user>
</config_element>

<config_element name="D8PSK Err Region" psid="">
  <label>D8PSK Err Region</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
  <description_user>
This threshold sets the region where the D8PSK demodulators decision metric will be used to calculate the error metric for D8PSK
  </description_user>
</config_element>

<config_element name="DISPATCH_CONSUMED" psid="">
  <label>DISPATCH_CONSUMED</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information from the dispatch element that was consumed by the scheduler.
  </description_user>
</config_element>

<config_element name="DISPATCH_FUTURE" psid="">
  <label>DISPATCH_FUTURE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information from the dispatch element that was determined to be in the future by the scheduler.
  </description_user>
</config_element>

<config_element name="DISPATCH_HANDLE" psid="">
  <label>DISPATCH_HANDLE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the connection handle/ISO group ID for select dispatch handlers.
  </description_user>
</config_element>

<config_element name="DISPATCH_LATE" psid="">
  <label>DISPATCH_LATE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information from the dispatch element that was determined to be late by the scheduler.
  </description_user>
</config_element>

<config_element name="DISPATCH_LATE_REPORT" psid="">
  <label>DISPATCH_LATE_REPORT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Unused?
  </description_user>
</config_element>

<config_element name="DISPATCH_NOT_CONSUMED" psid="">
  <label>DISPATCH_NOT_CONSUMED</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information from the dispatch element that was NOT consumed by the scheduler.
  </description_user>
</config_element>

<config_element name="DISPATCH_SEARCH_CHECK_ELEM" psid="">
  <label>DISPATCH_SEARCH_CHECK_ELEM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information for next time-ordered dispatch element the scheduler compares against DISPATCH_SEARCH_PRIO_ELEM to decide the next correct job to dispatch.
  </description_user>
</config_element>

<config_element name="DISPATCH_SEARCH_OVERLAP" psid="">
  <label>DISPATCH_SEARCH_OVERLAP</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information for the next time-ordered dispatch element the scheduler considers higher priority and overlapping in time compared to DISPATCH_SEARCH_PRIO_ELEM while the scheduler decides the correct choice for the next job to dispatch.
  </description_user>
</config_element>

<config_element name="DISPATCH_SEARCH_PRIO_ELEM" psid="">
  <label>DISPATCH_SEARCH_PRIO_ELEM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information for each next time-ordered dispatch element the scheduler considers while the scheduler decides the correct choice for the next job to dispatch.
  </description_user>
</config_element>

<config_element name="DISPATCH_SEARCH_UNWIND" psid="">
  <label>DISPATCH_SEARCH_UNWIND</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information for each dispatch element the scheduler considers to not overlap with the next higher priority dispatch while the scheduler decides the correct choice for the next job to dispatch.
  </description_user>
</config_element>

<config_element name="DISPATCH_VERBOSE" psid="">
  <label>DISPATCH_VERBOSE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Unused?
  </description_user>
</config_element>

<config_element name="DMin" psid="">
  <label>DMin</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="DQPSK Err" psid="">
  <label>DQPSK Err</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>16383</range_max>
  <description_user>
If the error metric for DQPSK is greater than this threshold, the erroneous_bit_detected is asserted
  </description_user>
</config_element>

<config_element name="DQPSK Err Region" psid="">
  <label>DQPSK Err Region</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
  <description_user>
This threshold sets the region where the DQPSK demodulators decision metric will be used to calculate the error metric for DQPSK
  </description_user>
</config_element>

<config_element name="DYNAMIC_POWER_CONTROL_ENABLE_BIT" psid="">
  <label>DYNAMIC_POWER_CONTROL_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Data Length Extension" psid="">
  <label>Data Length Extension</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Data Packet Length Extension
  </description_user>
</config_element>

<config_element name="DbgThreshold" psid="">
  <label>DbgThreshold</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
This value is a threshold for debug parameters other than retransmission, which can cause a SCO blip.
  </description_user>
</config_element>

<config_element name="DebugEnable" psid="">
  <label>DebugEnable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
enable debug log, 0: disable, 1: enable
  </description_user>
</config_element>

<config_element name="Delay" psid="">
  <label>Delay</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>63</range_max>
  <description_user>
Allows specification of the Acquisition Threshold delay value.
  </description_user>
</config_element>

<config_element name="Disable Enh Log Buffering" psid="">
  <label>Disable Enh Log Buffering</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
When Set, disable Enhance log Buffer mechanism and queue each log immediately.
  </description_user>
</config_element>

<config_element name="Disable Enh Log Flush" psid="">
  <label>Disable Enh Log Flush</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
If set, disable flush mechanism and send enhanced logs only when actual Host traffic is active
  </description_user>
</config_element>

<config_element name="Disable Nap" psid="">
  <label>Disable Nap</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit7: 1: Disable the Nap (Pause) feature for easier JTAG debugging.  0: Enable Nap feature.
  </description_user>
</config_element>

<config_element name="Display Heap Stats" psid="">
  <label>Display Heap Stats</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit10: When Enabled, Display the Upper and Lower Heap Statistics at the time of Idle Task.
  </description_user>
</config_element>

<config_element name="Display Stacks" psid="">
  <label>Display Stacks</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit6: 1: Enable Display of IRQ, FIQ, SYS, and Task Stacks sizes and free every 10 seconds. 0: Disable the display.
  </description_user>
</config_element>

<config_element name="Drift Rate BLE" psid="">
  <label>Drift Rate BLE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>500</range_max>
  <description_user>
PPM Drift Rate for BLE (Default: 0x2D, 45d)
  </description_user>
</config_element>

<config_element name="Drift Rate BTC" psid="">
  <label>Drift Rate BTC</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>250</range_max>
  <description_user>
PPM Drift Rate for BT Classical (Default: 0x2D, 45d)
  </description_user>
</config_element>

<config_element name="DutyCycleThreshold" psid="">
  <label>DutyCycleThreshold</label>
  <type>uint8</type>
  <array_length_min>16</array_length_min>
  <array_length_max>16</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="Dynamic Logging Enable" psid="">
  <label>Dynamic Logging Enable</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0: When HOST is in sleep don't send the logs immediately. Wait until HOST is awake. 1: Send out the Logs as when they are queued to transmit to HOST.
  </description_user>
</config_element>

<config_element name="Dynamic Wake Retransmit Timeout" psid="">
  <label>Dynamic Wake Retransmit Timeout</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Wake Retransmit Timeout can be set to either constant value always or can be configured to increment dynamically based on number of Wake Indication Timeouts. When this BIT is set to 1: Wake Retransmit timeout will increment linearly. For example if the Wake Retransmit timeout is set to 10msec then Wake Indication will be sent out at 0, 10, 20, 30, 40, 50, 60msec timeouts.
  </description_user>
</config_element>

<config_element name="EDP Vote Enable" psid="">
  <label>EDP Vote Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enables bitwise majority voting as part of Rx Erroneous Data Processing.  Disabling will eliminate some CPU-intensive processing, at the cost of quality.  Default=1.
  </description_user>
</config_element>

<config_element name="EDR" psid="">
  <label>EDR</label>
  <type>edr_t</type>
</config_element>

<config_element name="EDR ACL 3 slot" psid="">
  <label>EDR ACL 3 slot</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit7: EDR ACL 3 slot
  </description_user>
</config_element>

<config_element name="EDR ACL 5 slot" psid="">
  <label>EDR ACL 5 slot</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit0: EDR ACL 5 slot
  </description_user>
</config_element>

<config_element name="EDR ACL 8 DPSK mode" psid="">
  <label>EDR ACL 8 DPSK mode</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit2: EDR ACL 8 DPSK mode
  </description_user>
</config_element>

<config_element name="EDR ACL DQPSK mode" psid="">
  <label>EDR ACL DQPSK mode</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit1: EDR ACL DQPSK mode
  </description_user>
</config_element>

<config_element name="EDR eSCO 3 slot" psid="">
  <label>EDR eSCO 3 slot</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit7: EDR eSCO 3 slot
  </description_user>
</config_element>

<config_element name="EDR eSCO 8 DPSK mode" psid="">
  <label>EDR eSCO 8 DPSK mode</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit6: EDR eSCO 8 DPSK mode
  </description_user>
</config_element>

<config_element name="EDR eSCO DQPSM mode" psid="">
  <label>EDR eSCO DQPSM mode</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit5: EDR eSCO DQPSM mode
  </description_user>
</config_element>

<config_element name="ESCO EV3 packets" psid="">
  <label>ESCO EV3 packets</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit7: Extended SCO link (EV3 packets)
  </description_user>
</config_element>

<config_element name="EV4 packets" psid="">
  <label>EV4 packets</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit0: EV4 packets
  </description_user>
</config_element>

<config_element name="EV5 packets" psid="">
  <label>EV5 packets</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit1: EV5 packets
  </description_user>
</config_element>

<config_element name="EXTID" psid="">
  <label>EXTID</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
SLC logging extendable ID.  Through the use of a sub-ID, this may be used to extend the number of SLC log types possible.
  </description_user>
</config_element>

<config_element name="Enable" psid="">
  <label>Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable LLR Trigger and Trigger Scan.
  </description_user>
</config_element>

<config_element name="Enable" psid="">
  <label>Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
PHY Auto Selection Algorithm Global Enable
  </description_user>
</config_element>

<config_element name="Enable" psid="">
  <label>Enable</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
SPTA enable, 1 for enabled, 0 for disabled.
  </description_user>
</config_element>

<config_element name="Enable" psid="">
  <label>Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
enable the feature: 0: disable, 1: enable
  </description_user>
</config_element>

<config_element name="Enable Common ACL RTSC Instance" psid="">
  <label>Enable Common ACL RTSC Instance</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Common ACL RTSC Instance
  </description_user>
</config_element>

<config_element name="Enable ISR Logger" psid="">
  <label>Enable ISR Logger</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit8: Enable PF_DBG_ISR API's to support SLC layer logging.
  </description_user>
</config_element>

<config_element name="Enable Infra Assert" psid="">
  <label>Enable Infra Assert</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Assert when Infra fails for debug.
  </description_user>
</config_element>

<config_element name="Enable LE ISO RTSC" psid="">
  <label>Enable LE ISO RTSC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable RTSC for LE ISO. RTSC for LE ISO can be supported only if the RTSC HW supports Weak Bit Mask generation.
  </description_user>
</config_element>

<config_element name="Enable LL Logger" psid="">
  <label>Enable LL Logger</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit1: Enables logger output from the Lower Layer stack.  0==LL logger disabled (default), 1==LL logger enabled.
  </description_user>
</config_element>

<config_element name="Enable Memory Dump for Standalone Testing" psid="">
  <label>Enable Memory Dump for Standalone Testing</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable memory dump to be send over UART. This is for standalone testing of Unified Crashdump in Slate.
  </description_user>
</config_element>

<config_element name="Enable Power Monitoring" psid="">
  <label>Enable Power Monitoring</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit20: For allocating memory to logger counter buffer.
  </description_user>
</config_element>

<config_element name="Enable UL Logger" psid="">
  <label>Enable UL Logger</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit2: Enables logger output from the Upper Layer stack.  0==UL logger disabled (default), 1==UL logger enabled.
  </description_user>
</config_element>

<config_element name="EnableRSSIUpdate" psid="">
  <label>EnableRSSIUpdate</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Setting this BIT will change the RSSI update mechanism as mentioend below
  </description_user>
</config_element>

<config_element name="Encapsulated PDU" psid="">
  <label>Encapsulated PDU</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit4: Encapsulated PDU
  </description_user>
</config_element>

<config_element name="Encryption" psid="">
  <label>Encryption</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit2: Encryption
  </description_user>
</config_element>

<config_element name="Encryption" psid="">
  <label>Encryption</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Encryption Supported
  </description_user>
</config_element>

<config_element name="Enh Log Enable" psid="">
  <label>Enh Log Enable</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Flag to enable/disable Enhanced Logging. 0-Disable; 1-Enable
  </description_user>
</config_element>

<config_element name="Enhanced Power Control" psid="">
  <label>Enhanced Power Control</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit2: Enhanced Power Control feature
  </description_user>
</config_element>

<config_element name="Enhanced inquiry scan" psid="">
  <label>Enhanced inquiry scan</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit3: Enhanced inquiry scan
  </description_user>
</config_element>

<config_element name="Erroneous Data" psid="">
  <label>Erroneous Data</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit5: Erroneous Data
  </description_user>
</config_element>

<config_element name="Events at HCI Task Enable" psid="">
  <label>Events at HCI Task Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Logging of HCI Events sent from Soc to the Host (seen @ the HCI Task)
  </description_user>
</config_element>

<config_element name="Ext_Rej_Ind" psid="">
  <label>Ext_Rej_Ind</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Extended Reject Indication
  </description_user>
</config_element>

<config_element name="Extended Advertising" psid="">
  <label>Extended Advertising</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Advertising Extension Support
  </description_user>
</config_element>

<config_element name="Extended Audio Format Enable" psid="">
  <label>Extended Audio Format Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Use extended format to deliver frames to the audio subsystem.
  </description_user>
</config_element>

<config_element name="Extended ISO" psid="">
  <label>Extended ISO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Extended ISO Channel support
  </description_user>
</config_element>

<config_element name="Extended ISOAL" psid="">
  <label>Extended ISOAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Extended ISOAL host aware.
  </description_user>
</config_element>

<config_element name="Extended Inquiry Response" psid="">
  <label>Extended Inquiry Response</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit0: Extended Inquiry Response
  </description_user>
</config_element>

<config_element name="Extended Scanner Filter Policies" psid="">
  <label>Extended Scanner Filter Policies</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Extended Scanner Filter Policies
  </description_user>
</config_element>

<config_element name="Extended features" psid="">
  <label>Extended features</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit7: Extended features
  </description_user>
</config_element>

<config_element name="Extended_feature_mask_Page_2_Reserved0" psid="">
  <label>Extended_feature_mask_Page_2_Reserved0</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Extended_feature_mask_Page_2_Reserved1" psid="">
  <label>Extended_feature_mask_Page_2_Reserved1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Extended_feature_mask_Page_2_Reserved2" psid="">
  <label>Extended_feature_mask_Page_2_Reserved2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Extended_feature_mask_Page_2_Reserved3" psid="">
  <label>Extended_feature_mask_Page_2_Reserved3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Extended_feature_mask_Page_2_Reserved4" psid="">
  <label>Extended_feature_mask_Page_2_Reserved4</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Extended_feature_mask_Page_2_Reserved5" psid="">
  <label>Extended_feature_mask_Page_2_Reserved5</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Extended_feature_mask_Page_2_Reserved6" psid="">
  <label>Extended_feature_mask_Page_2_Reserved6</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="Extended_feature_mask_Page_2_Reserved7" psid="">
  <label>Extended_feature_mask_Page_2_Reserved7</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="FIFO Empty Entries to Flow Off" psid="">
  <label>FIFO Empty Entries to Flow Off</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
  <description_user>
If the number of empty entries in the Rx FIFO falls below this number, the host will be flowed off.
  </description_user>
</config_element>

<config_element name="FM_LO" psid="">
  <label>FM_LO</label>
  <type>fm_lo_t</type>
</config_element>

<config_element name="FRA_ENABLED" psid="">
  <label>FRA_ENABLED</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Tag indicates whether the FRA feature is enabled or not.
  </description_user>
</config_element>

<config_element name="FRA_HIGH_THRESH" psid="">
  <label>FRA_HIGH_THRESH</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The threshold that must be crossed to move from prohibiting 3DH packets to allowing 3DH packets.  Number is held in Q15 format.  Default is 0.9.
  </description_user>
</config_element>

<config_element name="FRA_LOW_THRESH" psid="">
  <label>FRA_LOW_THRESH</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The threshold that must be crossed from allowing 3DH packets to prohibiting 3DH packets.  The number is held in Q15 format.  Default is 0.4.
  </description_user>
</config_element>

<config_element name="FRA_MAX_RETRANS" psid="">
  <label>FRA_MAX_RETRANS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The max number of repeated ARQNs that are allowed.
  </description_user>
</config_element>

<config_element name="FRA_WEIGHTING" psid="">
  <label>FRA_WEIGHTING</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The weighting given to repeats of ARQN 0s or 1s.  Value stored in Q15.  Default is 1/8.
  </description_user>
</config_element>

<config_element name="FT CHANGE" psid="">
  <label>FT CHANGE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Dynamic Flush Timeout for adaptive LE audio
  </description_user>
</config_element>

<config_element name="FailureRateThreshold" psid="">
  <label>FailureRateThreshold</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>100</range_max>
  <description_user>
In one period, if failure rate exceeds this threshold, this period will be regarded as glitch happened.
  </description_user>
</config_element>

<config_element name="Filler" psid="">
  <label>Filler</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
Filler for byte alignment
  </description_user>
</config_element>

<config_element name="Filler_3" psid="">
  <label>Filler_3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
For byte-alignment
  </description_user>
</config_element>

<config_element name="Fine Power Adjust PL0" psid="">
  <label>Fine Power Adjust PL0</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Fine Power Adjust for PL0.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 0.  Fine Power Adjust PL0 = Actual Power PL0 - 4 * Coarse Power PL0.
  </description_user>
</config_element>

<config_element name="Fine Power Adjust PL1" psid="">
  <label>Fine Power Adjust PL1</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Fine Power Adjust for PL1.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 1.  Fine Power Adjust PL1 = Actual Power PL1 - 4 * Coarse Power PL1.
  </description_user>
</config_element>

<config_element name="Fine Power Adjust PL2" psid="">
  <label>Fine Power Adjust PL2</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Fine Power Adjust for PL2.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 2.  Fine Power Adjust PL2 = Actual Power PL2 - 4 * Coarse Power PL2.
  </description_user>
</config_element>

<config_element name="Fine Power Adjust PL3" psid="">
  <label>Fine Power Adjust PL3</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Fine Power Adjust for PL3.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 3.  Fine Power Adjust PL3 = Actual Power PL3 - 4 * Coarse Power PL3.
  </description_user>
</config_element>

<config_element name="Fine Power Adjust PL4" psid="">
  <label>Fine Power Adjust PL4</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Fine Power Adjust for PL4.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 4.  Fine Power Adjust PL4 = Actual Power PL4 - 4 * Coarse Power PL4.
  </description_user>
</config_element>

<config_element name="Fine Power Adjust PL5" psid="">
  <label>Fine Power Adjust PL5</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Fine Power Adjust for PL5.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 5.  Fine Power Adjust PL5 = Actual Power PL5 - 4 * Coarse Power PL5.
  </description_user>
</config_element>

<config_element name="Fine Power Adjust PL6" psid="">
  <label>Fine Power Adjust PL6</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Fine Power Adjust for PL6.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 6.  Fine Power Adjust PL6 = Actual Power PL6 - 4 * Coarse Power PL6.
  </description_user>
</config_element>

<config_element name="Fine Power Adjust PL7" psid="">
  <label>Fine Power Adjust PL7</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Fine Power Adjust for PL7.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 7.  Fine Power Adjust PL7 = Actual Power PL7 - 4 * Coarse Power PL7.
  </description_user>
</config_element>

<config_element name="Fine Power Adjust PL8" psid="">
  <label>Fine Power Adjust PL8</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Fine Power Adjust for PL8.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 8.  Fine Power Adjust PL8 = Actual Power PL8 - 4 * Coarse Power PL8.
  </description_user>
</config_element>

<config_element name="Fine Power Adjust PL9" psid="">
  <label>Fine Power Adjust PL9</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Fine Power Adjust for PL9.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 9.  Fine Power Adjust PL9 = Actual Power PL9 - 4 * Coarse Power PL9.
  </description_user>
</config_element>

<config_element name="Flags" psid="">
  <label>Flags</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="Flow Control Lag" psid="">
  <label>Flow Control Lag</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
  <description_user>
Bit4_6: 3 Bits representing the Flow Control Lag
  </description_user>
</config_element>

<config_element name="Flow Off after Crashdump" psid="">
  <label>Flow Off after Crashdump</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit18: Flag to indicate if we need to flow off Uart after sending crashdump to Host
  </description_user>
</config_element>

<config_element name="ForceChanAssessment" psid="">
  <label>ForceChanAssessment</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit0: Set this bit to preempt ACL data and instead force a single channel assessment period when the first master connection is established.
  </description_user>
</config_element>

<config_element name="ForceVoicePath" psid="">
  <label>ForceVoicePath</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
When forceNvmPath=1, ignore  enhanceSCO.data_path=1~0xFE, which means vsc, when enhancesco_data_path is 0 or 0xff, follow btspec.
  </description_user>
</config_element>

<config_element name="Fractional Rate Divisor" psid="">
  <label>Fractional Rate Divisor</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
SiW1750/1760: BBCLK = 16,000,000; For the SiW3000 : BBCLK = 32,000,000; For QCA6174 2.x : BBCLK = 32,000,000; For QCA6174 3.x : BBCLK = 32,000,000 or 64,000,000
  </description_user>
</config_element>

<config_element name="FromAir" psid="">
  <label>FromAir</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Max FromAir SDU size in bytes for this stream.
  </description_user>
</config_element>

<config_element name="GFSK Err" psid="">
  <label>GFSK Err</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>16383</range_max>
  <description_user>
If the error metric for GFSK is greater than this threshold, the erroneous_bit_detected is asserted
  </description_user>
</config_element>

<config_element name="GFSK Err Region" psid="">
  <label>GFSK Err Region</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
  <description_user>
This threshold sets the region where the GFSK demodulators decision metric will be used to calculate the error metric for GFSK
  </description_user>
</config_element>

<config_element name="Generalized interlaced scan" psid="">
  <label>Generalized interlaced scan</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="GlitchCountThreshold" psid="">
  <label>GlitchCountThreshold</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
In one report interval, if the glitches happen more than this threshold, need report to host.
  </description_user>
</config_element>

<config_element name="HID_EMULATION_ENABLE_BIT" psid="">
  <label>HID_EMULATION_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="HV2 Packets" psid="">
  <label>HV2 Packets</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit4: HV2 Packets
  </description_user>
</config_element>

<config_element name="HV3 Packets" psid="">
  <label>HV3 Packets</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit5: HV3 Packets
  </description_user>
</config_element>

<config_element name="HW Flow Control En" psid="">
  <label>HW Flow Control En</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Configure UART HW FLOW CONTROL. Set 1 to enable or 0 to disable HW Flow Control.
  </description_user>
</config_element>

<config_element name="Half_LSTO" psid="">
  <label>Half_LSTO</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Hard Clash Detection" psid="">
  <label>Hard Clash Detection</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Uses a hard clash detection to select when to reject eSCO parameters with RESERVED_SLOT_VIOLATION or POSSIBLE_BUT_NOT_PREFERRED
  </description_user>
</config_element>

<config_element name="High Data Rate Enabled" psid="">
  <label>High Data Rate Enabled</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable HDR (High Data Rate) transport support
  </description_user>
</config_element>

<config_element name="Higher Layer Channel Message" psid="">
  <label>Higher Layer Channel Message</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Higher Layer Channel Message support
  </description_user>
</config_element>

<config_element name="Hold Mode" psid="">
  <label>Hold Mode</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit6: Hold Mode
  </description_user>
</config_element>

<config_element name="Host GPIO Control" psid="">
  <label>Host GPIO Control</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit0: Enable Host GPIO Control.  0==Device GPIO Control (default), 1==Host GPIO Control.
  </description_user>
</config_element>

<config_element name="HostWake Pin" psid="">
  <label>HostWake Pin</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="HostWake Polarity" psid="">
  <label>HostWake Polarity</label>
  <type>hostwake_polarity_t</type>
</config_element>

<config_element name="Host_Report_Mask" psid="">
  <label>Host_Report_Mask</label>
  <type>hci_logging_config_host_report_mask_t</type>
</config_element>

<config_element name="IOP Run From ROM" psid="">
  <label>IOP Run From ROM</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit5: Used to debug Bali by forcing the IOP code to execute directly out of ROM.  Otherwise, the IOP code will copy itself to RAM and run from there.  Default = 0 (run from RAM).
  </description_user>
</config_element>

<config_element name="ISO Audio route" psid="">
  <label>ISO Audio route</label>
  <type>iso_audio_route_t</type>
</config_element>

<config_element name="Info at LLM Task Enable" psid="">
  <label>Info at LLM Task Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Logging of Debug information (@ the LLM Task)
  </description_user>
</config_element>

<config_element name="Inhibit VS NOP Command Complete" psid="">
  <label>Inhibit VS NOP Command Complete</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit4: Inhibits the sending of Command Complete (with opcode of NOP) after processing all Vendor Specific HCI commands, for compatibility with older scripts.  Default==0.
  </description_user>
</config_element>

<config_element name="Input Format" psid="">
  <label>Input Format</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
Bits8_9: Input Format (0=Linear, 1=u-law,2=A-law)
  </description_user>
</config_element>

<config_element name="Input Sign Format" psid="">
  <label>Input Sign Format</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
Bits6_7: Input Sign Format (0=1's comp, 1=2's comp, 2=signed magnitude, 3=CVSD (SiW Vendor Specific)
  </description_user>
</config_element>

<config_element name="Inquiry" psid="">
  <label>Inquiry</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0 -&gt; Do not reduce bit rate when Inquiry is active,  1-&gt; Reduce bit rate to moderate level  if Inquiry is active
  </description_user>
</config_element>

<config_element name="Inquiry Response Notification Event" psid="">
  <label>Inquiry Response Notification Event</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Inquiry Tx Power Level" psid="">
  <label>Inquiry Tx Power Level</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Insecure Q-Root Key" psid="">
  <label>Insecure Q-Root Key</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable/disable bit for Insecure Q-Root Key
  </description_user>
</config_element>

<config_element name="Insecure Q-Root Key" psid="">
  <label>Insecure Q-Root Key</label>
  <type>insecure_q_root_key_t</type>
</config_element>

<config_element name="Instance" psid="">
  <label>Instance</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
I2S / PCM instance. Not applicable for Codec
  </description_user>
</config_element>

<config_element name="Integer Rate Divisor" psid="">
  <label>Integer Rate Divisor</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Integer Baud Rate divisor;  Formula's to Calculate Baud Rate Registers: ibrd = ( BBCLK/(8*BAUD) ); For SiW1750/1760: BBCLK = 16,000,000; For the SiW3000 : BBCLK = 32,000,000; For QCA6174 2.x : BBCLK = 32,000,000; For QCA6174 3.x : BBCLK = 32,000,000 or 64,000,000
  </description_user>
</config_element>

<config_element name="Interlaced inquiry scan" psid="">
  <label>Interlaced inquiry scan</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit4: Interlaced inquiry scan
  </description_user>
</config_element>

<config_element name="Interlaced page scan" psid="">
  <label>Interlaced page scan</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit5: Interlaced page scan
  </description_user>
</config_element>

<config_element name="Is Expect Fatal" psid="">
  <label>Is Expect Fatal</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Set 1 to Consider EXPECT as FATAL.
  </description_user>
</config_element>

<config_element name="L2CAP Payload Flow Control Enabled" psid="">
  <label>L2CAP Payload Flow Control Enabled</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
1 - Enabled, 0 - Disabled
  </description_user>
</config_element>

<config_element name="LAST_KNOWN_ABS_RSSI_BEFORE_DISCONNECT_EVENT_ENABLE_BIT" psid="">
  <label>LAST_KNOWN_ABS_RSSI_BEFORE_DISCONNECT_EVENT_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="LC Fatal Abort Assert" psid="">
  <label>LC Fatal Abort Assert</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
If set to 1, cause assert on Link Controller Fatal Abort.
  </description_user>
</config_element>

<config_element name="LC3 buffer size" psid="">
  <label>LC3 buffer size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="LC3 packet len" psid="">
  <label>LC3 packet len</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="LC3 ttp latency" psid="">
  <label>LC3 ttp latency</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="LE" psid="">
  <label>LE</label>
  <type>le_t</type>
</config_element>

<config_element name="LE ACL handover" psid="">
  <label>LE ACL handover</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Device Supports LE ACL handover
  </description_user>
</config_element>

<config_element name="LE BIS Master" psid="">
  <label>LE BIS Master</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Support LE ISO BIS Master role or not. aka. ISO Broadcast Tx.
  </description_user>
</config_element>

<config_element name="LE BIS Slave" psid="">
  <label>LE BIS Slave</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Support LE ISO BIS Slave role or not.  aka. ISO Broadcast Rx.
  </description_user>
</config_element>

<config_element name="LE CIS Master" psid="">
  <label>LE CIS Master</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Support LE ISO CIS Master role or not.
  </description_user>
</config_element>

<config_element name="LE CIS Slave" psid="">
  <label>LE CIS Slave</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Support LE ISO CIS Slave role or not.
  </description_user>
</config_element>

<config_element name="LE Connection Subrating" psid="">
  <label>LE Connection Subrating</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Enhanced Connection Update feature
  </description_user>
</config_element>

<config_element name="LE EDPH" psid="">
  <label>LE EDPH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Empty Data Packet Hard Align.
  </description_user>
</config_element>

<config_element name="LE ISO RTSC Enable" psid="">
  <label>LE ISO RTSC Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enables RTSC (HW Based EDP) for LE ISO packets.
  </description_user>
</config_element>

<config_element name="LE PAST Recipient" psid="">
  <label>LE PAST Recipient</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE PAST packet Rx support.
  </description_user>
</config_element>

<config_element name="LE PAST Sender" psid="">
  <label>LE PAST Sender</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE PAST packet Tx support
  </description_user>
</config_element>

<config_element name="LE Path Loss Monitoring" psid="">
  <label>LE Path Loss Monitoring</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Path Loss Monitoring
  </description_user>
</config_element>

<config_element name="LE Periodic ADI" psid="">
  <label>LE Periodic ADI</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Periodic ADI enable
  </description_user>
</config_element>

<config_element name="LE Power Change Indication" psid="">
  <label>LE Power Change Indication</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Power Change Indication
  </description_user>
</config_element>

<config_element name="LE Power Control Request" psid="">
  <label>LE Power Control Request</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Power Control Request
  </description_user>
</config_element>

<config_element name="LE Remote Public Key Validation" psid="">
  <label>LE Remote Public Key Validation</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Remote Public Key Validation Support.
  </description_user>
</config_element>

<config_element name="LE SCA Update" psid="">
  <label>LE SCA Update</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Sleep Clock Accuracy Communication Support.
  </description_user>
</config_element>

<config_element name="LE Scan Max Ratio" psid="">
  <label>LE Scan Max Ratio</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>100</range_max>
  <description_user>
Maximum Ratio for LE Scan
  </description_user>
</config_element>

<config_element name="LE Scan Min Interval" psid="">
  <label>LE Scan Min Interval</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
LE Scan Minimun interval for bandwidth control
  </description_user>
</config_element>

<config_element name="LE Supported" psid="">
  <label>LE Supported</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit6: LE Supported
  </description_user>
</config_element>

<config_element name="LEHS-F2 RX" psid="">
  <label>LEHS-F2 RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-F2 Rx Support
  </description_user>
</config_element>

<config_element name="LEHS-F2 TX" psid="">
  <label>LEHS-F2 TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-F2 Tx Support
  </description_user>
</config_element>

<config_element name="LEHS-F3 RX" psid="">
  <label>LEHS-F3 RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-F3 Rx Support
  </description_user>
</config_element>

<config_element name="LEHS-F3 TX" psid="">
  <label>LEHS-F3 TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-F3 Tx Support
  </description_user>
</config_element>

<config_element name="LEHS-F4 RX" psid="">
  <label>LEHS-F4 RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-F4 Rx Support
  </description_user>
</config_element>

<config_element name="LEHS-F4 TX" psid="">
  <label>LEHS-F4 TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-F4 Tx Support
  </description_user>
</config_element>

<config_element name="LEHS-F5 RX" psid="">
  <label>LEHS-F5 RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-F5 Rx Support
  </description_user>
</config_element>

<config_element name="LEHS-F5 TX" psid="">
  <label>LEHS-F5 TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-F5 Tx Support
  </description_user>
</config_element>

<config_element name="LEHS-F6 RX" psid="">
  <label>LEHS-F6 RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-F6 Rx Support
  </description_user>
</config_element>

<config_element name="LEHS-F6 TX" psid="">
  <label>LEHS-F6 TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-F6 Tx Support
  </description_user>
</config_element>

<config_element name="LEHS-P2 RX" psid="">
  <label>LEHS-P2 RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-P2 Rx Support
  </description_user>
</config_element>

<config_element name="LEHS-P2 TX" psid="">
  <label>LEHS-P2 TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-P2 Tx Support
  </description_user>
</config_element>

<config_element name="LEHS-P3 RX" psid="">
  <label>LEHS-P3 RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-P3 Rx Support
  </description_user>
</config_element>

<config_element name="LEHS-P3 TX" psid="">
  <label>LEHS-P3 TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-P3 Tx Support
  </description_user>
</config_element>

<config_element name="LEHS-P4 RX" psid="">
  <label>LEHS-P4 RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-P4 Rx Support
  </description_user>
</config_element>

<config_element name="LEHS-P4 TX" psid="">
  <label>LEHS-P4 TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-P4 Tx Support
  </description_user>
</config_element>

<config_element name="LEHS-P5 RX" psid="">
  <label>LEHS-P5 RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-P5 Rx Support
  </description_user>
</config_element>

<config_element name="LEHS-P5 TX" psid="">
  <label>LEHS-P5 TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-P5 Tx Support
  </description_user>
</config_element>

<config_element name="LEHS-P6 RX" psid="">
  <label>LEHS-P6 RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-P6 Rx Support
  </description_user>
</config_element>

<config_element name="LEHS-P6 TX" psid="">
  <label>LEHS-P6 TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LEHS-P6 Tx Support
  </description_user>
</config_element>

<config_element name="LEHS2 Up One" psid="">
  <label>LEHS2 Up One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS2 up one.
  </description_user>
</config_element>

<config_element name="LEHS3 Down One" psid="">
  <label>LEHS3 Down One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS3 down one.
  </description_user>
</config_element>

<config_element name="LEHS3 Up One" psid="">
  <label>LEHS3 Up One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS2 up one.
  </description_user>
</config_element>

<config_element name="LEHS4 Down One" psid="">
  <label>LEHS4 Down One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS4 down one.
  </description_user>
</config_element>

<config_element name="LEHS4 Down Two" psid="">
  <label>LEHS4 Down Two</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS4 down two.
  </description_user>
</config_element>

<config_element name="LEHS4 Up One" psid="">
  <label>LEHS4 Up One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS4 up one.
  </description_user>
</config_element>

<config_element name="LEHS5 Down One" psid="">
  <label>LEHS5 Down One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS5 down one.
  </description_user>
</config_element>

<config_element name="LEHS5 Down Two" psid="">
  <label>LEHS5 Down Two</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS5 down two.
  </description_user>
</config_element>

<config_element name="LEHS5 To LEHS2" psid="">
  <label>LEHS5 To LEHS2</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS5 to LEHS2.
  </description_user>
</config_element>

<config_element name="LEHS5 Up One" psid="">
  <label>LEHS5 Up One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS5 up one.
  </description_user>
</config_element>

<config_element name="LEHS6 Down One" psid="">
  <label>LEHS6 Down One</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS6 down one.
  </description_user>
</config_element>

<config_element name="LEHS6 Down Two" psid="">
  <label>LEHS6 Down Two</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS6 down two.
  </description_user>
</config_element>

<config_element name="LEHS6 To LEHS2" psid="">
  <label>LEHS6 To LEHS2</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Threshold PER of LEHS6 to LEHS2.
  </description_user>
</config_element>

<config_element name="LE_ADV_VERBOSE" psid="">
  <label>LE_ADV_VERBOSE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the packet header for each LE advertising packet transmitted.
  </description_user>
</config_element>

<config_element name="LE_CONN_EVT_END" psid="">
  <label>LE_CONN_EVT_END</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the reason why an LE connection event ended unnaturally (e.g. no data to Tx/Rx).
  </description_user>
</config_element>

<config_element name="LE_Channel_Classification" psid="">
  <label>LE_Channel_Classification</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Channel Classification Feature
  </description_user>
</config_element>

<config_element name="LE_ENHANCED_PRIVACY_ENABLE_BIT" psid="">
  <label>LE_ENHANCED_PRIVACY_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="LE_RSSI_FILTERING_ENABLE_BIT" psid="">
  <label>LE_RSSI_FILTERING_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="LE_RX_VERBOSE" psid="">
  <label>LE_RX_VERBOSE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the packet header for each LE packet received.
  </description_user>
</config_element>

<config_element name="LE_SCAN_FILTERING_ENABLE_BIT" psid="">
  <label>LE_SCAN_FILTERING_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="LE_SUBRATE_INFO" psid="">
  <label>LE_SUBRATE_INFO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information related to LE subrate feature.
  </description_user>
</config_element>

<config_element name="LE_Supported_Features_Reserved_0" psid="">
  <label>LE_Supported_Features_Reserved_0</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
This bit is reserved for LE_ISO_HOST_SUPPORT controlled by host. It can not overwrite the bit setting in controller.
  </description_user>
</config_element>

<config_element name="LE_Supported_Features_Reserved_0" psid="">
  <label>LE_Supported_Features_Reserved_0</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="LE_Supported_Features_Reserved_1" psid="">
  <label>LE_Supported_Features_Reserved_1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="LE_Supported_Features_Reserved_2" psid="">
  <label>LE_Supported_Features_Reserved_2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="LE_Supported_Features_Reserved_3" psid="">
  <label>LE_Supported_Features_Reserved_3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="LE_Supported_Features_Reserved_4" psid="">
  <label>LE_Supported_Features_Reserved_4</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="LE_Supported_Features_Reserved_5" psid="">
  <label>LE_Supported_Features_Reserved_5</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="LE_Supported_Features_Reserved_6" psid="">
  <label>LE_Supported_Features_Reserved_6</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="LE_Supported_Features_Reserved_7" psid="">
  <label>LE_Supported_Features_Reserved_7</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="LE_TX_VERBOSE" psid="">
  <label>LE_TX_VERBOSE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the packet header for each LE packet transmitted.
  </description_user>
</config_element>

<config_element name="LL Privacy" psid="">
  <label>LL Privacy</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Privacy for Scanner and Advertiser.
  </description_user>
</config_element>

<config_element name="LPRX_SCAN_INFO" psid="">
  <label>LPRX_SCAN_INFO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information related to low power page/inquiry scan.
  </description_user>
</config_element>

<config_element name="LP_extendFollowScan" psid="">
  <label>LP_extendFollowScan</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Number of slots to extend the follow on scan.
  </description_user>
</config_element>

<config_element name="LP_scanControl" psid="">
  <label>LP_scanControl</label>
  <type>lp_scancontrol_t</type>
</config_element>

<config_element name="LP_scanIntervalMin" psid="">
  <label>LP_scanIntervalMin</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Normal power scans will be run unless the interval between page scans is greater than LP_scanIntervalMin.  Units are in slots.
  </description_user>
</config_element>

<config_element name="LP_schedulePreSlotCount" psid="">
  <label>LP_schedulePreSlotCount</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of preslots to count prior to the follow on full power scan.
  </description_user>
</config_element>

<config_element name="LP_sniffMin" psid="">
  <label>LP_sniffMin</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Normal power scans will be run unless the sniff interval is greater than LP_sniffMin.  Units are in slots.
  </description_user>
</config_element>

<config_element name="LSTO" psid="">
  <label>LSTO</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Lambda" psid="">
  <label>Lambda</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="Linear PCM MSB" psid="">
  <label>Linear PCM MSB</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
  <description_user>
Bits2_4: Linear PCM MSB (0=MSB is bit 15, 1=MSB is bit 14 etc.)
  </description_user>
</config_element>

<config_element name="Linear size" psid="">
  <label>Linear size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit5: Linear size (0=8-bit, 1=16-bit)
  </description_user>
</config_element>

<config_element name="Link Key Byte" psid="">
  <label>Link Key Byte</label>
  <type>uint8</type>
  <array_length_min>16</array_length_min>
  <array_length_max>16</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="Link Supervision Timeout Changed Event" psid="">
  <label>Link Supervision Timeout Changed Event</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit0: Link Supervision Timeout Changed Event
  </description_user>
</config_element>

<config_element name="MAX_DURATION" psid="">
  <label>MAX_DURATION</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>20</range_max>
  <description_user>
Max duration for which the periodic calibration is allowed to run in a single shot. Unit in BT CLK LSB, 312.5 us.
  </description_user>
</config_element>

<config_element name="MCC poll manager policy" psid="">
  <label>MCC poll manager policy</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
By default, for MCC, if long time no sync, put task into inactive queue instead of suspend queue.
  </description_user>
</config_element>

<config_element name="MIC_FWD" psid="">
  <label>MIC_FWD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Feature Bit for MIC forwarding
  </description_user>
</config_element>

<config_element name="MODEM_RX_EN_OFF_DELAY" psid="">
  <label>MODEM_RX_EN_OFF_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="MODEM_RX_EN_ON_DELAY" psid="">
  <label>MODEM_RX_EN_ON_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="MODEM_TX_EN_OFF_DELAY" psid="">
  <label>MODEM_TX_EN_OFF_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="MODEM_TX_EN_ON_DELAY" psid="">
  <label>MODEM_TX_EN_ON_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="Max Num FromAir Streams" psid="">
  <label>Max Num FromAir Streams</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>16</range_max>
  <description_user>
Maximum number of FromAir streams per ISO group.  Bidirectional streams count as 1 FromAir stream.
  </description_user>
</config_element>

<config_element name="Max Num Streams" psid="">
  <label>Max Num Streams</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>16</range_max>
  <description_user>
Maximum number of streams per ISO group.  Bidirectional streams count as 1 stream.
  </description_user>
</config_element>

<config_element name="Max Num ToAir Streams" psid="">
  <label>Max Num ToAir Streams</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>16</range_max>
  <description_user>
Maximum number of ToAir streams per ISO group.  Bidirectional streams count as 1 ToAir stream.
  </description_user>
</config_element>

<config_element name="Max SDU Size" psid="">
  <label>Max SDU Size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Max eSCO SDU size in bytes.  Typically 120 if QHS is supported, else 60.
  </description_user>
</config_element>

<config_element name="Max SDU Size" psid="">
  <label>Max SDU Size</label>
  <type>max_sdu_size_t</type>
  <array_length_min>16</array_length_min>
  <array_length_max>16</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="Max SDU Size Array" psid="">
  <label>Max SDU Size Array</label>
  <type>max_sdu_size_array_t</type>
</config_element>

<config_element name="Max SDU Size_0" psid="">
  <label>Max SDU Size_0</label>
  <type>max_sdu_size_0_t</type>
</config_element>

<config_element name="Max SDU Size_1" psid="">
  <label>Max SDU Size_1</label>
  <type>max_sdu_size_1_t</type>
</config_element>

<config_element name="Max SDU Size_10" psid="">
  <label>Max SDU Size_10</label>
  <type>max_sdu_size_10_t</type>
</config_element>

<config_element name="Max SDU Size_11" psid="">
  <label>Max SDU Size_11</label>
  <type>max_sdu_size_11_t</type>
</config_element>

<config_element name="Max SDU Size_12" psid="">
  <label>Max SDU Size_12</label>
  <type>max_sdu_size_12_t</type>
</config_element>

<config_element name="Max SDU Size_13" psid="">
  <label>Max SDU Size_13</label>
  <type>max_sdu_size_13_t</type>
</config_element>

<config_element name="Max SDU Size_14" psid="">
  <label>Max SDU Size_14</label>
  <type>max_sdu_size_14_t</type>
</config_element>

<config_element name="Max SDU Size_15" psid="">
  <label>Max SDU Size_15</label>
  <type>max_sdu_size_15_t</type>
</config_element>

<config_element name="Max SDU Size_2" psid="">
  <label>Max SDU Size_2</label>
  <type>max_sdu_size_2_t</type>
</config_element>

<config_element name="Max SDU Size_3" psid="">
  <label>Max SDU Size_3</label>
  <type>max_sdu_size_3_t</type>
</config_element>

<config_element name="Max SDU Size_4" psid="">
  <label>Max SDU Size_4</label>
  <type>max_sdu_size_4_t</type>
</config_element>

<config_element name="Max SDU Size_5" psid="">
  <label>Max SDU Size_5</label>
  <type>max_sdu_size_5_t</type>
</config_element>

<config_element name="Max SDU Size_6" psid="">
  <label>Max SDU Size_6</label>
  <type>max_sdu_size_6_t</type>
</config_element>

<config_element name="Max SDU Size_7" psid="">
  <label>Max SDU Size_7</label>
  <type>max_sdu_size_7_t</type>
</config_element>

<config_element name="Max SDU Size_8" psid="">
  <label>Max SDU Size_8</label>
  <type>max_sdu_size_8_t</type>
</config_element>

<config_element name="Max SDU Size_9" psid="">
  <label>Max SDU Size_9</label>
  <type>max_sdu_size_9_t</type>
</config_element>

<config_element name="Max Sample Buf Size" psid="">
  <label>Max Sample Buf Size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Max eSCO Sample Buffer size in bytes.  Typically 240 if QHS is supported, else 120.
  </description_user>
</config_element>

<config_element name="Max_Conditions" psid="">
  <label>Max_Conditions</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>255</range_max>
  <description_user>
Max number of conditions for ADVM LE advertisement monitoring
  </description_user>
</config_element>

<config_element name="Max_Mon_Adv" psid="">
  <label>Max_Mon_Adv</label>
  <type>uint8</type>
  <range_min>10</range_min>
  <range_max>255</range_max>
  <description_user>
Max number of devices which can be active in ADVM LE advertisement monitoring
  </description_user>
</config_element>

<config_element name="Max_RSSI_Handle" psid="">
  <label>Max_RSSI_Handle</label>
  <type>uint8</type>
  <range_min>5</range_min>
  <range_max>255</range_max>
  <description_user>
Max number of connection handles for ADVM rssi monitoring
  </description_user>
</config_element>

<config_element name="MinReportIntervalMs" psid="">
  <label>MinReportIntervalMs</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Minimum report interval in ms.
  </description_user>
</config_element>

<config_element name="Minimum Channels Procedure" psid="">
  <label>Minimum Channels Procedure</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Support for minimum number of used channels procedure.
  </description_user>
</config_element>

<config_element name="Mirror Link" psid="">
  <label>Mirror Link</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Link Quality Metrics for Mirror Link. This bit is meaningful only in TWM scenario.
  </description_user>
</config_element>

<config_element name="Mismatch Comp" psid="">
  <label>Mismatch Comp</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="MultiAdvTxPower_high" psid="">
  <label>MultiAdvTxPower_high</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>9</range_max>
  <description_user>
Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
  </description_user>
</config_element>

<config_element name="MultiAdvTxPower_low" psid="">
  <label>MultiAdvTxPower_low</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>9</range_max>
  <description_user>
Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
  </description_user>
</config_element>

<config_element name="MultiAdvTxPower_max" psid="">
  <label>MultiAdvTxPower_max</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>9</range_max>
  <description_user>
Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
  </description_user>
</config_element>

<config_element name="MultiAdvTxPower_mid" psid="">
  <label>MultiAdvTxPower_mid</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>9</range_max>
  <description_user>
Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
  </description_user>
</config_element>

<config_element name="MultiAdvTxPower_min" psid="">
  <label>MultiAdvTxPower_min</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>9</range_max>
  <description_user>
Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
  </description_user>
</config_element>

<config_element name="NBLK Logger Memory Block Size" psid="">
  <label>NBLK Logger Memory Block Size</label>
  <type>uint8</type>
  <range_min>4</range_min>
  <range_max>255</range_max>
  <description_user>
Not used for ROME. Memory block size for logger is defined in oscfg instead.
  </description_user>
</config_element>

<config_element name="NBLK Logger Memory Usage" psid="">
  <label>NBLK Logger Memory Usage</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Not used for ROME. Total memory for logger is defined in oscfg instead.
  </description_user>
</config_element>

<config_element name="NBLK Stats Timer Interval" psid="">
  <label>NBLK Stats Timer Interval</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Timer Interval (Secs) to display Logger Statistics/Info, when Logger is in NonBlocking (Asynchronous) Mode. A value of 0 turns off the Statistics Display.
  </description_user>
</config_element>

<config_element name="NBS PLC Enable" psid="">
  <label>NBS PLC Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enables NBS Packet Loss Concealment. Default=1.
  </description_user>
</config_element>

<config_element name="NBS PLC Replace Single eSCO CRC Failure" psid="">
  <label>NBS PLC Replace Single eSCO CRC Failure</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
If NBS PLC is enabled, this flag controls the handling of an eSCO window in which a single eSCO packet is received with a CRC failure (and all other sSCO packets were lost).  If set to 1, then such a packet is discarded in favor of PLC.  If set to 0, then such a packet is consumed as voice data.  Default=1.
  </description_user>
</config_element>

<config_element name="NBS Sample Doubling Enable" psid="">
  <label>NBS Sample Doubling Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
If set, then the 16 kHz WBS sample rate is applied to NBS streams over the ACI transport. NBS samples are doubled with the expectation that the receiving side will only process every other sample.
  </description_user>
</config_element>

<config_element name="NVMSection" psid="">
  <label>NVMSection</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Nearest Start SDU" psid="">
  <label>Nearest Start SDU</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Set to indicate mapping the first SDU from source to the nearest/first PDU in the coming ISO event, otherwise it's the furthest SDU in next event. BIG(M) only for now.
  </description_user>
</config_element>

<config_element name="Non DM1 Encapsulated Payload" psid="">
  <label>Non DM1 Encapsulated Payload</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Non DM1 Encapsulated Payload
  </description_user>
</config_element>

<config_element name="NotifyPeriod" psid="">
  <label>NotifyPeriod</label>
  <type>uint16</type>
  <range_min>72</range_min>
  <range_max>65535</range_max>
  <description_user>
Notify Period in multiples of 1.25ms.
  </description_user>
</config_element>

<config_element name="Num QBM Mode Buffers" psid="">
  <label>Num QBM Mode Buffers</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>2</range_max>
  <description_user>
For targets prior to Zealis 3.0, QBM Mode needs single entry in start buffer pointer table for each QBM instance of size 5 times payload size + 8 bytes of metadata. From Zealis 3.0, QBM Mode supports fragmented buffers. Each QBM instance needs 5 buffer pointers entries in the start buffer pointer table. Size of each buffer is payload size + 4 bytes of metadata.
  </description_user>
</config_element>

<config_element name="Num RTSC Mode Buffers" psid="">
  <label>Num RTSC Mode Buffers</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
RTSC Buffer here means one instance, which needs three 1K buffer entires in start buffer pointer. Additional 1K buffers each are needed for Weak Bit Mask and last packet received if supported.
  </description_user>
</config_element>

<config_element name="Options" psid="">
  <label>Options</label>
  <type>sibs_parameters_options_t</type>
</config_element>

<config_element name="Overwrite Prev Logs" psid="">
  <label>Overwrite Prev Logs</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0: Drop the latest logs when log buffers are not available. 1: Dequeue the previous log buffer from Dbg Queue and use it for latest logs.
  </description_user>
</config_element>

<config_element name="PCModeChanAssessment" psid="">
  <label>PCModeChanAssessment</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit1: Set this bit to enable PC Mode Channel Assessment.  Clear this bit to enable Cell Phone Mode Channel Assessment.
  </description_user>
</config_element>

<config_element name="PERIODIC_ADV_CHMU" psid="">
  <label>PERIODIC_ADV_CHMU</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable/Disable Periodic Advertisements Channel Map Update
  </description_user>
</config_element>

<config_element name="PHY_OPTION_125K" psid="">
  <label>PHY_OPTION_125K</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Allow Coded Phy Option 125K
  </description_user>
</config_element>

<config_element name="PHY_OPTION_500K" psid="">
  <label>PHY_OPTION_500K</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Allow Coded Phy Option 500K
  </description_user>
</config_element>

<config_element name="POLLMGR_RESULT" psid="">
  <label>POLLMGR_RESULT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the connection handle and priority of the resulting dispatch from the PollMgr
  </description_user>
</config_element>

<config_element name="POLLMGR_RESULT_TYPE" psid="">
  <label>POLLMGR_RESULT_TYPE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs information about the resulting PollMgr task chosen.
  </description_user>
</config_element>

<config_element name="PRIORITY_CHANGE" psid="">
  <label>PRIORITY_CHANGE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the change in priority and reason for a dispatch element.
  </description_user>
</config_element>

<config_element name="PRIORITY_UPDATE_INTERVAL" psid="">
  <label>PRIORITY_UPDATE_INTERVAL</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
  <description_user>
Interval in which the periodic calibration dispatch priority shall be updated if preempted by other higher priory tasks. Unit in BT CLK LSB, 312.5 us. Default is 100 ms.
  </description_user>
</config_element>

<config_element name="PSRC_DLNA" psid="">
  <label>PSRC_DLNA</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="Pad" psid="">
  <label>Pad</label>
  <type>int8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="Pad Byte" psid="">
  <label>Pad Byte</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
Pad to byte align following data
  </description_user>
</config_element>

<config_element name="Page_Timeout" psid="">
  <label>Page_Timeout</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Paging" psid="">
  <label>Paging</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0 -&gt; Do not reduce bit rate when Paging is active,  1-&gt; Reduce bit rate to moderate level  if paging is active
  </description_user>
</config_element>

<config_element name="Paging parameter negotiation" psid="">
  <label>Paging parameter negotiation</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit1: Paging parameter negotiation
  </description_user>
</config_element>

<config_element name="Panic On BIS link Connection timeout" psid="">
  <label>Panic On BIS link Connection timeout</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit3: Enable Panic on BIS connection.  0==Panic disabled (default), 1==Panic Enabled.
  </description_user>
</config_element>

<config_element name="Panic On BREDR LMP Response" psid="">
  <label>Panic On BREDR LMP Response</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit8: Enable Panic on BREDR LMP Response.  0==Panic disabled (default), 1==Panic Enabled.
  </description_user>
</config_element>

<config_element name="Panic On BREDR link Connection timeout" psid="">
  <label>Panic On BREDR link Connection timeout</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit0: Enable Panic on BREDR connection.  0==Panic disabled (default), 1==Panic Enabled.
  </description_user>
</config_element>

<config_element name="Panic On Buddy Link Connection timeout" psid="">
  <label>Panic On Buddy Link Connection timeout</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit6: Enable Panic on Buddy Link connection.  0==Panic disabled (default), 1==Panic Enabled.
  </description_user>
</config_element>

<config_element name="Panic On CIS link Connection timeout" psid="">
  <label>Panic On CIS link Connection timeout</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit2: Enable Panic on CIS connection.  0==Panic disabled (default), 1==Panic Enabled.
  </description_user>
</config_element>

<config_element name="Panic On LE LMP Response" psid="">
  <label>Panic On LE LMP Response</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit9: Enable Panic on LE LMP Response.  0==Panic disabled (default), 1==Panic Enabled.
  </description_user>
</config_element>

<config_element name="Panic On LE link Connection timeout" psid="">
  <label>Panic On LE link Connection timeout</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit1: Enable Panic on LE connection.  0==Panic disabled (default), 1==Panic Enabled.
  </description_user>
</config_element>

<config_element name="Panic On Mirror link Connection timeout" psid="">
  <label>Panic On Mirror link Connection timeout</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit4: Enable Panic on Mirror connection.  0==Panic disabled (default), 1==Panic Enabled.
  </description_user>
</config_element>

<config_element name="Panic On Non Mirror Link Connection timeout" psid="">
  <label>Panic On Non Mirror Link Connection timeout</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit7: Enable Panic on Non Buddy Link connection.  0==Panic disabled (default), 1==Panic Enabled.
  </description_user>
</config_element>

<config_element name="Panic On PA Connection timeout" psid="">
  <label>Panic On PA Connection timeout</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit5: Enable Panic on PA connection.  0==Panic disabled (default), 1==Panic Enabled.
  </description_user>
</config_element>

<config_element name="Park Mode" psid="">
  <label>Park Mode</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit0: Park Mode
  </description_user>
</config_element>

<config_element name="Pause Encryption" psid="">
  <label>Pause Encryption</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit 2: Encryption Pause Resume Feature Supported
  </description_user>
</config_element>

<config_element name="Payload Header Len" psid="">
  <label>Payload Header Len</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
Use this parameter to select the duration of the beginning portion of the payload to place more weight 0x0: EIGHT_US (8us) 0x1: US (16us) 0x2: TWENTYFOUR_US (24us) 0x3: THIRTYTWO_US (32us)
  </description_user>
</config_element>

<config_element name="Payload Header Weight" psid="">
  <label>Payload Header Weight</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
  <description_user>
Use this parameter to set the weight that is applied during the payload_header_length
  </description_user>
</config_element>

<config_element name="Peer eSCO Accept Option" psid="">
  <label>Peer eSCO Accept Option</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
When set will accept non hard clashing peer eSCO parameters rather than downgrade eSCO by selecting a new combination. Only applicable if &quot;Hard Clash Detection&quot; bit is set to 1.
  </description_user>
</config_element>

<config_element name="Periodic Advertising" psid="">
  <label>Periodic Advertising</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Advertising Extension Support for Periodic advertising
  </description_user>
</config_element>

<config_element name="Pgm Cntr Capture Enable" psid="">
  <label>Pgm Cntr Capture Enable</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Program Counter Capture on NMI
  </description_user>
</config_element>

<config_element name="Phy Err Ctrl" psid="">
  <label>Phy Err Ctrl</label>
  <type>acl_rx_phyerror_control_phy_err_ctrl_t</type>
</config_element>

<config_element name="Phy Err Ctrl Auto Abort" psid="">
  <label>Phy Err Ctrl Auto Abort</label>
  <type>phy_err_ctrl_auto_abort_t</type>
</config_element>

<config_element name="Phy Error Det Enable" psid="">
  <label>Phy Error Det Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
PHY Error Detector Enable 0: DISABLE (Disable PHY Error Detector) 1: ENABLE (Enable PHY Error Detector)
  </description_user>
</config_element>

<config_element name="Ping" psid="">
  <label>Ping</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Ping" psid="">
  <label>Ping</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Ping
  </description_user>
</config_element>

<config_element name="Power Class 1" psid="">
  <label>Power Class 1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Support for LE Power Class 1 feature.
  </description_user>
</config_element>

<config_element name="Power Control" psid="">
  <label>Power Control</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit2: Power Control
  </description_user>
</config_element>

<config_element name="Pref BIG Packing" psid="">
  <label>Pref BIG Packing</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Prepferred BIG packing, 0 for sequential, 1 for interleaved.
  </description_user>
</config_element>

<config_element name="Pref CIG Packing" psid="">
  <label>Pref CIG Packing</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Prepferred CIG packing, 0 for sequential, 1 for interleaved.
  </description_user>
</config_element>

<config_element name="Prefill Nontransparent ToAir Data" psid="">
  <label>Prefill Nontransparent ToAir Data</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
For non-transparent ToAir data, enables prefilling of the encoding buffer with a default pattern that will get transmitted OTA if the ToAir ISR does not complete its encoding in time.  This relaxes the deadline for encoding in the ToAir ISR:  the SLC will configure the LC HW with the address and length of this stuff pattern buffer, then the ToAir ISR can continue to run to complete its encoding of real data which will overwrite this default stuff pattern in the same buffer.  If the encoding doesn't complete before the LC HW starts transmitting OTA, then this stuff pattern will get transmitted instead.  Note that this runs the risk of transmitting different data in retransmission slots. Default=0.
  </description_user>
</config_element>

<config_element name="Protection Gates Option" psid="">
  <label>Protection Gates Option</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
00=reg on, 01=osc on, 10=rst off, 11=clks active.
  </description_user>
</config_element>

<config_element name="Pwr Req Select Option" psid="">
  <label>Pwr Req Select Option</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
00=reg on, 01=osc on, 10=rst off, 11=clks active.
  </description_user>
</config_element>

<config_element name="Q2" psid="">
  <label>Q2</label>
  <type>int8</type>
  <range_min>-100</range_min>
  <range_max>100</range_max>
  <description_user>
QHS-2 Sensitivity
  </description_user>
</config_element>

<config_element name="Q2Q-QCM HCI support" psid="">
  <label>Q2Q-QCM HCI support</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Q2Q-QCM HCI support
  </description_user>
</config_element>

<config_element name="Q2Q-QLE HCI support" psid="">
  <label>Q2Q-QLE HCI support</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Q2Q-QLE HCI support
  </description_user>
</config_element>

<config_element name="Q3" psid="">
  <label>Q3</label>
  <type>int8</type>
  <range_min>-100</range_min>
  <range_max>100</range_max>
  <description_user>
QHS-3 Sensitivity
  </description_user>
</config_element>

<config_element name="Q4" psid="">
  <label>Q4</label>
  <type>int8</type>
  <range_min>-100</range_min>
  <range_max>100</range_max>
  <description_user>
QHS-4 Sensitivity
  </description_user>
</config_element>

<config_element name="Q5" psid="">
  <label>Q5</label>
  <type>int8</type>
  <range_min>-100</range_min>
  <range_max>100</range_max>
  <description_user>
QHS-5 Sensitivity
  </description_user>
</config_element>

<config_element name="Q6" psid="">
  <label>Q6</label>
  <type>int8</type>
  <range_min>-100</range_min>
  <range_max>100</range_max>
  <description_user>
QHS-6 Sensitivity
  </description_user>
</config_element>

<config_element name="QHS" psid="">
  <label>QHS</label>
  <type>qhs_t</type>
</config_element>

<config_element name="QHS Bug Fixes Batch 1" psid="">
  <label>QHS Bug Fixes Batch 1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Device supports fixes to day counter initialization, crc and whitener seeding for QHS.
  </description_user>
</config_element>

<config_element name="QHS Bug Fixes Batch 2" psid="">
  <label>QHS Bug Fixes Batch 2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Device Supports QHS bug fixes batch 2
  </description_user>
</config_element>

<config_element name="QHS-P2" psid="">
  <label>QHS-P2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
BR/EDR Packet Emulation Mode including QHS-P2 packet support
  </description_user>
</config_element>

<config_element name="QHS-P3" psid="">
  <label>QHS-P3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
QHS-P3 packet support
  </description_user>
</config_element>

<config_element name="QHS-P4" psid="">
  <label>QHS-P4</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
QHS-P4 packet support
  </description_user>
</config_element>

<config_element name="QHS-P5" psid="">
  <label>QHS-P5</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
QHS-P5 packet support
  </description_user>
</config_element>

<config_element name="QHS-P6" psid="">
  <label>QHS-P6</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
QHS-P6 packet support
  </description_user>
</config_element>

<config_element name="QLL Enable" psid="">
  <label>QLL Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
This bit is used to enable/disable QLL feature.
  </description_user>
</config_element>

<config_element name="QLL_ALT_PHY_RATE" psid="">
  <label>QLL_ALT_PHY_RATE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs alternate PHY information for QLL ISO
  </description_user>
</config_element>

<config_element name="QLL_CIS_EVT_CNT" psid="">
  <label>QLL_CIS_EVT_CNT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Event counter at the time QLL_ALT_PHY_RATE is logged.
  </description_user>
</config_element>

<config_element name="QLMP As Extended Opcodes" psid="">
  <label>QLMP As Extended Opcodes</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
QLMP is exchanged as non-encapsulated LMP packets
  </description_user>
</config_element>

<config_element name="QOS PBF" psid="">
  <label>QOS PBF</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit6:QOS Packet Boundary Flag
  </description_user>
</config_element>

<config_element name="RAM Mask Interrupt" psid="">
  <label>RAM Mask Interrupt</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit15: Disable the RAM Mask Interrupt
  </description_user>
</config_element>

<config_element name="RAM Mask RGN0 Interrupt" psid="">
  <label>RAM Mask RGN0 Interrupt</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Disable the RAM Mask RGN0 Interrupt
  </description_user>
</config_element>

<config_element name="RAM Mask RGN1 Interrupt" psid="">
  <label>RAM Mask RGN1 Interrupt</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Disable the RAM Mask RGN1 Interrupt
  </description_user>
</config_element>

<config_element name="RAM Sleep Sel" psid="">
  <label>RAM Sleep Sel</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0=Sleep Control, 1= Always On
  </description_user>
</config_element>

<config_element name="RSSI" psid="">
  <label>RSSI</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit1: RSSI
  </description_user>
</config_element>

<config_element name="RSSI with inquiry results" psid="">
  <label>RSSI with inquiry results</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit6: RSSI with inquiry results
  </description_user>
</config_element>

<config_element name="RSSI_NOISE_ENABLE_BIT" psid="">
  <label>RSSI_NOISE_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="RTSC" psid="">
  <label>RTSC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Real Time Soft Combining support as receiver.
  </description_user>
</config_element>

<config_element name="RTSC Config Flags" psid="">
  <label>RTSC Config Flags</label>
  <type>config_rtsc_config_flags_t</type>
</config_element>

<config_element name="RTSC operational mode switch threshold" psid="">
  <label>RTSC operational mode switch threshold</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Number of receive opportunities less than or equal to which Qbm mode is used and above which RTSC mode is used. Setting this NVM tag to zero will ensure RTSC mode is used always and setting it to 255 will ensure Qbm mode is used always.
  </description_user>
</config_element>

<config_element name="RX" psid="">
  <label>RX</label>
  <type>uint8</type>
  <array_length_min>18</array_length_min>
  <array_length_max>18</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="RX Control" psid="">
  <label>RX Control</label>
  <type>rx_control_t</type>
</config_element>

<config_element name="RX OFF State" psid="">
  <label>RX OFF State</label>
  <type>rx_off_state_t</type>
</config_element>

<config_element name="RX OFF Time" psid="">
  <label>RX OFF Time</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="RX ON State" psid="">
  <label>RX ON State</label>
  <type>rx_on_state_t</type>
</config_element>

<config_element name="RX ON Time" psid="">
  <label>RX ON Time</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="RX_BIAS_OFF_DONE_DELAY" psid="">
  <label>RX_BIAS_OFF_DONE_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_1M_NO_AOX_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_1M_NO_AOX_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_1M_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_1M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_2M_NO_AOX_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_2M_NO_AOX_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_2M_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_2M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_3M_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_3M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_4M_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_4M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_6M_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_6M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_8M_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_8M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_LEHS_2M_NO_AOX_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_LEHS_2M_NO_AOX_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_LEHS_3M_NO_AOX_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_LEHS_3M_NO_AOX_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_LEHS_4M_NO_AOX_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_LEHS_4M_NO_AOX_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_LEHS_5M_NO_AOX_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_LEHS_5M_NO_AOX_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_EOF_TSTAMP_LEHS_6M_NO_AOX_OFFSET" psid="">
  <label>RX_EOF_TSTAMP_LEHS_6M_NO_AOX_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_IFS_WAIT" psid="">
  <label>RX_IFS_WAIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1048575</range_max>
</config_element>

<config_element name="RX_INFO" psid="">
  <label>RX_INFO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Unused?
  </description_user>
</config_element>

<config_element name="RX_LNA_ATTN" psid="">
  <label>RX_LNA_ATTN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="RX_LNA_EN_HG" psid="">
  <label>RX_LNA_EN_HG</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="RX_LNA_SZ" psid="">
  <label>RX_LNA_SZ</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="RX_MDM_IF_LOSIDE_EN_0" psid="">
  <label>RX_MDM_IF_LOSIDE_EN_0</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_IF_LOSIDE_EN_1" psid="">
  <label>RX_MDM_IF_LOSIDE_EN_1</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_IF_LOSIDE_EN_2" psid="">
  <label>RX_MDM_IF_LOSIDE_EN_2</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="RX_MDM_SPUR_CHAN_IDX_15_8" psid="">
  <label>RX_MDM_SPUR_CHAN_IDX_15_8</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_SPUR_CHAN_IDX_23_16" psid="">
  <label>RX_MDM_SPUR_CHAN_IDX_23_16</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_SPUR_CHAN_IDX_31_24" psid="">
  <label>RX_MDM_SPUR_CHAN_IDX_31_24</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_SPUR_CHAN_IDX_39_32" psid="">
  <label>RX_MDM_SPUR_CHAN_IDX_39_32</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_SPUR_CHAN_IDX_47_40" psid="">
  <label>RX_MDM_SPUR_CHAN_IDX_47_40</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_SPUR_CHAN_IDX_55_48" psid="">
  <label>RX_MDM_SPUR_CHAN_IDX_55_48</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_SPUR_CHAN_IDX_63_56" psid="">
  <label>RX_MDM_SPUR_CHAN_IDX_63_56</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_SPUR_CHAN_IDX_71_64" psid="">
  <label>RX_MDM_SPUR_CHAN_IDX_71_64</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_SPUR_CHAN_IDX_78_72" psid="">
  <label>RX_MDM_SPUR_CHAN_IDX_78_72</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_MDM_SPUR_CHAN_IDX_7_0" psid="">
  <label>RX_MDM_SPUR_CHAN_IDX_7_0</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="RX_RF_TURN_OFF_DONE_DELAY" psid="">
  <label>RX_RF_TURN_OFF_DONE_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="RX_RF_TURN_ON_DONE_DELAY" psid="">
  <label>RX_RF_TURN_ON_DONE_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="RX_SOF_TSTAMP_1M_OFFSET" psid="">
  <label>RX_SOF_TSTAMP_1M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_SOF_TSTAMP_2M_OFFSET" psid="">
  <label>RX_SOF_TSTAMP_2M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_SOF_TSTAMP_LEHS_OFFSET" psid="">
  <label>RX_SOF_TSTAMP_LEHS_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_SOF_TSTAMP_OFFSET" psid="">
  <label>RX_SOF_TSTAMP_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="RX_SYNTH_OFF_DONE_DELAY" psid="">
  <label>RX_SYNTH_OFF_DONE_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="RX_VERBOSE" psid="">
  <label>RX_VERBOSE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the packet header for each BR/EDR packet received.
  </description_user>
</config_element>

<config_element name="Real Time Soft Combining" psid="">
  <label>Real Time Soft Combining</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Real Time Soft Combining
  </description_user>
</config_element>

<config_element name="Rec Included" psid="">
  <label>Rec Included</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
If 1, override Modem register setting with the data included in this record.
  </description_user>
</config_element>

<config_element name="Rec Included" psid="">
  <label>Rec Included</label>
  <type>acl_rx_phyerror_control_rec_included_t</type>
</config_element>

<config_element name="Recv CTE" psid="">
  <label>Recv CTE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Receiving Constant Tone Extensions
  </description_user>
</config_element>

<config_element name="Relay Link" psid="">
  <label>Relay Link</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Link Quality Metrics for Relay Link. This bit is meaningful only in TWM scenario.
  </description_user>
</config_element>

<config_element name="Reserve" psid="">
  <label>Reserve</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="Reserved" psid="">
  <label>Reserved</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit 0 : Reserved
  </description_user>
</config_element>

<config_element name="Reserved" psid="">
  <label>Reserved</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit2: Reserved
  </description_user>
</config_element>

<config_element name="Reserved" psid="">
  <label>Reserved</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved bit. Was QLL LE Power Control feature support.
  </description_user>
</config_element>

<config_element name="Reserved" psid="">
  <label>Reserved</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="Reserved" psid="">
  <label>Reserved</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1023</range_max>
</config_element>

<config_element name="Reserved" psid="">
  <label>Reserved</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
Padding bytes for alignment
  </description_user>
</config_element>

<config_element name="Reserved" psid="">
  <label>Reserved</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
Padding byte
  </description_user>
</config_element>

<config_element name="Reserved0" psid="">
  <label>Reserved0</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit2 : Reserved
  </description_user>
</config_element>

<config_element name="Reserved0" psid="">
  <label>Reserved0</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="Reserved1" psid="">
  <label>Reserved1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit7: Reserved
  </description_user>
</config_element>

<config_element name="Reserved1" psid="">
  <label>Reserved1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Reserved1" psid="">
  <label>Reserved1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
Padding bytes for alignment
  </description_user>
</config_element>

<config_element name="Reserved1" psid="">
  <label>Reserved1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="Reserved1" psid="">
  <label>Reserved1</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="Reserved2" psid="">
  <label>Reserved2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Reserved2" psid="">
  <label>Reserved2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
Padding bytes for alignment
  </description_user>
</config_element>

<config_element name="Reserved3" psid="">
  <label>Reserved3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
Padding bytes for alignment
  </description_user>
</config_element>

<config_element name="Reserved6" psid="">
  <label>Reserved6</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Reserved7" psid="">
  <label>Reserved7</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Reserved_0" psid="">
  <label>Reserved_0</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved for future use
  </description_user>
</config_element>

<config_element name="Reserved_1" psid="">
  <label>Reserved_1</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="Reserved_2" psid="">
  <label>Reserved_2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved for future use
  </description_user>
</config_element>

<config_element name="Reserved_3" psid="">
  <label>Reserved_3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved for future use
  </description_user>
</config_element>

<config_element name="Reserved_4" psid="">
  <label>Reserved_4</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved for future use
  </description_user>
</config_element>

<config_element name="Reserved_5" psid="">
  <label>Reserved_5</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved for future use
  </description_user>
</config_element>

<config_element name="Reserved_6" psid="">
  <label>Reserved_6</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved for future use
  </description_user>
</config_element>

<config_element name="Reserved_7" psid="">
  <label>Reserved_7</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Reserved for future use
  </description_user>
</config_element>

<config_element name="Reserved_Bit2" psid="">
  <label>Reserved_Bit2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit is not used
  </description_user>
</config_element>

<config_element name="Reserved_Bit4" psid="">
  <label>Reserved_Bit4</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit is not used
  </description_user>
</config_element>

<config_element name="Reserved_Bit5" psid="">
  <label>Reserved_Bit5</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit is not used
  </description_user>
</config_element>

<config_element name="Reserved_Bit6" psid="">
  <label>Reserved_Bit6</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit is not used
  </description_user>
</config_element>

<config_element name="Reserved_Bit_0" psid="">
  <label>Reserved_Bit_0</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit3: This bit has been deprecated for BT65_A1 and beyond. Please use relevant field in &quot;Logger Params&quot;
  </description_user>
</config_element>

<config_element name="Reseved_Bit1" psid="">
  <label>Reseved_Bit1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit is not used
  </description_user>
</config_element>

<config_element name="RetxThreshold" psid="">
  <label>RetxThreshold</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
This value is defined so as to obtain a eSCO retransmission threshold. (300/tsco) is equivalent to the logic of 30% retransmission slots for 1sec period, i.e. (((1000/tsco)*30)/100)
  </description_user>
</config_element>

<config_element name="Route Enh Log to Hydra Log" psid="">
  <label>Route Enh Log to Hydra Log</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Routes enhanced logging to hydra logging.0-Off;1-On
  </description_user>
</config_element>

<config_element name="RxActive" psid="">
  <label>RxActive</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
RxActive is RX window is open while not receiving any packets (in mw).
  </description_user>
</config_element>

<config_element name="SAME_CIS_MAX_MIN_OFFSET" psid="">
  <label>SAME_CIS_MAX_MIN_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
if set 1, the cis max and min offset in the cis request will be the same
  </description_user>
</config_element>

<config_element name="SCHED_CLOCK" psid="">
  <label>SCHED_CLOCK</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs all 4 bytes of the interger portion of the piconet clock
  </description_user>
</config_element>

<config_element name="SCHED_CLOCK_SHORT" psid="">
  <label>SCHED_CLOCK_SHORT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs only the lower two bytes of the interger portion of the piconet clock
  </description_user>
</config_element>

<config_element name="SCO" psid="">
  <label>SCO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Number of header FEC errors allowed before NACKing a SCO packet
  </description_user>
</config_element>

<config_element name="SCO Audio route" psid="">
  <label>SCO Audio route</label>
  <type>sco_audio_route_t</type>
</config_element>

<config_element name="SCO Link" psid="">
  <label>SCO Link</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit3: SCO Link
  </description_user>
</config_element>

<config_element name="SCO_Misses" psid="">
  <label>SCO_Misses</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="SCO_Misses" psid="">
  <label>SCO_Misses</label>
  <type>sco_misses_t</type>
</config_element>

<config_element name="SC_RX_SCHED_START_CAL_OFFSET" psid="">
  <label>SC_RX_SCHED_START_CAL_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="SC_SYS_T_WARM_UP" psid="">
  <label>SC_SYS_T_WARM_UP</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="SC_TX_SCHED_START_CAL_OFFSET" psid="">
  <label>SC_TX_SCHED_START_CAL_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="SET_TRANSMIT_POWER_ENABLE_BIT" psid="">
  <label>SET_TRANSMIT_POWER_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="SET_VENDOR_SPEC_EVENT_MASK_ENABLE_BIT" psid="">
  <label>SET_VENDOR_SPEC_EVENT_MASK_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="SIN Beta Combined" psid="">
  <label>SIN Beta Combined</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="SIN Beta High" psid="">
  <label>SIN Beta High</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="SIN Beta Low" psid="">
  <label>SIN Beta Low</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="SLC Dynamic Logging Enable" psid="">
  <label>SLC Dynamic Logging Enable</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0: When HOST is in sleep don't send the logs immediately. Wait until HOST is awake. 1: Send out the Logs as when they are queued to transmit to HOST.
  </description_user>
</config_element>

<config_element name="SLC_LOG_ID_QHS_RX" psid="">
  <label>SLC_LOG_ID_QHS_RX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the header for each RX QHS packet
  </description_user>
</config_element>

<config_element name="SLC_LOG_ID_QHS_TX" psid="">
  <label>SLC_LOG_ID_QHS_TX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the header for each TX QHS packet
  </description_user>
</config_element>

<config_element name="SLC_MASK_0" psid="">
  <label>SLC_MASK_0</label>
  <type>enh_logging_slc_mask_slc_mask_0_t</type>
</config_element>

<config_element name="SLC_MASK_1" psid="">
  <label>SLC_MASK_1</label>
  <type>enh_logging_slc_mask_slc_mask_1_t</type>
</config_element>

<config_element name="SLC_MASK_10" psid="">
  <label>SLC_MASK_10</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SLC_MASK_11" psid="">
  <label>SLC_MASK_11</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SLC_MASK_12" psid="">
  <label>SLC_MASK_12</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SLC_MASK_13" psid="">
  <label>SLC_MASK_13</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SLC_MASK_14" psid="">
  <label>SLC_MASK_14</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SLC_MASK_15" psid="">
  <label>SLC_MASK_15</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SLC_MASK_2" psid="">
  <label>SLC_MASK_2</label>
  <type>enh_logging_slc_mask_slc_mask_2_t</type>
</config_element>

<config_element name="SLC_MASK_3" psid="">
  <label>SLC_MASK_3</label>
  <type>enh_logging_slc_mask_slc_mask_3_t</type>
</config_element>

<config_element name="SLC_MASK_4" psid="">
  <label>SLC_MASK_4</label>
  <type>enh_logging_slc_mask_slc_mask_4_t</type>
</config_element>

<config_element name="SLC_MASK_5" psid="">
  <label>SLC_MASK_5</label>
  <type>enh_logging_slc_mask_slc_mask_5_t</type>
</config_element>

<config_element name="SLC_MASK_6" psid="">
  <label>SLC_MASK_6</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SLC_MASK_7" psid="">
  <label>SLC_MASK_7</label>
  <type>enh_logging_slc_mask_slc_mask_7_t</type>
</config_element>

<config_element name="SLC_MASK_8" psid="">
  <label>SLC_MASK_8</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SLC_MASK_9" psid="">
  <label>SLC_MASK_9</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SPLIT_A2DP_FEEDBACK_HCI" psid="">
  <label>SPLIT_A2DP_FEEDBACK_HCI</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Flag is used to config A2DP link quality feedback mode.
  </description_user>
</config_element>

<config_element name="SPLIT_A2DP_SBC_SUBFRAME_MODE" psid="">
  <label>SPLIT_A2DP_SBC_SUBFRAME_MODE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
SBC encoded data is arrived per frame or not.
  </description_user>
</config_element>

<config_element name="SUPPORT_SIMULTANEOUS_LE_HOST" psid="">
  <label>SUPPORT_SIMULTANEOUS_LE_HOST</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0: Disable Simultaneous LE Host Support; 1: Enable Simultaneous LE Host Support
  </description_user>
</config_element>

<config_element name="Sample rate" psid="">
  <label>Sample rate</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Sample rate divided by 25
  </description_user>
</config_element>

<config_element name="Sample size" psid="">
  <label>Sample size</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="Scan Request Power Level Index" psid="">
  <label>Scan Request Power Level Index</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>9</range_max>
  <description_user>
Scan Request Tx Power Level Index (Default=0x7, 7d). Host can control range by limiting Tx Output Power. Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
  </description_user>
</config_element>

<config_element name="Scanner Backoff Disabled" psid="">
  <label>Scanner Backoff Disabled</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Debug variable to allow disabling of LE scanner back-off algorithm
  </description_user>
</config_element>

<config_element name="Section" psid="">
  <label>Section</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Secure Connections Controller" psid="">
  <label>Secure Connections Controller</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Secure Q-Root Key" psid="">
  <label>Secure Q-Root Key</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable/disable bit for Secure Q-Root Key
  </description_user>
</config_element>

<config_element name="Secure Q-Root Key" psid="">
  <label>Secure Q-Root Key</label>
  <type>secure_q_root_key_t</type>
</config_element>

<config_element name="Send_Chan_Report_Req" psid="">
  <label>Send_Chan_Report_Req</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Send LL_CHANNEL_REPORTING_IND to enable Channel Classification
  </description_user>
</config_element>

<config_element name="Send_Feature_Req" psid="">
  <label>Send_Feature_Req</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Send Feature Request during connection setup.
  </description_user>
</config_element>

<config_element name="Send_Length_Req" psid="">
  <label>Send_Length_Req</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Initiate length negotiation during connection setup.
  </description_user>
</config_element>

<config_element name="Send_Phy_Req" psid="">
  <label>Send_Phy_Req</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Initiate phy negotiation during connection setup.
  </description_user>
</config_element>

<config_element name="Separate ACL and eSCO Nonces" psid="">
  <label>Separate ACL and eSCO Nonces</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
QHS Classic Mode Separate ACL and eSCO Nonces
  </description_user>
</config_element>

<config_element name="Simple Pairing" psid="">
  <label>Simple Pairing</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit3:Simple Pairing
  </description_user>
</config_element>

<config_element name="Simultaneous LE and BREDR" psid="">
  <label>Simultaneous LE and BREDR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit1: Simultaneous LE and BR/EDR Capable (Controller)
  </description_user>
</config_element>

<config_element name="Slave_Init_Exch" psid="">
  <label>Slave_Init_Exch</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Slave-initiated Features Exchange
  </description_user>
</config_element>

<config_element name="Slot Availability Mask" psid="">
  <label>Slot Availability Mask</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Slot Offset" psid="">
  <label>Slot Offset</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit3: Slot Offset
  </description_user>
</config_element>

<config_element name="Sniff Mode" psid="">
  <label>Sniff Mode</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit7: Sniff Mode
  </description_user>
</config_element>

<config_element name="Sniff Subrating" psid="">
  <label>Sniff Subrating</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit1: Sniff Subrating capable
  </description_user>
</config_element>

<config_element name="Split A2DP - 44p1Khz Sample Freq" psid="">
  <label>Split A2DP - 44p1Khz Sample Freq</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP - 48Khz Sample Freq" psid="">
  <label>Split A2DP - 48Khz Sample Freq</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP - Scramble Data Required" psid="">
  <label>Split A2DP - Scramble Data Required</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Single VS Command Support" psid="">
  <label>Split A2DP Single VS Command Support</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Sink - AAC" psid="">
  <label>Split A2DP Sink - AAC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Sink - APTX" psid="">
  <label>Split A2DP Sink - APTX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Sink - APTX ADAPTIVE" psid="">
  <label>Split A2DP Sink - APTX ADAPTIVE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Sink - APTX HD" psid="">
  <label>Split A2DP Sink - APTX HD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Sink - APTX TWS PLUS" psid="">
  <label>Split A2DP Sink - APTX TWS PLUS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Sink - LDAC" psid="">
  <label>Split A2DP Sink - LDAC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Sink - MP3" psid="">
  <label>Split A2DP Sink - MP3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Sink - SBC" psid="">
  <label>Split A2DP Sink - SBC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Source - AAC" psid="">
  <label>Split A2DP Source - AAC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Source - APTX" psid="">
  <label>Split A2DP Source - APTX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Source - APTX ADAPTIVE" psid="">
  <label>Split A2DP Source - APTX ADAPTIVE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Source - APTX HD" psid="">
  <label>Split A2DP Source - APTX HD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Source - APTX TWS PLUS" psid="">
  <label>Split A2DP Source - APTX TWS PLUS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Source - LDAC" psid="">
  <label>Split A2DP Source - LDAC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Source - LHDC" psid="">
  <label>Split A2DP Source - LHDC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Split A2DP Source - LHDC
  </description_user>
</config_element>

<config_element name="Split A2DP Source - MP3" psid="">
  <label>Split A2DP Source - MP3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Source - SBC" psid="">
  <label>Split A2DP Source - SBC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split A2DP Source - SBC Encoding" psid="">
  <label>Split A2DP Source - SBC Encoding</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Split ACL" psid="">
  <label>Split ACL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Split ACL support.
  </description_user>
</config_element>

<config_element name="Split Connected Isochronous Group" psid="">
  <label>Split Connected Isochronous Group</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Device supports Split Connected Isochronous Group
  </description_user>
</config_element>

<config_element name="Stable RX Modulation Index" psid="">
  <label>Stable RX Modulation Index</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Controller has a Stable RX Modulation Index
  </description_user>
</config_element>

<config_element name="Stable TX Modulation Index" psid="">
  <label>Stable TX Modulation Index</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Controller has a Stable TX Modulation Index
  </description_user>
</config_element>

<config_element name="State at LLM Task Enable" psid="">
  <label>State at LLM Task Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable Logging of State information (seen @ the LLM Task)
  </description_user>
</config_element>

<config_element name="Support for QLMP_ACL_shadow_req2" psid="">
  <label>Support for QLMP_ACL_shadow_req2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Device Supports 2nd version of QLMP ACL shadow req
  </description_user>
</config_element>

<config_element name="Supported Key" psid="">
  <label>Supported Key</label>
  <type>qll_link_key_supported_key_t</type>
</config_element>

<config_element name="Switch" psid="">
  <label>Switch</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit5: Switch
  </description_user>
</config_element>

<config_element name="Switch down 2-DH3" psid="">
  <label>Switch down 2-DH3</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Switch down 2-DH5" psid="">
  <label>Switch down 2-DH5</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Switch down 3-DH1" psid="">
  <label>Switch down 3-DH1</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Switch down 3-DH3" psid="">
  <label>Switch down 3-DH3</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Switch down 3-DH5" psid="">
  <label>Switch down 3-DH5</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Switch up 2-DH1 high" psid="">
  <label>Switch up 2-DH1 high</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Switch up 2-DH1 low" psid="">
  <label>Switch up 2-DH1 low</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Switch up 2-DH3" psid="">
  <label>Switch up 2-DH3</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Switch up 2-DH5" psid="">
  <label>Switch up 2-DH5</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Switch up 3-DH1" psid="">
  <label>Switch up 3-DH1</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Switch up 3-DH3" psid="">
  <label>Switch up 3-DH3</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="Synchronization Scan" psid="">
  <label>Synchronization Scan</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Synchronization Train" psid="">
  <label>Synchronization Train</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="TRANSMIT_POWER_CHANGED_EVENT_ENABLE_BIT" psid="">
  <label>TRANSMIT_POWER_CHANGED_EVENT_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="TWS eSCO" psid="">
  <label>TWS eSCO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
TWS eSCO support.
  </description_user>
</config_element>

<config_element name="TX" psid="">
  <label>TX</label>
  <type>uint8</type>
  <array_length_min>18</array_length_min>
  <array_length_max>18</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="TX Control" psid="">
  <label>TX Control</label>
  <type>tx_control_t</type>
</config_element>

<config_element name="TX OFF STATE" psid="">
  <label>TX OFF STATE</label>
  <type>tx_off_state_t</type>
</config_element>

<config_element name="TX OFF TIME" psid="">
  <label>TX OFF TIME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="TX ON STATE" psid="">
  <label>TX ON STATE</label>
  <type>tx_on_state_t</type>
</config_element>

<config_element name="TX ON TIME" psid="">
  <label>TX ON TIME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="TXRX Control Rx" psid="">
  <label>TXRX Control Rx</label>
  <type>txrx_control_rx_t</type>
</config_element>

<config_element name="TXRX Control Tx" psid="">
  <label>TXRX Control Tx</label>
  <type>txrx_control_tx_t</type>
</config_element>

<config_element name="TXRX RX OFF STATE" psid="">
  <label>TXRX RX OFF STATE</label>
  <type>txrx_rx_off_state_t</type>
</config_element>

<config_element name="TXRX RX OFF TIME" psid="">
  <label>TXRX RX OFF TIME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="TXRX RX ON STATE" psid="">
  <label>TXRX RX ON STATE</label>
  <type>txrx_rx_on_state_t</type>
</config_element>

<config_element name="TXRX RX ON TIME" psid="">
  <label>TXRX RX ON TIME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="TXRX TX OFF STATE" psid="">
  <label>TXRX TX OFF STATE</label>
  <type>txrx_tx_off_state_t</type>
</config_element>

<config_element name="TXRX TX OFF TIME" psid="">
  <label>TXRX TX OFF TIME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="TXRX TX ON STATE" psid="">
  <label>TXRX TX ON STATE</label>
  <type>txrx_tx_on_state_t</type>
</config_element>

<config_element name="TXRX TX ON TIME" psid="">
  <label>TXRX TX ON TIME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="TX_BIAS_OFF_DONE_DELAY" psid="">
  <label>TX_BIAS_OFF_DONE_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_1M_NO_AOX_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_1M_NO_AOX_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_1M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_1M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_2M_NO_AOX_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_2M_NO_AOX_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_2M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_2M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_3M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_3M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_4M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_4M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_6M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_6M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_8M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_8M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_LEHS_NO_AOX_2M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_LEHS_NO_AOX_2M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_LEHS_NO_AOX_3M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_LEHS_NO_AOX_3M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_LEHS_NO_AOX_4M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_LEHS_NO_AOX_4M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_LEHS_NO_AOX_5M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_LEHS_NO_AOX_5M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_EOF_TSTAMP_LEHS_NO_AOX_6M_OFFSET" psid="">
  <label>TX_EOF_TSTAMP_LEHS_NO_AOX_6M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_IFS_WAIT" psid="">
  <label>TX_IFS_WAIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1048575</range_max>
</config_element>

<config_element name="TX_INFO" psid="">
  <label>TX_INFO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Unused?
  </description_user>
</config_element>

<config_element name="TX_RF_TURN_OFF_DONE_DELAY" psid="">
  <label>TX_RF_TURN_OFF_DONE_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="TX_RF_TURN_ON_DONE_DELAY" psid="">
  <label>TX_RF_TURN_ON_DONE_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="TX_SOF_TSTAMP_1M_OFFSET" psid="">
  <label>TX_SOF_TSTAMP_1M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_SOF_TSTAMP_2M_OFFSET" psid="">
  <label>TX_SOF_TSTAMP_2M_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_SOF_TSTAMP_LEHS_OFFSET" psid="">
  <label>TX_SOF_TSTAMP_LEHS_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_SOF_TSTAMP_OFFSET" psid="">
  <label>TX_SOF_TSTAMP_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>2047</range_max>
</config_element>

<config_element name="TX_SYNTH_OFF_DONE_DELAY" psid="">
  <label>TX_SYNTH_OFF_DONE_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="TX_VERBOSE" psid="">
  <label>TX_VERBOSE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Logs the header for each BR/EDR packet transmitted.
  </description_user>
</config_element>

<config_element name="T_18_ESCO_SUPPORT" psid="">
  <label>T_18_ESCO_SUPPORT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enables support for T=18 eSCO
  </description_user>
</config_element>

<config_element name="T_LDO_BIAS_OFF" psid="">
  <label>T_LDO_BIAS_OFF</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="T_LDO_BIAS_ON" psid="">
  <label>T_LDO_BIAS_ON</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="T_RX_FULL_RF_OFF" psid="">
  <label>T_RX_FULL_RF_OFF</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="T_RX_FULL_RF_ON" psid="">
  <label>T_RX_FULL_RF_ON</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="T_RX_PRTL_RF_OFF" psid="">
  <label>T_RX_PRTL_RF_OFF</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="T_RX_PRTL_RF_ON" psid="">
  <label>T_RX_PRTL_RF_ON</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="T_RX_SYNTH_TUNE" psid="">
  <label>T_RX_SYNTH_TUNE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="T_START_DIG_RAMP_UP" psid="">
  <label>T_START_DIG_RAMP_UP</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="T_SYNTH_OFF" psid="">
  <label>T_SYNTH_OFF</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="T_TX_GRP_DLY" psid="">
  <label>T_TX_GRP_DLY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="T_TX_OFF_DLY" psid="">
  <label>T_TX_OFF_DLY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Value in us
  </description_user>
</config_element>

<config_element name="T_TX_RF_OFF" psid="">
  <label>T_TX_RF_OFF</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="T_TX_RF_ON" psid="">
  <label>T_TX_RF_ON</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="T_TX_SYNTH_TUNE" psid="">
  <label>T_TX_SYNTH_TUNE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="TargetA_Pri_W_Aux" psid="">
  <label>TargetA_Pri_W_Aux</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Send TargetA on non coded primary advertising channels when auxiliary packet is present. Valid for Non-Connectable and Non-Scannable only.
  </description_user>
</config_element>

<config_element name="Threshold" psid="">
  <label>Threshold</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>524287</range_max>
  <description_user>
Allows specification of the Acquisition Threshold threshold value.
  </description_user>
</config_element>

<config_element name="Timing Accuracy" psid="">
  <label>Timing Accuracy</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit4: Timing Accuracy
  </description_user>
</config_element>

<config_element name="ToAir" psid="">
  <label>ToAir</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Max ToAir SDU size in bytes for this stream.
  </description_user>
</config_element>

<config_element name="Topology Logging" psid="">
  <label>Topology Logging</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit9: Enable Topology Log messages. This option requires the ISR Logger.
  </description_user>
</config_element>

<config_element name="Train Nudging" psid="">
  <label>Train Nudging</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Transperant SCO Data" psid="">
  <label>Transperant SCO Data</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit3: Transperant SCO Data
  </description_user>
</config_element>

<config_element name="Tx Idle Timeout" psid="">
  <label>Tx Idle Timeout</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Software In-Band Sleep Tx Idle Timeout in ms. Sleep signal will be sent if Tx stays idle for the defined timeout period.
  </description_user>
</config_element>

<config_element name="Txp Assert Fatal" psid="">
  <label>Txp Assert Fatal</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
When set, a transport layer error will cause a fatal assert.  When not set, a transport layer error will cause a Hardware Error event to be sent to the host only.
  </description_user>
</config_element>

<config_element name="USB_WHCK_TEST" psid="">
  <label>USB_WHCK_TEST</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0: Disable the whck test workaround; 1: Enable the whck test workaround
  </description_user>
</config_element>

<config_element name="USE_STANDARD_HCI_STORE_PATCH_RADIO_SYSCFG_VERSION_ENABLE_BIT" psid="">
  <label>USE_STANDARD_HCI_STORE_PATCH_RADIO_SYSCFG_VERSION_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Undefined" psid="">
  <label>Undefined</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
  <description_user>
Bits11_15: Undefined
  </description_user>
</config_element>

<config_element name="Undefined Bits" psid="">
  <label>Undefined Bits</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Undefined bits
  </description_user>
</config_element>

<config_element name="Undefined Bits" psid="">
  <label>Undefined Bits</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Undefined Bits
  </description_user>
</config_element>

<config_element name="Undefined Bits" psid="">
  <label>Undefined Bits</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Undefined Bits
  </description_user>
</config_element>

<config_element name="Undefined Link Key" psid="">
  <label>Undefined Link Key</label>
  <type>undefined_link_key_t</type>
  <array_length_min>2</array_length_min>
  <array_length_max>2</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="Undefined Link Key Array" psid="">
  <label>Undefined Link Key Array</label>
  <type>undefined_link_key_array_t</type>
</config_element>

<config_element name="Use ANT Default" psid="">
  <label>Use ANT Default</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0 - Use dynamic calculation based on sync word  1 - Use default values
  </description_user>
</config_element>

<config_element name="Use BR EDR Default" psid="">
  <label>Use BR EDR Default</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0 - Use dynamic calculation based on sync word  1 - Use default values
  </description_user>
</config_element>

<config_element name="Use Host Packing" psid="">
  <label>Use Host Packing</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Set to allow host set packing, otherwise, controller uses preferred value by its own.
  </description_user>
</config_element>

<config_element name="Use LE 1Mbps Default" psid="">
  <label>Use LE 1Mbps Default</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0 - Use dynamic calculation based on sync word  1 - Use default values
  </description_user>
</config_element>

<config_element name="Use LE 2Mbps Default" psid="">
  <label>Use LE 2Mbps Default</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0 - Use dynamic calculation based on sync word  1 - Use default values
  </description_user>
</config_element>

<config_element name="Use MSBC For Transp Coding_Format" psid="">
  <label>Use MSBC For Transp Coding_Format</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
If set, translates an HCI Enhanced Setup (Accept) Synchronous Connection Command Transmit_Coding_Format/Receive_Coding_Format parameter of &quot;Transparent&quot; to &quot;mSBC&quot; instead.  If clear, the Transmit_Coding_Format/Receive_Coding_Format parameter will be treated as transparent which will disable controller-based encoding/decoding.
  </description_user>
</config_element>

<config_element name="Use MSBC For Transp Voice_Setting" psid="">
  <label>Use MSBC For Transp Voice_Setting</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
If set, translates a legacy HCI Voice_Setting parameter of &quot;Transparent Data&quot; to &quot;mSBC&quot; instead, to force controller-based encoding/decoding of mSBC (WBS) voice data.  If clear, a legacy Voice_Setting parameter of &quot;Transparent Data&quot; will be treated as transparent which will disable controller-based encoding/decoding.
  </description_user>
</config_element>

<config_element name="VSE Log Enable" psid="">
  <label>VSE Log Enable</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable mask for VS Event Logs
  </description_user>
</config_element>

<config_element name="Voice - Dual SCO" psid="">
  <label>Voice - Dual SCO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Voice - SWB APTX ADAPTIVE AG" psid="">
  <label>Voice - SWB APTX ADAPTIVE AG</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Voice - TWS Plus Dual eSCO AG" psid="">
  <label>Voice - TWS Plus Dual eSCO AG</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Voice_Audio_Log" psid="">
  <label>Voice_Audio_Log</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Flag to enable/disable IOP Voice/Audio buffers dump.
  </description_user>
</config_element>

<config_element name="WBS PLC Enable" psid="">
  <label>WBS PLC Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enables WBS Packet Loss Concealment. Default=1.
  </description_user>
</config_element>

<config_element name="WOBT_ENABLE_BIT" psid="">
  <label>WOBT_ENABLE_BIT</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="Wake Byte Required" psid="">
  <label>Wake Byte Required</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
When enabled (set to 1), an actual Wake byte must be received to respond with a Wake Ack byte.  When disabled, a Wake Ack byte will be sent on wakeup due to any Rx activity.
  </description_user>
</config_element>

<config_element name="Wake Retransmission Timeout" psid="">
  <label>Wake Retransmission Timeout</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Software In-Band Sleep Wake Retransmission Timeout in ms. Wake will be re-transmitted after this number of ms if a Wake Ack is not received.
  </description_user>
</config_element>

<config_element name="Wakeup Source" psid="">
  <label>Wakeup Source</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
Wakeup source selection for SIBS mode. Value of 0x0(default) is used when both HCI RxD &amp; RxD Fast are configured as wakeup source., Value of 0x1 is used when HCI RxD only is configured as wakeup source.
  </description_user>
</config_element>

<config_element name="WiPower Fastboot Enable" psid="">
  <label>WiPower Fastboot Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="absolute" psid="">
  <label>absolute</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
</config_element>

<config_element name="activeConnCount" psid="">
  <label>activeConnCount</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="am_cal_am" psid="">
  <label>am_cal_am</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="am_cal_path_delay" psid="">
  <label>am_cal_path_delay</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="am_cal_pm" psid="">
  <label>am_cal_pm</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable AMPM Cal
  </description_user>
</config_element>

<config_element name="am_cals_agc_index" psid="">
  <label>am_cals_agc_index</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>8</range_max>
  <description_user>
AGC gain table index to be used during AMAM and AMPM calibrations.
  </description_user>
</config_element>

<config_element name="am_coeff" psid="">
  <label>am_coeff</label>
  <type>am_coeff_t</type>
  <array_length_min>8</array_length_min>
  <array_length_max>8</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="am_coeff Array" psid="">
  <label>am_coeff Array</label>
  <type>am_coeff_array_t</type>
</config_element>

<config_element name="am_coeff_0" psid="">
  <label>am_coeff_0</label>
  <type>am_coeff_0_t</type>
</config_element>

<config_element name="am_coeff_1" psid="">
  <label>am_coeff_1</label>
  <type>am_coeff_1_t</type>
</config_element>

<config_element name="am_coeff_2" psid="">
  <label>am_coeff_2</label>
  <type>am_coeff_2_t</type>
</config_element>

<config_element name="am_coeff_3" psid="">
  <label>am_coeff_3</label>
  <type>am_coeff_3_t</type>
</config_element>

<config_element name="am_coeff_4" psid="">
  <label>am_coeff_4</label>
  <type>am_coeff_4_t</type>
</config_element>

<config_element name="am_coeff_5" psid="">
  <label>am_coeff_5</label>
  <type>am_coeff_5_t</type>
</config_element>

<config_element name="am_coeff_6" psid="">
  <label>am_coeff_6</label>
  <type>am_coeff_6_t</type>
</config_element>

<config_element name="am_coeff_7" psid="">
  <label>am_coeff_7</label>
  <type>am_coeff_7_t</type>
</config_element>

<config_element name="amam_cal_attn" psid="">
  <label>amam_cal_attn</label>
  <type>uint8</type>
  <array_length_min>16</array_length_min>
  <array_length_max>16</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="audio_glitch" psid="">
  <label>audio_glitch</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="avgDenialDuration" psid="">
  <label>avgDenialDuration</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="avgLatency" psid="">
  <label>avgLatency</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="base" psid="">
  <label>base</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
</config_element>

<config_element name="bias_trim_rx" psid="">
  <label>bias_trim_rx</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>32</range_max>
</config_element>

<config_element name="bias_trim_tx" psid="">
  <label>bias_trim_tx</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>32</range_max>
</config_element>

<config_element name="block cfg" psid="">
  <label>block cfg</label>
  <type>predefpool_ext_cfg_block_cfg_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>large_hci_cmd_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>large_hci_event_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>small_hci_cmd_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>small_hci_event_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>lmp_tx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>lmp_rx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>llm_lms_command_status_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>llm_filter_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>lms_dispatch_queue_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>medium_hci_event_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>dbg_logmsg_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>ant_cmd_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>ant_event_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>ant_data_from_host_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>ant_data_to_host_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>dbg_log_small_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>dbg_log_very_large_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>prhl_power_event_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>dbg_log_slcbuf_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>dbg_log_mcibuf_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>dbg_log_mwsbuf_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>rx_nonrt_offload_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>mci_msg_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>llm_sco_conn_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>llm_piconet_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>llm_conn_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>wip_dbg_log_event_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>estack_tmr_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>hci_data_tx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>hci_data_rx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>mci_sched_predict_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>senuart_data_tx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>senuart_data_rx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>hci_le_data_tx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>sco_create_msg_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>accmd_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>bccmd_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>llm_le_deferred_cmd_queue_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>le_long_ctrl_tx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>voice_audio_log_buffer_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>a2dp_sink_media_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>bcaud_ec_segment_pool_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>hci_sco_tx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>hci_sco_rx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>hci_iso_tx_block_config_t</type>
</config_element>

<config_element name="block config" psid="">
  <label>block config</label>
  <type>hci_iso_rx_block_config_t</type>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
maximum memory blocks allowed to be allocated from memory pool. Note the block size should be in increasing ordrer for optimal allocation
  </description_user>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The size of each Tx buffer, in bytes (Default: 1036 (0x408)). The ACL_U Isochronous Flush mechanism clock tags each Tx HCI data packet. This allocation needs to account 4 bytes for this clock tag.  Note:  The BB Tx mechanism builds baseband ACL packets by concatenating up to three HCI Tx packets. If the specified Tx packet size is to small ( &lt;117 bytes BR, &lt;345 bytes EDR) smaller BT packets will be used to Tx the data.
  </description_user>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The size of each Rx buffer, in bytes (Default: 372 (0x174)). Note: The baseband Rx mechanism expects a minimum Rx packet size of 64 bytes. If a smaller value is specified, ACL data traffic will stall due to insufficient buffering to handle an incomming  BT Rx ACL packet.
  </description_user>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>251</range_max>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Max size = max data size of 2DH5 packet + 3(EC Header)
  </description_user>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Size of each HCI SCO TX buffer. 240-byte payload + 4-byte SCO header.
  </description_user>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Size of each HCI SCO RX buffer. 240-byte payload + 4-byte SCO header.
  </description_user>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>16388</range_max>
  <description_user>
Size of each HCI ISO TX buffer. 5 bytes for the ISO header.
  </description_user>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>16388</range_max>
  <description_user>
Size of each HCI ISO RX buffer. 5 bytes for the ISO header.
  </description_user>
</config_element>

<config_element name="block size" psid="">
  <label>block size</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The default size of TXP buffer is configured as 1036 to match with ACL TX buffer default block size value sothat BTSS is able to copy the max size onChip buffered PDU as well
  </description_user>
</config_element>

<config_element name="cal_temp" psid="">
  <label>cal_temp</label>
  <type>int16</type>
  <range_min>-273</range_min>
  <range_max>2000</range_max>
  <description_user>
Temperature at which calibration is done
  </description_user>
</config_element>

<config_element name="cals_enabled" psid="">
  <label>cals_enabled</label>
  <type>common_params_cals_enabled_t</type>
</config_element>

<config_element name="cdac_cal_3g6" psid="">
  <label>cdac_cal_3g6</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="cdac_cal_4g8" psid="">
  <label>cdac_cal_4g8</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="cdac_lut_rx" psid="">
  <label>cdac_lut_rx</label>
  <type>cdac_lut_rx_t</type>
</config_element>

<config_element name="cdac_lut_tx" psid="">
  <label>cdac_lut_tx</label>
  <type>cdac_lut_tx_t</type>
</config_element>

<config_element name="cdac_rx_threshold" psid="">
  <label>cdac_rx_threshold</label>
  <type>uint16</type>
  <array_length_min>3</array_length_min>
  <array_length_max>3</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="cdac_tx_threshold" psid="">
  <label>cdac_tx_threshold</label>
  <type>uint16</type>
  <array_length_min>3</array_length_min>
  <array_length_max>3</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="channel" psid="">
  <label>channel</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>78</range_max>
</config_element>

<config_element name="channel_search" psid="">
  <label>channel_search</label>
  <type>channel_search_t</type>
</config_element>

<config_element name="coeff" psid="">
  <label>coeff</label>
  <type>int16</type>
  <array_length_min>8</array_length_min>
  <array_length_max>8</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="comp" psid="">
  <label>comp</label>
  <type>comp_t</type>
  <array_length_min>4</array_length_min>
  <array_length_max>4</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="comp Array" psid="">
  <label>comp Array</label>
  <type>comp_array_t</type>
</config_element>

<config_element name="comparator_delay" psid="">
  <label>comparator_delay</label>
  <type>int32</type>
  <range_min>-2147483648</range_min>
  <range_max>2147483647</range_max>
  <description_user>
0.65 Ref clock cycles
  </description_user>
</config_element>

<config_element name="compensation_type" psid="">
  <label>compensation_type</label>
  <type>compensation_type_t</type>
</config_element>

<config_element name="ctap_max" psid="">
  <label>ctap_max</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="ctap_min" psid="">
  <label>ctap_min</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="curve" psid="">
  <label>curve</label>
  <type>uint16</type>
  <array_length_min>17</array_length_min>
  <array_length_max>17</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="dBm" psid="">
  <label>dBm</label>
  <type>int8</type>
  <range_min>-20</range_min>
  <range_max>20</range_max>
  <description_user>
Tx power in dBm
  </description_user>
</config_element>

<config_element name="dac_code_start" psid="">
  <label>dac_code_start</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="dac_code_stop" psid="">
  <label>dac_code_stop</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="dac_end" psid="">
  <label>dac_end</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1024</range_max>
</config_element>

<config_element name="dac_start" psid="">
  <label>dac_start</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1024</range_max>
</config_element>

<config_element name="dac_step" psid="">
  <label>dac_step</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>256</range_max>
</config_element>

<config_element name="dac_sweep" psid="">
  <label>dac_sweep</label>
  <type>dac_sweep_t</type>
</config_element>

<config_element name="dc_time_average" psid="">
  <label>dc_time_average</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="delay_adjust" psid="">
  <label>delay_adjust</label>
  <type>int32</type>
  <range_min>-2147483648</range_min>
  <range_max>2147483647</range_max>
  <description_user>
3.5 in S32.12 format.
  </description_user>
</config_element>

<config_element name="dfe_propagation_delay" psid="">
  <label>dfe_propagation_delay</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="eSCO DTX" psid="">
  <label>eSCO DTX</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
eSCO DTX support
  </description_user>
</config_element>

<config_element name="eSCO Handover" psid="">
  <label>eSCO Handover</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
eSCO Handover
  </description_user>
</config_element>

<config_element name="eSCO Mirroring" psid="">
  <label>eSCO Mirroring</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
eSCO Mirroring
  </description_user>
</config_element>

<config_element name="eSCO RTSC Enable" psid="">
  <label>eSCO RTSC Enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enables RTSC (HW Based EDP) for eSCO packets.  Default=0.
  </description_user>
</config_element>

<config_element name="eSCO without MIC" psid="">
  <label>eSCO without MIC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
QHS Classic Mode eSCO packets without MIC
  </description_user>
</config_element>

<config_element name="flags" psid="">
  <label>flags</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Flags for AMAM
  </description_user>
</config_element>

<config_element name="flags" psid="">
  <label>flags</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="flowOnOffGap" psid="">
  <label>flowOnOffGap</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="frac_delay_coeff" psid="">
  <label>frac_delay_coeff</label>
  <type>int8</type>
  <array_length_min>8</array_length_min>
  <array_length_max>8</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="frac_dly_coeff_64msps" psid="">
  <label>frac_dly_coeff_64msps</label>
  <type>int8</type>
  <array_length_min>8</array_length_min>
  <array_length_max>8</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="freq_meas_time_ms" psid="">
  <label>freq_meas_time_ms</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="gain" psid="">
  <label>gain</label>
  <type>gain_t</type>
</config_element>

<config_element name="gain_index" psid="">
  <label>gain_index</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>16</range_max>
</config_element>

<config_element name="hg_cp_bias_current_tx1p5x" psid="">
  <label>hg_cp_bias_current_tx1p5x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="hg_cp_bias_current_tx2x" psid="">
  <label>hg_cp_bias_current_tx2x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="hg_cp_ibias_tx1p5x" psid="">
  <label>hg_cp_ibias_tx1p5x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="hg_cp_ibias_tx2x" psid="">
  <label>hg_cp_ibias_tx2x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="hg_lpf_bw_tx1p5x" psid="">
  <label>hg_lpf_bw_tx1p5x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>128</range_max>
</config_element>

<config_element name="hg_lpf_bw_tx2x" psid="">
  <label>hg_lpf_bw_tx2x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>128</range_max>
</config_element>

<config_element name="high_power" psid="">
  <label>high_power</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
  <description_user>
Remembrance factor/forget factor to be used at high RSSI levels while receiving GFSK modulated packets.
  </description_user>
</config_element>

<config_element name="high_power" psid="">
  <label>high_power</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
  <description_user>
Remembrance factor/forget factor to be used at high RSSI levels while receiving LE2M packets.
  </description_user>
</config_element>

<config_element name="high_power" psid="">
  <label>high_power</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
  <description_user>
Remembrance factor/forget factor to be used at high RSSI levels while receiving DQPSK modulated packets.
  </description_user>
</config_element>

<config_element name="high_power" psid="">
  <label>high_power</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
  <description_user>
Remembrance factor/forget factor to be used at high RSSI levels while receiving D8PSK modulated packets.
  </description_user>
</config_element>

<config_element name="i_cal" psid="">
  <label>i_cal</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="idle" psid="">
  <label>idle</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Power consumption when idle (in mw)
  </description_user>
</config_element>

<config_element name="if_freq" psid="">
  <label>if_freq</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="internal" psid="">
  <label>internal</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Internal power reduction factor, in 1/16ths of dBm
  </description_user>
</config_element>

<config_element name="internal" psid="">
  <label>internal</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
</config_element>

<config_element name="iq_imb_gain" psid="">
  <label>iq_imb_gain</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Value of the gain factor in the IQ imbalance correction to be used in the loopback configuration
  </description_user>
</config_element>

<config_element name="iq_imb_phase" psid="">
  <label>iq_imb_phase</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Value of the phase correction to be applied for IQ imbalance correction in the loop back configuration.
  </description_user>
</config_element>

<config_element name="k1" psid="">
  <label>k1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="k2" psid="">
  <label>k2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="large" psid="">
  <label>large</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Reserved count in Large Event Pool.
  </description_user>
</config_element>

<config_element name="ldo_cal_offset" psid="">
  <label>ldo_cal_offset</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="lg_cp_bias_current_tx1p5x" psid="">
  <label>lg_cp_bias_current_tx1p5x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="lg_cp_bias_current_tx2x" psid="">
  <label>lg_cp_bias_current_tx2x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="lg_cp_ibias_tx1p5x" psid="">
  <label>lg_cp_ibias_tx1p5x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="lg_cp_ibias_tx2x" psid="">
  <label>lg_cp_ibias_tx2x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="lg_lpf_bw_tx1p5x" psid="">
  <label>lg_lpf_bw_tx1p5x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>128</range_max>
</config_element>

<config_element name="lg_lpf_bw_tx2x" psid="">
  <label>lg_lpf_bw_tx2x</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>128</range_max>
</config_element>

<config_element name="lna_atten" psid="">
  <label>lna_atten</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="lna_attn" psid="">
  <label>lna_attn</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="lna_en_hg" psid="">
  <label>lna_en_hg</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="lna_gain" psid="">
  <label>lna_gain</label>
  <type>lna_gain_t</type>
</config_element>

<config_element name="lna_sz" psid="">
  <label>lna_sz</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="lo_ref_bias" psid="">
  <label>lo_ref_bias</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="loopback_lut_attn" psid="">
  <label>loopback_lut_attn</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
This when set, will enable the calibration of  the loopback attenuation setting during the amam and ampm calibraitons.
  </description_user>
</config_element>

<config_element name="low_power" psid="">
  <label>low_power</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
  <description_user>
Remembrance factor/forget factor to be used at low RSSI levels  while receiving GFSK modulated packets.
  </description_user>
</config_element>

<config_element name="low_power" psid="">
  <label>low_power</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
  <description_user>
Remembrance factor/forget factor to be used at low RSSI levels while receiving LE2M packets.
  </description_user>
</config_element>

<config_element name="low_power" psid="">
  <label>low_power</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
  <description_user>
Remembrance factor/forget factor to be used at low RSSI levels while receiving DQPSK modulated packets.
  </description_user>
</config_element>

<config_element name="low_power" psid="">
  <label>low_power</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
  <description_user>
Remembrance factor/forget factor to be used at low RSSI levels while receiving D8PSK modulated packets.
  </description_user>
</config_element>

<config_element name="lut1" psid="">
  <label>lut1</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1024</range_max>
</config_element>

<config_element name="lut2" psid="">
  <label>lut2</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1024</range_max>
</config_element>

<config_element name="lut3" psid="">
  <label>lut3</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1024</range_max>
</config_element>

<config_element name="lut_loopback_attn" psid="">
  <label>lut_loopback_attn</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="max count" psid="">
  <label>max count</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
minimum memory blocks allocated when memory pool is initialized.
  </description_user>
</config_element>

<config_element name="max count" psid="">
  <label>max count</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="max count" psid="">
  <label>max count</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="max count" psid="">
  <label>max count</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
EC(2,5) creates 5 segments in one go. max vlaue is set to 10 to hold max 2 set of EC coded segments
  </description_user>
</config_element>

<config_element name="max count" psid="">
  <label>max count</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Total number of HCI SCO Tx buffers.
  </description_user>
</config_element>

<config_element name="max count" psid="">
  <label>max count</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Total number of HCI SCO Rx buffers.
  </description_user>
</config_element>

<config_element name="max count" psid="">
  <label>max count</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Total number of HCI ISO Tx buffers.
  </description_user>
</config_element>

<config_element name="max count" psid="">
  <label>max count</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Total number of HCI ISO Rx buffers.
  </description_user>
</config_element>

<config_element name="max count" psid="">
  <label>max count</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
This pool is used in Slate specific feature. So, updating deafult value as zero
  </description_user>
</config_element>

<config_element name="max_channel" psid="">
  <label>max_channel</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>78</range_max>
  <description_user>
Channels above this will be discarded in frequency sweep
  </description_user>
</config_element>

<config_element name="mdac_cal_1p5" psid="">
  <label>mdac_cal_1p5</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="mdac_cal_curve" psid="">
  <label>mdac_cal_curve</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="mdac_cal_k1" psid="">
  <label>mdac_cal_k1</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="mdac_cal_k2" psid="">
  <label>mdac_cal_k2</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="mdac_cal_lut1" psid="">
  <label>mdac_cal_lut1</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="mdac_cal_lut2" psid="">
  <label>mdac_cal_lut2</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="mdac_cal_lut3" psid="">
  <label>mdac_cal_lut3</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="mdel" psid="">
  <label>mdel</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="mdel_64msps" psid="">
  <label>mdel_64msps</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="meas_dac" psid="">
  <label>meas_dac</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1024</range_max>
</config_element>

<config_element name="medium" psid="">
  <label>medium</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Reserved count in Medium Event Pool.
  </description_user>
</config_element>

<config_element name="mem config" psid="">
  <label>mem config</label>
  <type>generic_pool_config_mem_config_t</type>
</config_element>

<config_element name="min_channel" psid="">
  <label>min_channel</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>78</range_max>
  <description_user>
Channels below this will be discarded in frequency sweep
  </description_user>
</config_element>

<config_element name="n_samples_dc_avg" psid="">
  <label>n_samples_dc_avg</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Number of samples of DC notch output used for averaging.
  </description_user>
</config_element>

<config_element name="n_samples_fm" psid="">
  <label>n_samples_fm</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Number of IQ samples used for FM in bytes. So this value/4 will be the number of words filled with randon data.
  </description_user>
</config_element>

<config_element name="num_atten" psid="">
  <label>num_atten</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>10</range_max>
</config_element>

<config_element name="num_dc_average" psid="">
  <label>num_dc_average</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="num_extp_pnts" psid="">
  <label>num_extp_pnts</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>17</range_max>
  <description_user>
Number of points to be extrapolated.
  </description_user>
</config_element>

<config_element name="num_iterations" psid="">
  <label>num_iterations</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>79</range_max>
  <description_user>
Number of hop iterations before exiting channel sweep
  </description_user>
</config_element>

<config_element name="offset" psid="">
  <label>offset</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="offset_high" psid="">
  <label>offset_high</label>
  <type>int16</type>
  <range_min>-512</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="offset_low" psid="">
  <label>offset_low</label>
  <type>int16</type>
  <range_min>-512</range_min>
  <range_max>511</range_max>
</config_element>

<config_element name="p1del" psid="">
  <label>p1del</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="p2del" psid="">
  <label>p2del</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="phase_divisor" psid="">
  <label>phase_divisor</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="phase_incr" psid="">
  <label>phase_incr</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="phase_offset" psid="">
  <label>phase_offset</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Shift the computed phase correction to be centered around this value.
  </description_user>
</config_element>

<config_element name="phase_residue" psid="">
  <label>phase_residue</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>64</range_max>
</config_element>

<config_element name="power_cal" psid="">
  <label>power_cal</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="prealloc" psid="">
  <label>prealloc</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Preallocate memory
  </description_user>
</config_element>

<config_element name="prealloc" psid="">
  <label>prealloc</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="psrc_dlna" psid="">
  <label>psrc_dlna</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="psrc_mx_itrim" psid="">
  <label>psrc_mx_itrim</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="psu_mode" psid="">
  <label>psu_mode</label>
  <type>psu_mode_t</type>
</config_element>

<config_element name="pwr_thresh" psid="">
  <label>pwr_thresh</label>
  <type>int8</type>
  <range_min>-110</range_min>
  <range_max>0</range_max>
  <description_user>
Power threshold to change the remembrance factor from high power to low power while receiving GFSK modulated packets.
  </description_user>
</config_element>

<config_element name="pwr_thresh" psid="">
  <label>pwr_thresh</label>
  <type>int8</type>
  <range_min>-110</range_min>
  <range_max>0</range_max>
  <description_user>
Power threshold to change the remembrance factor from high power to low power while receiving LE2M packets.
  </description_user>
</config_element>

<config_element name="pwr_thresh" psid="">
  <label>pwr_thresh</label>
  <type>int8</type>
  <range_min>-110</range_min>
  <range_max>0</range_max>
  <description_user>
Power threshold to change the remembrance factor from high power to low power while receiving DQPSK modulated packets.
  </description_user>
</config_element>

<config_element name="pwr_thresh" psid="">
  <label>pwr_thresh</label>
  <type>int8</type>
  <range_min>-110</range_min>
  <range_max>0</range_max>
  <description_user>
Power threshold to change the remembrance factor from high power to low power while receiving D8PSK modulated packets.
  </description_user>
</config_element>

<config_element name="q_cal" psid="">
  <label>q_cal</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="qlmp feature enable" psid="">
  <label>qlmp feature enable</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
QLMP feature enable/disable
  </description_user>
</config_element>

<config_element name="ramp_alpha" psid="">
  <label>ramp_alpha</label>
  <type>ramp_alpha_t</type>
</config_element>

<config_element name="ramp_down_alpha" psid="">
  <label>ramp_down_alpha</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="ramp_up_alpha" psid="">
  <label>ramp_up_alpha</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="ref_trim" psid="">
  <label>ref_trim</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="resampler" psid="">
  <label>resampler</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
</config_element>

<config_element name="reserve" psid="">
  <label>reserve</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="reserved" psid="">
  <label>reserved</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
reserved
  </description_user>
</config_element>

<config_element name="reserved0" psid="">
  <label>reserved0</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved0" psid="">
  <label>reserved0</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved0" psid="">
  <label>reserved0</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved1" psid="">
  <label>reserved1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved1" psid="">
  <label>reserved1</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved1" psid="">
  <label>reserved1</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved10" psid="">
  <label>reserved10</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved11" psid="">
  <label>reserved11</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved12" psid="">
  <label>reserved12</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved13" psid="">
  <label>reserved13</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved14" psid="">
  <label>reserved14</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved15" psid="">
  <label>reserved15</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved16" psid="">
  <label>reserved16</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved17" psid="">
  <label>reserved17</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved18" psid="">
  <label>reserved18</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved19" psid="">
  <label>reserved19</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved2" psid="">
  <label>reserved2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved2" psid="">
  <label>reserved2</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved2" psid="">
  <label>reserved2</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved20" psid="">
  <label>reserved20</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved21" psid="">
  <label>reserved21</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved22" psid="">
  <label>reserved22</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved23" psid="">
  <label>reserved23</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved24" psid="">
  <label>reserved24</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved25" psid="">
  <label>reserved25</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved26" psid="">
  <label>reserved26</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved27" psid="">
  <label>reserved27</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved28" psid="">
  <label>reserved28</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved29" psid="">
  <label>reserved29</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved3" psid="">
  <label>reserved3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved3" psid="">
  <label>reserved3</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved3" psid="">
  <label>reserved3</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved4" psid="">
  <label>reserved4</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved4" psid="">
  <label>reserved4</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved4" psid="">
  <label>reserved4</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved5" psid="">
  <label>reserved5</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved5" psid="">
  <label>reserved5</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved5" psid="">
  <label>reserved5</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved6" psid="">
  <label>reserved6</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved6" psid="">
  <label>reserved6</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved6" psid="">
  <label>reserved6</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved7" psid="">
  <label>reserved7</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved7" psid="">
  <label>reserved7</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved7" psid="">
  <label>reserved7</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved8" psid="">
  <label>reserved8</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved8" psid="">
  <label>reserved8</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved9" psid="">
  <label>reserved9</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="reserved9" psid="">
  <label>reserved9</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="retaddr" psid="">
  <label>retaddr</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
record the return address of the caller.
  </description_user>
</config_element>

<config_element name="rx_cal_ip2" psid="">
  <label>rx_cal_ip2</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="rx_cal_rssi_det" psid="">
  <label>rx_cal_rssi_det</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="section" psid="">
  <label>section</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
00: lower heap only; 01: upper heap only;
  </description_user>
</config_element>

<config_element name="section" psid="">
  <label>section</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="servo_gain_max" psid="">
  <label>servo_gain_max</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="servo_gain_min" psid="">
  <label>servo_gain_min</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="sleep" psid="">
  <label>sleep</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Power consumption when sleep. Note the unit is uw since sleep mode consumes very minimal power.
  </description_user>
</config_element>

<config_element name="small" psid="">
  <label>small</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Reserved count in Small Event Pool.
  </description_user>
</config_element>

<config_element name="spacing" psid="">
  <label>spacing</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>78</range_max>
  <description_user>
Spacing between channel hop
  </description_user>
</config_element>

<config_element name="sweep_loopback_disabled" psid="">
  <label>sweep_loopback_disabled</label>
  <type>sweep_loopback_disabled_t</type>
</config_element>

<config_element name="table" psid="">
  <label>table</label>
  <type>uint16</type>
  <array_length_min>17</array_length_min>
  <array_length_max>17</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="table" psid="">
  <label>table</label>
  <type>table_t</type>
  <array_length_min>4</array_length_min>
  <array_length_max>4</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="table Array" psid="">
  <label>table Array</label>
  <type>table_array_t</type>
</config_element>

<config_element name="table_0" psid="">
  <label>table_0</label>
  <type>table_0_t</type>
</config_element>

<config_element name="table_1" psid="">
  <label>table_1</label>
  <type>table_1_t</type>
</config_element>

<config_element name="table_2" psid="">
  <label>table_2</label>
  <type>table_2_t</type>
</config_element>

<config_element name="table_3" psid="">
  <label>table_3</label>
  <type>table_3_t</type>
</config_element>

<config_element name="target_ampl_mV_rx2x" psid="">
  <label>target_ampl_mV_rx2x</label>
  <type>int16</type>
  <range_min>-32768</range_min>
  <range_max>32767</range_max>
</config_element>

<config_element name="target_ampl_mV_tx1p5x" psid="">
  <label>target_ampl_mV_tx1p5x</label>
  <type>int16</type>
  <range_min>-32768</range_min>
  <range_max>32767</range_max>
</config_element>

<config_element name="target_vco_ampl" psid="">
  <label>target_vco_ampl</label>
  <type>int16</type>
  <range_min>0</range_min>
  <range_max>500</range_max>
  <description_user>
VCO amplitude for RX mode operation during IP2 calibration.
  </description_user>
</config_element>

<config_element name="temp_delta" psid="">
  <label>temp_delta</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="temp_threshold" psid="">
  <label>temp_threshold</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
</config_element>

<config_element name="txAtten" psid="">
  <label>txAtten</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Attenuation for digital control
  </description_user>
</config_element>

<config_element name="txPwrExp" psid="">
  <label>txPwrExp</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Exp for digital control
  </description_user>
</config_element>

<config_element name="txPwrMag" psid="">
  <label>txPwrMag</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Mag for digital control
  </description_user>
</config_element>

<config_element name="tx_atten" psid="">
  <label>tx_atten</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="u-Law log" psid="">
  <label>u-Law log</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Bit6: u-Law log
  </description_user>
</config_element>

<config_element name="update_margin" psid="">
  <label>update_margin</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="vco_bias_trim" psid="">
  <label>vco_bias_trim</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="vco_cal_amp" psid="">
  <label>vco_cal_amp</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="wait_max_gain" psid="">
  <label>wait_max_gain</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="wait_min_gain" psid="">
  <label>wait_min_gain</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="xSCO_PERIOD" psid="">
  <label>xSCO_PERIOD</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable xSCO period logging.
  </description_user>
</config_element>

<config_element name="BD_ADDRESS" psid="1024">
  <label>BD_ADDRESS</label>
  <type>octet_string</type>
  <range_min>6</range_min>
  <range_max>6</range_max>
</config_element>

<config_element name="SUPPORTED_FEATURES_MASK" psid="1025">
  <label>SUPPORTED_FEATURES_MASK</label>
  <type>supported_features_mask_t</type>
  <description_user>
The format of the BT Supported Features is defined in the BT4.0 specification.  The BTT_SUPPORTED_FEATURES_MASK is applied to the BT Supported Features such that a &quot;0&quot; bit forces the software to never support the given feature, while a &quot;1&quot; bit allows the software to support a given feature if the software is built with the required support.

Supported Features Mask fields:

Byte0: bitfield:
3-slot packets: Bit0: 3-slot packets
5-Slot packets: Bit1: 5-Slot packets
Encryption: Bit2: Encryption
Slot Offset: Bit3: Slot Offset
Timing Accuracy: Bit4: Timing Accuracy
Switch: Bit5: Switch
Hold Mode: Bit6: Hold Mode
Sniff Mode: Bit7: Sniff Mode

Byte1: bitfield:
Park Mode: Bit0: Park Mode
RSSI: Bit1: RSSI
CQDDR: Bit2: Channel Quality Driven Data Rate
SCO Link: Bit3: SCO Link
HV2 Packets: Bit4: HV2 Packets
HV3 Packets: Bit5: HV3 Packets
u-Law log: Bit6: u-Law log
A-Law log: Bit7: A-Law log

Byte2: bitfield:
CVSD synchronous data: Bit0: CVSD synchronous data
Paging parameter negotiation: Bit1: Paging parameter negotiation
Power Control: Bit2: Power Control
Transperant SCO Data: Bit3: Transperant SCO Data
Flow Control Lag: Bit4_6: 3 Bits representing the Flow Control Lag
Broadcast Encryption: Bit7: Broadcast Encryption

Byte3: bitfield:
Reserved: Bit 0 : Reserved
EDR ACL DQPSK mode: Bit1: EDR ACL DQPSK mode
EDR ACL 8 DPSK mode: Bit2: EDR ACL 8 DPSK mode
Enhanced inquiry scan: Bit3: Enhanced inquiry scan
Interlaced inquiry scan: Bit4: Interlaced inquiry scan
Interlaced page scan: Bit5: Interlaced page scan
RSSI with inquiry results: Bit6: RSSI with inquiry results
ESCO EV3 packets: Bit7: Extended SCO link (EV3 packets)

Byte4: bitfield:
EV4 packets: Bit0: EV4 packets
EV5 packets: Bit1: EV5 packets
Reserved: Bit2: Reserved
AFH capable slave: Bit3: AFH capable slave
AFH classification slave: Bit4: AFH classification slave
BREDR Not Supported: Bit5: BR/EDR Not Supported
LE Supported: Bit6: LE Supported
EDR ACL 3 slot: Bit7: EDR ACL 3 slot

Byte5: bitfield:
EDR ACL 5 slot: Bit0: EDR ACL 5 slot
Sniff Subrating: Bit1: Sniff Subrating capable
Pause Encryption: Bit 2: Encryption Pause Resume Feature Supported
AFH capable master: Bit3: AFH capable master
AFH classification master: Bit4: AFH classification master
EDR eSCO DQPSM mode: Bit5: EDR eSCO DQPSM mode
EDR eSCO 8 DPSK mode: Bit6: EDR eSCO 8 DPSK mode
EDR eSCO 3 slot: Bit7: EDR eSCO 3 slot

Byte6: bitfield:
Extended Inquiry Response: Bit0: Extended Inquiry Response
Simultaneous LE and BREDR: Bit1: Simultaneous LE and BR/EDR Capable (Controller)
Reserved0: Bit2 : Reserved
Simple Pairing: Bit3:Simple Pairing
Encapsulated PDU: Bit4: Encapsulated PDU
Erroneous Data: Bit5: Erroneous Data
QOS PBF: Bit6:QOS Packet Boundary Flag
Reserved1: Bit7: Reserved

Byte7: bitfield:
Link Supervision Timeout Changed Event: Bit0: Link Supervision Timeout Changed Event
Inquiry Tx Power Level: 
Enhanced Power Control: Bit2: Enhanced Power Control feature
Bluetooth_Supported_Features_Mask_Reserved_3: Reserved
Bluetooth_Supported_Features_Mask_Reserved_4: Reserved
Bluetooth_Supported_Features_Mask_Reserved_5: Reserved
Bluetooth_Supported_Features_Mask_Reserved_6: Reserved
Extended features: Bit7: Extended features

  </description_user>
</config_element>

<config_element name="MANUFACTURER_NAME" psid="1026">
  <label>MANUFACTURER_NAME</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The manufacturer's name (Default: Qualcomm0x1D, 29d)
  </description_user>
</config_element>

<config_element name="EXTENDED_FEATURE_MASK_PAGE_2" psid="1027">
  <label>EXTENDED_FEATURE_MASK_PAGE_2</label>
  <type>extended_feature_mask_page_2_t</type>
  <description_user>
Mask for Bluetooth spec defined extended feature list-Page 2.

Extended Feature Mask Page 2 fields:

Byte 0: bitfield:
Connectionless slave Broadcast Master Role: 
Connectionless slave Broadcast Slave Role: 
Synchronization Train: 
Synchronization Scan: 
Inquiry Response Notification Event: 
Generalized interlaced scan: 
Coarse Clock Adjustment: 
Extended_feature_mask_Page_2_Reserved7: Reserved

Byte 1: bitfield:
Secure Connections Controller: 
Ping: 
Slot Availability Mask: 
Train Nudging: 
Extended_feature_mask_Page_2_Reserved4: Reserved
Extended_feature_mask_Page_2_Reserved5: Reserved
Extended_feature_mask_Page_2_Reserved6: Reserved
Extended_feature_mask_Page_2_Reserved7: Reserved

Byte 2: bitfield:
Extended_feature_mask_Page_2_Reserved0: Reserved
Extended_feature_mask_Page_2_Reserved1: Reserved
Extended_feature_mask_Page_2_Reserved2: Reserved
Extended_feature_mask_Page_2_Reserved3: Reserved
Extended_feature_mask_Page_2_Reserved4: Reserved
Extended_feature_mask_Page_2_Reserved5: Reserved
Extended_feature_mask_Page_2_Reserved6: Reserved
Extended_feature_mask_Page_2_Reserved7: Reserved

Byte 3: bitfield:
Extended_feature_mask_Page_2_Reserved0: Reserved
Extended_feature_mask_Page_2_Reserved1: Reserved
Extended_feature_mask_Page_2_Reserved2: Reserved
Extended_feature_mask_Page_2_Reserved3: Reserved
Extended_feature_mask_Page_2_Reserved4: Reserved
Extended_feature_mask_Page_2_Reserved5: Reserved
Extended_feature_mask_Page_2_Reserved6: Reserved
Extended_feature_mask_Page_2_Reserved7: Reserved

Byte 4: bitfield:
Extended_feature_mask_Page_2_Reserved0: Reserved
Extended_feature_mask_Page_2_Reserved1: Reserved
Extended_feature_mask_Page_2_Reserved2: Reserved
Extended_feature_mask_Page_2_Reserved3: Reserved
Extended_feature_mask_Page_2_Reserved4: Reserved
Extended_feature_mask_Page_2_Reserved5: Reserved
Extended_feature_mask_Page_2_Reserved6: Reserved
Extended_feature_mask_Page_2_Reserved7: Reserved

Byte 5: bitfield:
Extended_feature_mask_Page_2_Reserved0: Reserved
Extended_feature_mask_Page_2_Reserved1: Reserved
Extended_feature_mask_Page_2_Reserved2: Reserved
Extended_feature_mask_Page_2_Reserved3: Reserved
Extended_feature_mask_Page_2_Reserved4: Reserved
Extended_feature_mask_Page_2_Reserved5: Reserved
Extended_feature_mask_Page_2_Reserved6: Reserved
Extended_feature_mask_Page_2_Reserved7: Reserved

Byte 6: bitfield:
Extended_feature_mask_Page_2_Reserved0: Reserved
Extended_feature_mask_Page_2_Reserved1: Reserved
Extended_feature_mask_Page_2_Reserved2: Reserved
Extended_feature_mask_Page_2_Reserved3: Reserved
Extended_feature_mask_Page_2_Reserved4: Reserved
Extended_feature_mask_Page_2_Reserved5: Reserved
Extended_feature_mask_Page_2_Reserved6: Reserved
Extended_feature_mask_Page_2_Reserved7: Reserved

Byte 7: bitfield:
Extended_feature_mask_Page_2_Reserved0: Reserved
Extended_feature_mask_Page_2_Reserved1: Reserved
Extended_feature_mask_Page_2_Reserved2: Reserved
Extended_feature_mask_Page_2_Reserved3: Reserved
Extended_feature_mask_Page_2_Reserved4: Reserved
Extended_feature_mask_Page_2_Reserved5: Reserved
Extended_feature_mask_Page_2_Reserved6: Reserved
Extended_feature_mask_Page_2_Reserved7: Reserved

  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_SLAVE_ACK_NEEDED_SKIP_THRESHOLD" psid="1028">
  <label>SCHEDULER_CONTROL_SLAVE_ACK_NEEDED_SKIP_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
This parameter defines how many times the Slave ACK RX slot may be skipped to schedule dispatched job.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_MAX_SLOT_RETRANSMISSION_THRESHOLD" psid="1029">
  <label>SCHEDULER_CONTROL_MAX_SLOT_RETRANSMISSION_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
This parameter defines how many times the multi-slot packet is able to be aborted in max slot transition. This parameter is used for both LE and BEDR.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_SDB_HIGH_PRIORITY_ACL_CQDDRCSS_PER_THRESHOLD" psid="1030">
  <label>SCHEDULER_CONTROL_SDB_HIGH_PRIORITY_ACL_CQDDRCSS_PER_THRESHOLD</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="SCHEDULER_CONTROL_SCATTERNET_CLOCK_SKEW" psid="1031">
  <label>SCHEDULER_CONTROL_SCATTERNET_CLOCK_SKEW</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1249</range_max>
  <description_user>
Number of usec to offset the master clock from the clock-master slave piconet. An offset of zero will create piconet-like alignment of the master to the slave.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_NUM_OF_INSTANT_TO_TO" psid="1032">
  <label>SCHEDULER_CONTROL_NUM_OF_INSTANT_TO_TO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Sniff/LE, Threshold of number of Instant to timeout, to issue Critical
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_PAGESCAN_POLL_LOW_PRIORITY_FRAME" psid="1033">
  <label>SCHEDULER_CONTROL_PAGESCAN_POLL_LOW_PRIORITY_FRAME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>16</range_max>
  <description_user>
In Frames, Page Scan New Connection setup poll stage low priority frame threshold
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_PAGE_POLL_LOW_PRIORITY_FRAME" psid="1034">
  <label>SCHEDULER_CONTROL_PAGE_POLL_LOW_PRIORITY_FRAME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>16</range_max>
  <description_user>
In Frames, Page New Connection setup poll stage low priority frame threshold
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_ROLESWITCH_POLL_LOW_PRIORITY_HS" psid="1035">
  <label>SCHEDULER_CONTROL_ROLESWITCH_POLL_LOW_PRIORITY_HS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>64</range_max>
  <description_user>
In Half Slots, Role Switch poll stage low priority frame threshold
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_OOR_DETECTION_THRESHOLD" psid="1036">
  <label>SCHEDULER_CONTROL_OOR_DETECTION_THRESHOLD</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Out of range detection threshold for link. Values is in MS
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_MULTI_A2DP_OOR_DETECTION_THRESHOLD" psid="1037">
  <label>SCHEDULER_CONTROL_MULTI_A2DP_OOR_DETECTION_THRESHOLD</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Out of range detection threshold when multiple A2DP links active.  Value in milliseconds.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_NO_SYNCED_LONG_THRESHOLD" psid="1038">
  <label>SCHEDULER_CONTROL_NO_SYNCED_LONG_THRESHOLD</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_TIMESLICE_RANDOMIZE_MASK" psid="1040">
  <label>SCHEDULER_CONTROL_TS_TIMESLICE_RANDOMIZE_MASK</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time Slice Randomize Mask for random number generator
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_ACL_MASTER" psid="1041">
  <label>SCHEDULER_CONTROL_TS_ACL_MASTER</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time slice (In Frames) for Master ACL
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_ACL_SLAVE" psid="1042">
  <label>SCHEDULER_CONTROL_TS_ACL_SLAVE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time slice (In Frames) for Slave ACL
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_ACL_MASTER_INTERACTION" psid="1043">
  <label>SCHEDULER_CONTROL_TS_ACL_MASTER_INTERACTION</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time slice (In Frames) for Master ACL Interaction
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_ACL_SLAVE_INTERACTION" psid="1044">
  <label>SCHEDULER_CONTROL_TS_ACL_SLAVE_INTERACTION</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time slice (In Frames) for Slave ACL Interaction
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_A2DP_MASTER_DEFAULT" psid="1045">
  <label>SCHEDULER_CONTROL_TS_A2DP_MASTER_DEFAULT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
In Frames
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_A2DP_SLAVE_DEFAULT" psid="1046">
  <label>SCHEDULER_CONTROL_TS_A2DP_SLAVE_DEFAULT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
In Frames
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_BROADCAST" psid="1047">
  <label>SCHEDULER_CONTROL_TS_BROADCAST</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
In Frames
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_PAGE" psid="1048">
  <label>SCHEDULER_CONTROL_TS_PAGE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Slots
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_INQUIRY" psid="1049">
  <label>SCHEDULER_CONTROL_TS_INQUIRY</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Slots
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_LE_ADV" psid="1050">
  <label>SCHEDULER_CONTROL_TS_LE_ADV</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Slots
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_LE_SCAN" psid="1051">
  <label>SCHEDULER_CONTROL_TS_LE_SCAN</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Slots
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_LE_INIT" psid="1052">
  <label>SCHEDULER_CONTROL_TS_LE_INIT</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Slots
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_A2DP_MASTER_MEDIUM_TPT" psid="1053">
  <label>SCHEDULER_CONTROL_TS_A2DP_MASTER_MEDIUM_TPT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
In frames
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_A2DP_SLAVE_MEDIUM_TPT" psid="1054">
  <label>SCHEDULER_CONTROL_TS_A2DP_SLAVE_MEDIUM_TPT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
In frames
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_A2DP_MASTER_HIGH_TPT" psid="1055">
  <label>SCHEDULER_CONTROL_TS_A2DP_MASTER_HIGH_TPT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
In frames
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_A2DP_SLAVE_HIGH_TPT" psid="1056">
  <label>SCHEDULER_CONTROL_TS_A2DP_SLAVE_HIGH_TPT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
In frames
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_A2DP_MASTER_MAX_TPT" psid="1057">
  <label>SCHEDULER_CONTROL_TS_A2DP_MASTER_MAX_TPT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
In frames
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_A2DP_SLAVE_MAX_TPT" psid="1058">
  <label>SCHEDULER_CONTROL_TS_A2DP_SLAVE_MAX_TPT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_HID_ACTIVE" psid="1059">
  <label>SCHEDULER_CONTROL_TS_HID_ACTIVE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time slice to handle a corner case where HID client operates in active mode. This change is to give enough BW to coex
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_NO_SYNCED_LONG" psid="1060">
  <label>SCHEDULER_CONTROL_TS_NO_SYNCED_LONG</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Timeslice when No Sync for longer duration.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_PAGE_LOW" psid="1061">
  <label>SCHEDULER_CONTROL_TS_PAGE_LOW</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>4096</range_max>
  <description_user>
In Slots
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_TS_ACL_SLAVE_TIMESLICE_EXTN" psid="1062">
  <label>SCHEDULER_CONTROL_TS_ACL_SLAVE_TIMESLICE_EXTN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ACL Slave time slice extension (in Frames) after first sync with Master. Setting to zero disables the time slice extension feature.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_CXM_DENY" psid="1063">
  <label>SCHEDULER_CONTROL_CXM_DENY</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, wakeup time when CxM Deny got in the timeslice
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_SYNCED" psid="1064">
  <label>SCHEDULER_CONTROL_SYNCED</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, wakeup time when Synced in the timeslice
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_SYNCED_A2DP_SLAVE" psid="1065">
  <label>SCHEDULER_CONTROL_SYNCED_A2DP_SLAVE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, wakeup time for A2DP Slave
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_NO_SYNCED_LONG" psid="1066">
  <label>SCHEDULER_CONTROL_NO_SYNCED_LONG</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, wakeup time when not synced in the timeslice
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_BROADCAST" psid="1067">
  <label>SCHEDULER_CONTROL_BROADCAST</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, wakeup time for Broadcast
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_WAKEUP_RANDOMIZE_MASK" psid="1068">
  <label>SCHEDULER_CONTROL_WAKEUP_RANDOMIZE_MASK</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Wake up Randomize Mask for random number generator
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_RESERVED" psid="1069">
  <label>SCHEDULER_CONTROL_RESERVED</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
For Alignment
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_A2DP_MASTER_DEFAULT" psid="1070">
  <label>SCHEDULER_CONTROL_DL_A2DP_MASTER_DEFAULT</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for A2DP
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_A2DP_SLAVE_DEFAULT" psid="1071">
  <label>SCHEDULER_CONTROL_DL_A2DP_SLAVE_DEFAULT</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for A2DP
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_ACL_CRITICAL" psid="1072">
  <label>SCHEDULER_CONTROL_DL_ACL_CRITICAL</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for ACL_CRITICAL
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_ACL_INTERACTION" psid="1073">
  <label>SCHEDULER_CONTROL_DL_ACL_INTERACTION</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for ACL_INTERACTION
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_ACL_INTERACTION_SLAVE" psid="1074">
  <label>SCHEDULER_CONTROL_DL_ACL_INTERACTION_SLAVE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for ACL_INTERACTION_SLAVE
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_ACL" psid="1075">
  <label>SCHEDULER_CONTROL_DL_ACL</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for ACL
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_BROADCAST" psid="1076">
  <label>SCHEDULER_CONTROL_DL_BROADCAST</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for Broadcast
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_A2DP_MASTER_MEDIUM_TPT" psid="1077">
  <label>SCHEDULER_CONTROL_DL_A2DP_MASTER_MEDIUM_TPT</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for A2DP
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_A2DP_SLAVE_MEDIUM_TPT" psid="1078">
  <label>SCHEDULER_CONTROL_DL_A2DP_SLAVE_MEDIUM_TPT</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for A2DP
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_A2DP_MASTER_HIGH_TPT" psid="1079">
  <label>SCHEDULER_CONTROL_DL_A2DP_MASTER_HIGH_TPT</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for A2DP
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_A2DP_SLAVE_HIGH_TPT" psid="1080">
  <label>SCHEDULER_CONTROL_DL_A2DP_SLAVE_HIGH_TPT</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for A2DP
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_A2DP_MASTER_MAX_TPT" psid="1081">
  <label>SCHEDULER_CONTROL_DL_A2DP_MASTER_MAX_TPT</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for A2DP
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DL_A2DP_SLAVE_MAX_TPT" psid="1082">
  <label>SCHEDULER_CONTROL_DL_A2DP_SLAVE_MAX_TPT</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for A2DP
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_A2DP" psid="1083">
  <label>SCHEDULER_CONTROL_A2DP</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Critical threshold for A2DP, time delta after deadline
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_ACL_INTERACTION" psid="1084">
  <label>SCHEDULER_CONTROL_ACL_INTERACTION</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Critical threshold for ACL Interaction, time delta after deadline
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_ADAPTIVE_LL" psid="1085">
  <label>SCHEDULER_CONTROL_ADAPTIVE_LL</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Critical threshold for Aptx Adaptive LL, time delta after deadline
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_DEADLINE" psid="1086">
  <label>SCHEDULER_CONTROL_DEADLINE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SCHEDULER_CONTROL_WAKETIME" psid="1087">
  <label>SCHEDULER_CONTROL_WAKETIME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="SCHEDULER_CONTROL_ACL_TX_DELAY" psid="1088">
  <label>SCHEDULER_CONTROL_ACL_TX_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
This parameter defines the delay (in half-slots) of ACL data transmission. The delay is effective only when ACL data arrives from host while ACL queue is empty.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_LE_LONG_CTRL_TX_RETRY_THRESHOLD" psid="1089">
  <label>SCHEDULER_CONTROL_LE_LONG_CTRL_TX_RETRY_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>16</range_max>
  <description_user>
When controller is trying to send a LE ctrl PDU with larger payload length than tx window, it may need to force to send out this PDU to avoid always pending it in the queue. This parameter defines the max retry counts before controller can force to send out.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_MIN_ADV_INTERVAL_WITH_PAGING" psid="1090">
  <label>SCHEDULER_CONTROL_MIN_ADV_INTERVAL_WITH_PAGING</label>
  <type>uint16</type>
  <range_min>32</range_min>
  <range_max>16384</range_max>
  <description_user>
In presence of paging, Minimum advertising interval will be specified by this key. This will give higher page bandwidth and page success rate.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_LE_BANDWIDTH_TABLE" psid="1091">
  <label>SCHEDULER_CONTROL_LE_BANDWIDTH_TABLE</label>
  <type>octet_string</type>
  <range_min>5</range_min>
  <range_max>5</range_max>
</config_element>

<config_element name="ENCRYPTION_UNIT_KEY_CONFIGURATION_UNIT_KEY" psid="1092">
  <label>ENCRYPTION_UNIT_KEY_CONFIGURATION_UNIT_KEY</label>
  <type>octet_string</type>
  <range_min>16</range_min>
  <range_max>16</range_max>
</config_element>

<config_element name="ENCRYPTION_UNIT_KEY_CONFIGURATION_KEY_TYPE" psid="1093">
  <label>ENCRYPTION_UNIT_KEY_CONFIGURATION_KEY_TYPE</label>
  <type>key_type_t</type>
</config_element>

<config_element name="ENCRYPTION_UNIT_KEY_CONFIGURATION_ENCRYPTION_MINIMUM_SIZE" psid="1094">
  <label>ENCRYPTION_UNIT_KEY_CONFIGURATION_ENCRYPTION_MINIMUM_SIZE</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>16</range_max>
  <description_user>
The minimum length (in bytes) of the encryption key, KC (Default: 0x7, 7d)
  </description_user>
</config_element>

<config_element name="ENCRYPTION_UNIT_KEY_CONFIGURATION_ENCRYPTION_MAXIMUM_SIZE" psid="1095">
  <label>ENCRYPTION_UNIT_KEY_CONFIGURATION_ENCRYPTION_MAXIMUM_SIZE</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>16</range_max>
  <description_user>
The maximum length (in bytes) of the encryption key, KC (Default: 0x10, 16d)
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_MAPDECISIONINTERVAL" psid="1096">
  <label>AFH_PARAMS_MAPDECISIONINTERVAL</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Map Decision Interval, in units of slots. 3600slots(== 2.25 sec) by default
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_WLANHANGOVER" psid="1097">
  <label>AFH_PARAMS_WLANHANGOVER</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
WLAN Hangover Time to continue to avoid a detected WLAN band. Hangover seconds = wlanHangover * MapDecisionInterval / 1600(slots per second)
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_RSSIDISABLEMASK" psid="1098">
  <label>AFH_PARAMS_RSSIDISABLEMASK</label>
  <type>octet_string</type>
  <range_min>10</range_min>
  <range_max>10</range_max>
</config_element>

<config_element name="AFH_PARAMS_REQUIREDSAMPLES" psid="1099">
  <label>AFH_PARAMS_REQUIREDSAMPLES</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Required Samples, min num of samples needed for a valid chan assessment interval
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_WLANDETECTIONTHRESHOLD" psid="1100">
  <label>AFH_PARAMS_WLANDETECTIONTHRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
WLAN Detection Threshold, if sum of RSSI errors is less than this then band is unoccupied.  Default=10.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_NEXTCHANSKIPVALUE" psid="1101">
  <label>AFH_PARAMS_NEXTCHANSKIPVALUE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Next Chan Skip Value, provides for semi-random chan assessment hop sequence.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_MAXCHANNELMODVALUE" psid="1102">
  <label>AFH_PARAMS_MAXCHANNELMODVALUE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Max Chan Mod Value, limits the range of chan assessment hop sequence
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_PEAKDECAYVALUE" psid="1103">
  <label>AFH_PARAMS_PEAKDECAYVALUE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
dbm amount to decrement when the existing handover band is not detected each assessment period.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_WLAN_GUARD_CHS" psid="1104">
  <label>AFH_PARAMS_WLAN_GUARD_CHS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Number of guard channels to apply to the wlan-reported band
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_BETA" psid="1105">
  <label>AFH_PARAMS_BETA</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Beta, used in lossy integrator for detecting WLAN center chan for UBC chan assessment
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_NB" psid="1106">
  <label>AFH_PARAMS_NB</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>79</range_max>
  <description_user>
Number of Bands around center WLAN chan to block for UBC chan assessment
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_FLAGS" psid="1107">
  <label>AFH_PARAMS_FLAGS</label>
  <type>afh_params_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_PERINTERVAL" psid="1108">
  <label>AFH_PARAMS_PERINTERVAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Interval, in seconds, within which to gather PER statistics while in Cell Phone Mode Channel Assessment.  Default=5.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_PERTHRESHOLD" psid="1109">
  <label>AFH_PARAMS_PERTHRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>100</range_max>
  <description_user>
Value, in percent, that determines when the PER is high enough to trigger one RSSI-based Channel Assessment.  This is only used in Cell Phone Mode Channel Assessment.  In Q2.  Default=1=0.25%
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_ENABLERETRANSERROR" psid="1110">
  <label>AFH_PARAMS_ENABLERETRANSERROR</label>
  <type>enableretranserror_t</type>
</config_element>

<config_element name="AFH_PARAMS_CORRECTABLEHEADERBITSALLOWED" psid="1111">
  <label>AFH_PARAMS_CORRECTABLEHEADERBITSALLOWED</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Number of FEC corrections allowed before flagging a possible problematic channel.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_SCOPERTHRESHOLD" psid="1112">
  <label>AFH_PARAMS_SCOPERTHRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
PER Threshold for SCO connections (held in Q2)
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_SCOPERENABLED" psid="1113">
  <label>AFH_PARAMS_SCOPERENABLED</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="AFH_PARAMS_RETRANSPERTHRESHOLD" psid="1114">
  <label>AFH_PARAMS_RETRANSPERTHRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Percentage of packets that are NAK'd by peer that are required to trigger an RSSI channel assessment.  Value is in Q2.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_RSSITHRESH" psid="1115">
  <label>AFH_PARAMS_RSSITHRESH</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>0</range_max>
  <description_user>
Bad Channel RSSI Threshold
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_BCAPERSLOT" psid="1116">
  <label>AFH_PARAMS_BCAPERSLOT</label>
  <type>bcaperslot_t</type>
</config_element>

<config_element name="AFH_PARAMS_BCAWINDOW" psid="1117">
  <label>AFH_PARAMS_BCAWINDOW</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>32767</range_max>
  <description_user>
BCA Window.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_BCAINTERVAL" psid="1118">
  <label>AFH_PARAMS_BCAINTERVAL</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>32767</range_max>
  <description_user>
BCA interval, in units of slots.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_NUM_AFH_BANDS" psid="1119">
  <label>AFH_PARAMS_NUM_AFH_BANDS</label>
  <type>uint8</type>
  <range_min>2</range_min>
  <range_max>3</range_max>
  <description_user>
Number of WIFI bands to be detected for Channel Classification
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_SCANSTEP" psid="1120">
  <label>AFH_PARAMS_SCANSTEP</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>5</range_max>
  <description_user>
Scan Step for spike analysis
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_SPIKEDELTARSSI" psid="1121">
  <label>AFH_PARAMS_SPIKEDELTARSSI</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>20</range_max>
  <description_user>
Delta Rssi for spike analysis
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_BADCHCNTTHRESH" psid="1122">
  <label>AFH_PARAMS_BADCHCNTTHRESH</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>20</range_max>
  <description_user>
Bad Channel Count Threshold
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_WINDOWSIZE" psid="1123">
  <label>AFH_PARAMS_WINDOWSIZE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>78</range_max>
  <description_user>
AFH Channel Window Size
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_DYNAMICBCAINTERVALCHANGE" psid="1124">
  <label>AFH_PARAMS_DYNAMICBCAINTERVALCHANGE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Allow dynamic BCA interval change if 1.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_DYNAMICBCAPRIORITY" psid="1125">
  <label>AFH_PARAMS_DYNAMICBCAPRIORITY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
If 1, bump up BCA priority if it does not run for 2 * BCA interval slots
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_MIN_HANGOVER_CHS" psid="1126">
  <label>AFH_PARAMS_MIN_HANGOVER_CHS</label>
  <type>uint8</type>
  <range_min>10</range_min>
  <range_max>20</range_max>
  <description_user>
Minimum number of BTchannels in hangover record
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_MIN_BW_FOR_WIFI_ALIGNMENT" psid="1127">
  <label>AFH_PARAMS_MIN_BW_FOR_WIFI_ALIGNMENT</label>
  <type>uint8</type>
  <range_min>5</range_min>
  <range_max>16</range_max>
  <description_user>
If detected band's bandwidth is greater than the value, then only alignment with WiFi band centre (2412/2417.. MHz) will be performed.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_MIN_GOOD_CHAN_SEQ" psid="1128">
  <label>AFH_PARAMS_MIN_GOOD_CHAN_SEQ</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>59</range_max>
  <description_user>
Minimum continuous good channels, to consider the tail of band to be moved.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_CHANNEL_OCCUPANCY_TIME_MS" psid="1129">
  <label>AFH_PARAMS_CHANNEL_OCCUPANCY_TIME_MS</label>
  <type>uint8</type>
  <range_min>40</range_min>
  <range_max>100</range_max>
  <description_user>
As per ETSI standard, minimum value of hangover must be =  NumberOfGoodChannel * 5 * COT Time. Here COT is 40 mS. Increase in this value will increase the hangover time of band
  </description_user>
</config_element>

<config_element name="BLUETOOTH_HCI_VERSION" psid="1130">
  <label>BLUETOOTH_HCI_VERSION</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Bluetooth HCI Version - Bluetooth Core Specification 5.3
  </description_user>
</config_element>

<config_element name="BLUETOOTH_LMP_VERSION" psid="1131">
  <label>BLUETOOTH_LMP_VERSION</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Bluetooth LMP Version - Bluetooth Core Specification 5.3
  </description_user>
</config_element>

<config_element name="LE_SUPPORTED_FEATURES_MASK" psid="1132">
  <label>LE_SUPPORTED_FEATURES_MASK</label>
  <type>le_supported_features_mask_t</type>
  <description_user>
The format of the LE Supported Features is defined in the BT specification.  The LE_SUPPORTED_FEATURES_MASK is applied to the BT Supported Features such that a &quot;0&quot; bit forces the software to never support the given feature, while a &quot;1&quot; bit allows the software to support a given feature if the software is built with the required support.

LE Supported Features Mask fields:

Byte 0: bitfield:
Encryption: Encryption Supported
Conn_Param_Req: Connection Parameters Request Procedure
Ext_Rej_Ind: Extended Reject Indication
Slave_Init_Exch: Slave-initiated Features Exchange
Ping: LE Ping
Data Length Extension: LE Data Packet Length Extension
LL Privacy: LE Privacy for Scanner and Advertiser.
Extended Scanner Filter Policies: Extended Scanner Filter Policies

Byte 1: bitfield:
2 Mbps PHY: LE 2Ms/s Physical Data Rate
Stable TX Modulation Index: Controller has a Stable TX Modulation Index
Stable RX Modulation Index: Controller has a Stable RX Modulation Index
Coded PHY: LE Coded PHY (125Kbps/500Kbps) Support
Extended Advertising: LE Advertising Extension Support
Periodic Advertising: LE Advertising Extension Support for Periodic advertising
Channel Selection Algo 2: Support for LE channel selection algorithm 2
Power Class 1: Support for LE Power Class 1 feature.

Byte 2: bitfield:
Minimum Channels Procedure: Support for minimum number of used channels procedure.
Conn CTE Request: Connection CTE Request supported
Conn CTE Response: Connection CTE Response supported
Connless CTE Tx: Connectionless CTE Tx supported
Connless CTE Rx: Connectionless CTE Rx supported
AntSw CTE Tx: Antenna Switching During CTE Tx supported
AntSw CTE Rx: Antenna Switching During CTE Rx supported
Recv CTE: Receiving Constant Tone Extensions

Byte 3: bitfield:
LE PAST Sender: LE PAST packet Tx support
LE PAST Recipient: LE PAST packet Rx support.
LE SCA Update: Sleep Clock Accuracy Communication Support.
LE Remote Public Key Validation: LE Remote Public Key Validation Support.
LE CIS Master: Support LE ISO CIS Master role or not.
LE CIS Slave: Support LE ISO CIS Slave role or not.
LE BIS Master: Support LE ISO BIS Master role or not. aka. ISO Broadcast Tx.
LE BIS Slave: Support LE ISO BIS Slave role or not.  aka. ISO Broadcast Rx.

Byte 4: bitfield:
LE_Supported_Features_Reserved_0: This bit is reserved for LE_ISO_HOST_SUPPORT controlled by host. It can not overwrite the bit setting in controller.
LE Power Control Request: LE Power Control Request
LE Power Change Indication: LE Power Change Indication
LE Path Loss Monitoring: LE Path Loss Monitoring
LE Periodic ADI: LE Periodic ADI enable
LE Connection Subrating: LE Enhanced Connection Update feature
LE_Supported_Features_Reserved_6: Reserved
LE_Channel_Classification: LE Channel Classification Feature

Byte 5: bitfield:
LE_Supported_Features_Reserved_0: Reserved
LE_Supported_Features_Reserved_1: Reserved
LE_Supported_Features_Reserved_2: Reserved
LE_Supported_Features_Reserved_3: Reserved
LE_Supported_Features_Reserved_4: Reserved
LE_Supported_Features_Reserved_5: Reserved
LE_Supported_Features_Reserved_6: Reserved
LE_Supported_Features_Reserved_7: Reserved

Byte 6: bitfield:
LE_Supported_Features_Reserved_0: Reserved
LE_Supported_Features_Reserved_1: Reserved
LE_Supported_Features_Reserved_2: Reserved
LE_Supported_Features_Reserved_3: Reserved
LE_Supported_Features_Reserved_4: Reserved
LE_Supported_Features_Reserved_5: Reserved
LE_Supported_Features_Reserved_6: Reserved
LE_Supported_Features_Reserved_7: Reserved

Byte 7: bitfield:
LE_Supported_Features_Reserved_0: Reserved
LE_Supported_Features_Reserved_1: Reserved
LE_Supported_Features_Reserved_2: Reserved
LE_Supported_Features_Reserved_3: Reserved
LE_Supported_Features_Reserved_4: Reserved
LE_Supported_Features_Reserved_5: Reserved
LE_Supported_Features_Reserved_6: Reserved
LE_Supported_Features_Reserved_7: Reserved

  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_ESCO_CQDDR_EVAL_PERIOD" psid="1133">
  <label>BT_LOCAL_FEATURES_CONTROL_ESCO_CQDDR_EVAL_PERIOD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Evaluation Period (seconds) 0 - No Eval, 1 - N seconds
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LOCAL_FEATURE_ENABLE" psid="1134">
  <label>BT_LOCAL_FEATURES_CONTROL_LOCAL_FEATURE_ENABLE</label>
  <type>bt_local_features_control_local_feature_enable_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LOW_POWER_SCAN" psid="1135">
  <label>BT_LOCAL_FEATURES_CONTROL_LOW_POWER_SCAN</label>
  <type>low_power_scan_t</type>
  <description_user>
Low_Power_Scan fields:

LP_scanControl: 
LP_schedulePreSlotCount: The number of preslots to count prior to the follow on full power scan.
LP_extendFollowScan: Number of slots to extend the follow on scan.
Pad Byte: Pad to byte align following data
LP_sniffMin: Normal power scans will be run unless the sniff interval is greater than LP_sniffMin.  Units are in slots.
LP_scanIntervalMin: Normal power scans will be run unless the interval between page scans is greater than LP_scanIntervalMin.  Units are in slots.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_ACL_CQDDR_EVAL_PERIOD" psid="1136">
  <label>BT_LOCAL_FEATURES_CONTROL_ACL_CQDDR_EVAL_PERIOD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Evaluation Period (seconds) 0 - No Eval, 1 - N periods
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_FILLER" psid="1137">
  <label>BT_LOCAL_FEATURES_CONTROL_FILLER</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
Filler for byte alignment
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_FORWARD_RATE_ADAPTATION" psid="1138">
  <label>BT_LOCAL_FEATURES_CONTROL_FORWARD_RATE_ADAPTATION</label>
  <type>forward_rate_adaptation_t</type>
  <description_user>
Forward Rate Adaptation fields:

FRA_WEIGHTING: The weighting given to repeats of ARQN 0s or 1s.  Value stored in Q15.  Default is 1/8.
FRA_HIGH_THRESH: The threshold that must be crossed to move from prohibiting 3DH packets to allowing 3DH packets.  Number is held in Q15 format.  Default is 0.9.
FRA_LOW_THRESH: The threshold that must be crossed from allowing 3DH packets to prohibiting 3DH packets.  The number is held in Q15 format.  Default is 0.4.
FRA_MAX_RETRANS: The max number of repeated ARQNs that are allowed.
FRA_ENABLED: Tag indicates whether the FRA feature is enabled or not.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_ACL_RX_PHYERROR_CONTROL" psid="1139">
  <label>BT_LOCAL_FEATURES_CONTROL_ACL_RX_PHYERROR_CONTROL</label>
  <type>acl_rx_phyerror_control_t</type>
  <description_user>
ACL RX PhyError Control fields:

Phy Err Ctrl Auto Abort: 
Filler: Filler for byte alignment
Rec Included: bitfield:
Rec Included: If 1, override Modem register setting with the data included in this record.

Phy Err Ctrl: bitfield:
Phy Error Det Enable: PHY Error Detector Enable 0: DISABLE (Disable PHY Error Detector) 1: ENABLE (Enable PHY Error Detector)
Payload Header Len: Use this parameter to select the duration of the beginning portion of the payload to place more weight 0x0: EIGHT_US (8us) 0x1: US (16us) 0x2: TWENTYFOUR_US (24us) 0x3: THIRTYTWO_US (32us)
Payload Header Weight: Use this parameter to set the weight that is applied during the payload_header_length

GFSK Err Region: This threshold sets the region where the GFSK demodulators decision metric will be used to calculate the error metric for GFSK
DQPSK Err Region: This threshold sets the region where the DQPSK demodulators decision metric will be used to calculate the error metric for DQPSK
D8PSK Err Region: This threshold sets the region where the D8PSK demodulators decision metric will be used to calculate the error metric for D8PSK
GFSK Err: If the error metric for GFSK is greater than this threshold, the erroneous_bit_detected is asserted
DQPSK Err: If the error metric for DQPSK is greater than this threshold, the erroneous_bit_detected is asserted
D8PSK Err: If the error metric for D8PSK is greater than this threshold, the erroneous_bit_detected is asserted
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LOW_LATENCY_RECONNECT" psid="1140">
  <label>BT_LOCAL_FEATURES_CONTROL_LOW_LATENCY_RECONNECT</label>
  <type>bt_local_features_control_low_latency_reconnect_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_LOCAL_FEATURE_CONTROL" psid="1141">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_LOCAL_FEATURE_CONTROL</label>
  <type>bt_local_features_control_le_local_feature_control_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_SCAN_CONTROL" psid="1142">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_SCAN_CONTROL</label>
  <type>le_scan_control_t</type>
  <description_user>
LE Scan Control fields:

LE Scan Min Interval: LE Scan Minimun interval for bandwidth control
LE Scan Max Ratio: Maximum Ratio for LE Scan
Filler_3: For byte-alignment
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_SCA_THRESHOLD" psid="1143">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_SCA_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
  <description_user>
LE SCA Threshold for Conn_Req PDU, for IOP issue with some remote LE devices
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_APCF_MAX_FILTER_NUM" psid="1144">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_APCF_MAX_FILTER_NUM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
  <description_user>
to config the size of the APCF
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_BATCH_SCAN_STORAGE_SIZE" psid="1145">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_BATCH_SCAN_STORAGE_SIZE</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
  <description_user>
This is the total storage size for saving LE batch scan results. The unit is bytes.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_MULTI_ADV_NUM_LIMIT" psid="1146">
  <label>BT_LOCAL_FEATURES_CONTROL_MULTI_ADV_NUM_LIMIT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>32</range_max>
  <description_user>
multiple advertiser: the max connection links could be established at the same time is 3. No limit of non-connectable advertisers
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_SCAN_REQ_FILTER_ENABLE" psid="1147">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_SCAN_REQ_FILTER_ENABLE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
0: disable the filter 1: enable the filter (only send scan_req once)
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_ADVM_EXT" psid="1148">
  <label>BT_LOCAL_FEATURES_CONTROL_ADVM_EXT</label>
  <type>advm_ext_t</type>
  <description_user>
ADVM_EXT fields:

Max_Conditions: Max number of conditions for ADVM LE advertisement monitoring
Max_Mon_Adv: Max number of devices which can be active in ADVM LE advertisement monitoring
Max_RSSI_Handle: Max number of connection handles for ADVM rssi monitoring
Filler: Filler for byte alignment
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_POWER_CONSUMPTION_OF_PACKET_TYPES" psid="1149">
  <label>BT_LOCAL_FEATURES_CONTROL_POWER_CONSUMPTION_OF_PACKET_TYPES</label>
  <type>power_consumption_of_packet_types_t</type>
  <description_user>
Power consumption of packet types fields:

sleep: Power consumption when sleep. Note the unit is uw since sleep mode consumes very minimal power.
TX: 
RX: 
idle: Power consumption when idle (in mw)
RxActive: RxActive is RX window is open while not receiving any packets (in mw).
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_TOTAL_NUM_OF_ADVT_TRACKED" psid="1150">
  <label>BT_LOCAL_FEATURES_CONTROL_TOTAL_NUM_OF_ADVT_TRACKED</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
total number of tracking entries for OnLost/OnFound.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_RESOLVING_LIST_SIZE" psid="1151">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_RESOLVING_LIST_SIZE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of LE resolvable private address (RPA) list entries supported by the controller.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_RPA_CACHE_SIZE" psid="1152">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_RPA_CACHE_SIZE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The size of RPA entries for caching RPAs (resolved and not-resolved).
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_ESCO_RETRAN_BOOST_CREDIT" psid="1153">
  <label>BT_LOCAL_FEATURES_CONTROL_ESCO_RETRAN_BOOST_CREDIT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Credit of eSCO Retransmission window priority boost
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_RAM_SHUTDOWN_CONTROL" psid="1154">
  <label>BT_LOCAL_FEATURES_CONTROL_RAM_SHUTDOWN_CONTROL</label>
  <type>ram_shutdown_control_t</type>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_MAX_ADV_DATA_LENGTH" psid="1155">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_MAX_ADV_DATA_LENGTH</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The maximum length of data supported by the Controller for use as advertisement data or scan response data in an advertising event or as periodic advertisement data.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_EXT_ADV_CHAIN_T_MAFS" psid="1156">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_EXT_ADV_CHAIN_T_MAFS</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
LE Minimum Aux Frame Space for Chained payloads
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_PERIODIC_ADV_LIST_SIZE" psid="1157">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_PERIODIC_ADV_LIST_SIZE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>16</range_max>
  <description_user>
The number of LE Periodic Advertiser list entries supported by the controller
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_APCF_MAX_FILTER_ITEMS" psid="1158">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_APCF_MAX_FILTER_ITEMS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
  <description_user>
Max number of items for each item type table for APCF filters
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LLM_REPEAT_ATTEMPTS_MAX_ATTEMPTS" psid="1159">
  <label>BT_LOCAL_FEATURES_CONTROL_LLM_REPEAT_ATTEMPTS_MAX_ATTEMPTS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LLM_REPEAT_ATTEMPTS_WAIT_TIME_IN_SLOTS" psid="1161">
  <label>BT_LOCAL_FEATURES_CONTROL_LLM_REPEAT_ATTEMPTS_WAIT_TIME_IN_SLOTS</label>
  <type>uint32</type>
  <range_min>2</range_min>
  <range_max>65536</range_max>
  <description_user>
Repeat Attempts wait time.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_A2DP_SRC_SHUNT_DATA_CREDITS_BR" psid="1162">
  <label>BT_LOCAL_FEATURES_CONTROL_A2DP_SRC_SHUNT_DATA_CREDITS_BR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>30</range_max>
  <description_user>
Threshold value to give priority to host ACL packet over A2DP Source data after ~300 msec (considering case of optimum throughput every TX will buffer audio for 15msec).
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_A2DP_SRC_SHUNT_DATA_CREDITS_EDR" psid="1163">
  <label>BT_LOCAL_FEATURES_CONTROL_A2DP_SRC_SHUNT_DATA_CREDITS_EDR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>30</range_max>
  <description_user>
Threshold value to give priority to host ACL packet over A2DP Source data after ~300 msec (considering case of optimum throughput every TX will buffer audio for 20msec).
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_SCHEDULER_LOOKAHEAD_EN" psid="1164">
  <label>BT_LOCAL_FEATURES_CONTROL_SCHEDULER_LOOKAHEAD_EN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
enable 64 slot lookahead feature
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_CONTROL_FLAG_FOR_WAR_MECHANISM" psid="1165">
  <label>BT_LOCAL_FEATURES_CONTROL_CONTROL_FLAG_FOR_WAR_MECHANISM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Flag used to enable ro disable complete WAR mechanism
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_MAX_NUM_OF_HOST_WAR_LIST" psid="1166">
  <label>BT_LOCAL_FEATURES_CONTROL_MAX_NUM_OF_HOST_WAR_LIST</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
maximum nubmer of device can be stored in HOST WAR LIST
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_RETRANS_BOOST_DISABLE" psid="1167">
  <label>BT_LOCAL_FEATURES_CONTROL_RETRANS_BOOST_DISABLE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Number of reserved slots without eSCO reception after which retransmissions will be deprioritized. Set this value to 0xFFFF to disable this feature. With T=6, Default value of 0x10 will give 60ms.
  </description_user>
</config_element>

<config_element name="LE_ISO_TMSS" psid="1168">
  <label>LE_ISO_TMSS</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
T_MSS value in usec. Minimal value is 150.
  </description_user>
</config_element>

<config_element name="LE_ISO_CONTROL" psid="1169">
  <label>LE_ISO_CONTROL</label>
  <type>le_iso_control_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="LE_ISO_STREAM_DELAY_START" psid="1170">
  <label>LE_ISO_STREAM_DELAY_START</label>
  <type>int16</type>
  <range_min>-32767</range_min>
  <range_max>32767</range_max>
</config_element>

<config_element name="LE_ISO_ADAPT_SYNC_REF_DELAY" psid="1171">
  <label>LE_ISO_ADAPT_SYNC_REF_DELAY</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
ISOAL Sync Ref delay in usec (experience value, need to tune).
  </description_user>
</config_element>

<config_element name="LE_ISO_MAX_SDU_SIZE" psid="1172">
  <label>LE_ISO_MAX_SDU_SIZE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>4096</range_max>
  <description_user>
The maximum SDU size controller supports to Tx/Rx.
  </description_user>
</config_element>

<config_element name="LE_ISO_MAX_BIG_CTRL_PDU_LEN" psid="1173">
  <label>LE_ISO_MAX_BIG_CTRL_PDU_LEN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The maximum BIG Control PDU length.
  </description_user>
</config_element>

<config_element name="LE_ISO_MAX_GROUP_COUNT" psid="1174">
  <label>LE_ISO_MAX_GROUP_COUNT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>239</range_max>
  <description_user>
Maximum group controler will support to create.
  </description_user>
</config_element>

<config_element name="LE_ISO_RX_POOL_COUNT" psid="1176">
  <label>LE_ISO_RX_POOL_COUNT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
tbd
  </description_user>
</config_element>

<config_element name="LE_ISO_CXMDENY_THRESHOLD" psid="1177">
  <label>LE_ISO_CXMDENY_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
CxM Deny threshold.
  </description_user>
</config_element>

<config_element name="RESERVED_FEATURE_MASK" psid="1178">
  <label>RESERVED_FEATURE_MASK</label>
  <type>reserved_feature_reserved_feature_mask_t</type>
  <description_user>
This tag will control Reserved related features disable/enable.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_MAX_LATENCY_TO_LSTO_RATIO" psid="1181">
  <label>LE_CONNECTION_CONTROL_MAX_LATENCY_TO_LSTO_RATIO</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Limit LE Slave connection latency to this many intervals before Link Supervision Timout.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_LINK_LAYER" psid="1182">
  <label>LE_CONNECTION_CONTROL_LINK_LAYER</label>
  <type>le_connection_control_link_layer_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_PHY_SEL_FLAGS" psid="1183">
  <label>LE_CONNECTION_CONTROL_PHY_SEL_FLAGS</label>
  <type>phy_auto_selection_phy_sel_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_EVAL_PACKETS_MIN" psid="1184">
  <label>LE_CONNECTION_CONTROL_EVAL_PACKETS_MIN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Minimum number of packets received to evaluate link quality.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_EVAL_RSSI_THRESHOLD" psid="1185">
  <label>LE_CONNECTION_CONTROL_EVAL_RSSI_THRESHOLD</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>0</range_max>
  <description_user>
Average link RSSI below which 2LE will not be used even if the PER statistics allow.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_MAX_CODED_ADV_PDU_LEN" psid="1187">
  <label>LE_CONNECTION_CONTROL_MAX_CODED_ADV_PDU_LEN</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Can go uptill 1650 with chaining
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_MAX_CODED_ADV_INSTANCES" psid="1188">
  <label>LE_CONNECTION_CONTROL_MAX_CODED_ADV_INSTANCES</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of instances of advertising using Coded PHY
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_MAX_CODED_DATA_PDU_LEN" psid="1189">
  <label>LE_CONNECTION_CONTROL_MAX_CODED_DATA_PDU_LEN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Max Data PDU length
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_MAX_LE_CODED_PHY_LINKS" psid="1190">
  <label>LE_CONNECTION_CONTROL_MAX_LE_CODED_PHY_LINKS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Max number of Links on coded Phy
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_PRIORITY_LE_CODED_PHY" psid="1191">
  <label>LE_CONNECTION_CONTROL_PRIORITY_LE_CODED_PHY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Priority for LE coded phy link
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_LE_MAX_BW_CAP" psid="1192">
  <label>LE_CONNECTION_CONTROL_LE_MAX_BW_CAP</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>100</range_max>
  <description_user>
The maximum allowed bandwidth cap for LE connection as percentage of connection interval
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_INSTANT_UPDATE_PROCESSING_DELAY" psid="1193">
  <label>LE_CONNECTION_CONTROL_INSTANT_UPDATE_PROCESSING_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Processing delay (in connection events) allowed from last tx until instant.
  </description_user>
</config_element>

<config_element name="QLMP_CONTROL_QLMP_FLAGS" psid="1194">
  <label>QLMP_CONTROL_QLMP_FLAGS</label>
  <type>qlmp_control_qlmp_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="QLMP_CONTROL_QLMP_FEATURE_SET" psid="1195">
  <label>QLMP_CONTROL_QLMP_FEATURE_SET</label>
  <type>qlmp_feature_set_t</type>
  <description_user>
QLMP Feature Set fields:

Byte0: bitfield:
Split ACL: Split ACL support.
TWS eSCO: TWS eSCO support.
eSCO DTX: eSCO DTX support
Higher Layer Channel Message: Higher Layer Channel Message support
QHS-P2: BR/EDR Packet Emulation Mode including QHS-P2 packet support
QHS-P3: QHS-P3 packet support
QHS-P4: QHS-P4 packet support
QHS-P5: QHS-P5 packet support

Byte1: bitfield:
QHS-P6: QHS-P6 packet support
Real Time Soft Combining: Real Time Soft Combining
eSCO without MIC: QHS Classic Mode eSCO packets without MIC
Separate ACL and eSCO Nonces: QHS Classic Mode Separate ACL and eSCO Nonces
ACL Mirroring: ACL Mirroring
eSCO Mirroring: eSCO Mirroring
Non DM1 Encapsulated Payload: Non DM1 Encapsulated Payload

Byte2: bitfield:
ACL Handover: ACL Handover
eSCO Handover: eSCO Handover
ACL Data Transfer SYNC Flag: ACL Data Transfer SYNC Flag
QLMP As Extended Opcodes: QLMP is exchanged as non-encapsulated LMP packets

Byte3: bitfield:
QHS Bug Fixes Batch 1: Device supports fixes to day counter initialization, crc and whitener seeding for QHS.
Connection Relay: Device Supports Connection Relay
Bluetooth Over IP: Device Supports Bluetooth over IP
QHS Bug Fixes Batch 2: Device Supports QHS bug fixes batch 2
Split Connected Isochronous Group: Device supports Split Connected Isochronous Group
Support for QLMP_ACL_shadow_req2: Device Supports 2nd version of QLMP ACL shadow req
LE ACL handover: Device Supports LE ACL handover

Byte4: bitfield:
MIC_FWD: Feature Bit for MIC forwarding

Byte5: bitfield:

Byte6: bitfield:

Byte7: bitfield:

Byte8: bitfield:

Byte9: bitfield:

Byte10: bitfield:

Byte11: bitfield:

Byte12: bitfield:

Byte13: bitfield:

Byte14: bitfield:

Byte15: bitfield:

  </description_user>
</config_element>

<config_element name="QLMP_CONTROL_ACL_EVAL_PERIOD" psid="1196">
  <label>QLMP_CONTROL_ACL_EVAL_PERIOD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Evaluation Period (seconds) 0 - No Eval, 1 - N periods
  </description_user>
</config_element>

<config_element name="QLMP_CONTROL_PER_THRESHOLD" psid="1197">
  <label>QLMP_CONTROL_PER_THRESHOLD</label>
  <type>per_threshold_t</type>
  <description_user>
PER Threshold fields:

2QHS Up One: Threshold PER for BT-QHS 2M Phy Rate up transition by one
2QHS Down One: Threshold PER for BT-QHS 2M Phy Rate down transition by one
3QHS Up One: Threshold PER for BT-QHS 3M Phy Rate up transition by one
3QHS Down One: Threshold PER for BT-QHS 3M Phy Rate down transition by one
4QHS Up One: Threshold PER for BT-QHS 4M Phy Rate up transition by one
4QHS Down One: Threshold PER for BT-QHS 4M Phy Rate down transition by one
4QHS Down Two: Threshold PER for BT-QHS 4M Phy Rate down transition by two
5QHS Up One: Threshold PER for BT-QHS 5M Phy Rate up transition by one
5QHS Down One: Threshold PER for BT-QHS 5M Phy Rate down transition by one
5QHS Down Two: Threshold PER for BT-QHS 5M Phy Rate down transition by two
5QHS To 2QHS: Threshold PER for BT-QHS5 to BT-QHS2 transition
6QHS Down One: Threshold PER for BT-QHS 6M Phy Rate down transition by one
6QHS Down Two: Threshold PER for BT-QHS 6M Phy Rate down transition by two
6QHS To 2QHS: Threshold PER for BT-QHS6 to BT-QHS2 transition
5QHS Down One Aptx Low Latency Mode: Threshold PER for BT-QHS5 to BT-QHS4 transition in aptx low latency mode
  </description_user>
</config_element>

<config_element name="QLMP_CONTROL_QHS_HCI_MAX_LATENCY_OVERRIDE" psid="1198">
  <label>QLMP_CONTROL_QHS_HCI_MAX_LATENCY_OVERRIDE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>20</range_max>
  <description_user>
Default is 0. A non-zero value will overide the HCI provided eSCO latency. Min = 13 msec
  </description_user>
</config_element>

<config_element name="QLL_CONTROL_FLAGS" psid="1199">
  <label>QLL_CONTROL_FLAGS</label>
  <type>qll_control_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="QLL_CONTROL_RECONNECT_RETRY" psid="1200">
  <label>QLL_CONTROL_RECONNECT_RETRY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>25</range_max>
  <description_user>
Define the retry times we should take for the QLL link reconnection when we met an unexpected link loss. Value 0 means we should retry to reconnect always.
  </description_user>
</config_element>

<config_element name="QLL_CONTROL_HS_HOST_MODE" psid="1201">
  <label>QLL_CONTROL_HS_HOST_MODE</label>
  <type>hs_host_mode_t</type>
</config_element>

<config_element name="QLL_CONTROL_QLL_LINK_KEY" psid="1202">
  <label>QLL_CONTROL_QLL_LINK_KEY</label>
  <type>qll_link_key_t</type>
  <description_user>
QLL Link Key fields:

Supported Key: bitfield:
Insecure Q-Root Key: Enable/disable bit for Insecure Q-Root Key
Secure Q-Root Key: Enable/disable bit for Secure Q-Root Key

Link Key Value: 
  </description_user>
</config_element>

<config_element name="QLL_CONTROL_QLL_FEATURE_SET" psid="1203">
  <label>QLL_CONTROL_QLL_FEATURE_SET</label>
  <type>qll_feature_set_t</type>
  <description_user>
QLL Feature Set fields:

Byte_0: bitfield:
LEHS-P2 TX: LEHS-P2 Tx Support
LEHS-P3 TX: LEHS-P3 Tx Support
LEHS-P4 TX: LEHS-P4 Tx Support
LEHS-P5 TX: LEHS-P5 Tx Support
LEHS-P6 TX: LEHS-P6 Tx Support
LEHS-P2 RX: LEHS-P2 Rx Support
LEHS-P3 RX: LEHS-P3 Rx Support
LEHS-P4 RX: LEHS-P4 Rx Support

Byte_1: bitfield:
LEHS-P5 RX: LEHS-P5 Rx Support
LEHS-P6 RX: LEHS-P6 Rx Support
LEHS-F2 TX: LEHS-F2 Tx Support
LEHS-F3 TX: LEHS-F3 Tx Support
LEHS-F4 TX: LEHS-F4 Tx Support
LEHS-F5 TX: LEHS-F5 Tx Support
LEHS-F6 TX: LEHS-F6 Tx Support
LEHS-F2 RX: LEHS-F2 Rx Support

Byte_2: bitfield:
LEHS-F3 RX: LEHS-F3 Rx Support
LEHS-F4 RX: LEHS-F4 Rx Support
LEHS-F5 RX: LEHS-F5 Rx Support
LEHS-F6 RX: LEHS-F6 Rx Support
RTSC: Real Time Soft Combining support as receiver.
Reserved: Reserved bit. Was QLL LE Power Control feature support.
Extended ISO: Extended ISO Channel support
Extended ISOAL: Extended ISOAL host aware.

Byte_3: bitfield:
LE EDPH: LE Empty Data Packet Hard Align.
Undefined Bits: Undefined bits
FT CHANGE: Dynamic Flush Timeout for adaptive LE audio
BN VARIATION BY QHS RATE: Dynamic Burst Number support
Undefined Bits: Undefined Bits

Byte_4: bitfield:
CIS Flushing Point Improvement: Improvements to the CIS flushing point calculations for better reliability.
Reseved_Bit1: Bit is not used
Reserved_Bit2: Bit is not used
Adaptive ISO: Used for adaptive ISO feature
Reserved_Bit4: Bit is not used
Reserved_Bit5: Bit is not used
Reserved_Bit6: Bit is not used
Adaptive ISO multi cfg update: Adaptive ISO multi config update feature

Byte_5: bitfield:
Undefined Bits: Undefined Bits

Byte_6: bitfield:
Undefined Bits: Undefined Bits

Byte_7: bitfield:
Undefined Bits: Undefined Bits

  </description_user>
</config_element>

<config_element name="QLL_CONTROL_LEHS_PER_THRESHOLD_CONFIG" psid="1204">
  <label>QLL_CONTROL_LEHS_PER_THRESHOLD_CONFIG</label>
  <type>lehs_per_threshold_config_t</type>
  <description_user>
LEHS PER Threshold Config fields:

LEHS2 Up One: Threshold PER of LEHS2 up one.
LEHS3 Up One: Threshold PER of LEHS2 up one.
LEHS3 Down One: Threshold PER of LEHS3 down one.
LEHS4 Up One: Threshold PER of LEHS4 up one.
LEHS4 Down One: Threshold PER of LEHS4 down one.
LEHS4 Down Two: Threshold PER of LEHS4 down two.
LEHS5 Up One: Threshold PER of LEHS5 up one.
LEHS5 Down One: Threshold PER of LEHS5 down one.
LEHS5 Down Two: Threshold PER of LEHS5 down two.
LEHS5 To LEHS2: Threshold PER of LEHS5 to LEHS2.
LEHS6 Down One: Threshold PER of LEHS6 down one.
LEHS6 Down Two: Threshold PER of LEHS6 down two.
LEHS6 To LEHS2: Threshold PER of LEHS6 to LEHS2.
Reserved: 
  </description_user>
</config_element>

<config_element name="DLE_LINK_SERVICE_MIN_THRESHOLD" psid="1205">
  <label>DLE_LINK_SERVICE_MIN_THRESHOLD</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>100</range_max>
  <description_user>
This parameter defines a minimum threshold on % of LE connection intervals that can be served using a chosen extended data length. Minimum value for Minimum threshold to serve the link can be 1%. Maximum value for Minimum threshold to serve the link can be 100%. By default, we are inclined to set the maximum possible length with which the link can be served for minimum 25% of the time. The default value is quite low in order to be relax in terms of service the LE link and thus allows length selection algorithm to select a high data length.
  </description_user>
</config_element>

<config_element name="AFHCSBCONTROL_ENABLECSBNEWAFHMAPEVENT" psid="1206">
  <label>AFHCSBCONTROL_ENABLECSBNEWAFHMAPEVENT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
If this flag is set to 1, vendor specific CsbNewAfhMapEvent is enabled. This means that when a new AFH map is available on the CSB broacaster, the controller won't update it but instead it will report this event for the host to take the decision. The amount of changes necessary for the map to be considered new is specified in AfhCsbMinMapChange.
  </description_user>
</config_element>

<config_element name="AFHCSBCONTROL_AFHCSBMINMAPCHANGE" psid="1207">
  <label>AFHCSBCONTROL_AFHCSBMINMAPCHANGE</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="ADD_ON_FEATURE_SUPPORT" psid="1208">
  <label>ADD_ON_FEATURE_SUPPORT</label>
  <type>add_on_feature_support_t</type>
  <description_user>
HOST team will be sending this command at the time of BT turn on and will take decisions based on these feature mask

Add On Feature Support fields:

Byte0: bitfield:
WiPower Fastboot Enable: 
Split A2DP - Scramble Data Required: 
Split A2DP - 44p1Khz Sample Freq: 
Split A2DP - 48Khz Sample Freq: 
Split A2DP Single VS Command Support: 
Split A2DP Source - SBC Encoding: 
Reserved1: 
Reserved2: 

Byte1: bitfield:
Split A2DP Source - SBC: 
Split A2DP Source - MP3: 
Split A2DP Source - AAC: 
Split A2DP Source - LDAC: 
Split A2DP Source - APTX: 
Split A2DP Source - APTX HD: 
Split A2DP Source - APTX ADAPTIVE: 
Split A2DP Source - APTX TWS PLUS: 

Byte2: bitfield:
Split A2DP Sink - SBC: 
Split A2DP Sink - MP3: 
Split A2DP Sink - AAC: 
Split A2DP Sink - LDAC: 
Split A2DP Sink - APTX: 
Split A2DP Sink - APTX HD: 
Split A2DP Sink - APTX ADAPTIVE: 
Split A2DP Sink - APTX TWS PLUS: 

Byte3: bitfield:
Voice - Dual SCO: 
Voice - TWS Plus Dual eSCO AG: 
Voice - SWB APTX ADAPTIVE AG: 
Split A2DP Source - LHDC: Split A2DP Source - LHDC
Q2Q-QLE HCI support: Q2Q-QLE HCI support
Q2Q-QCM HCI support: Q2Q-QCM HCI support
Reserved6: 
Reserved7: 

Byte4: bitfield:
Broadcast Audio Tx with EC-2-5: 
Broadcast Audio Tx with EC-3-9: 
Broadcast Audio Rx with EC-2-5: 
Broadcast Audio Rx with EC-3-9: 

  </description_user>
</config_element>

<config_element name="HCI_UART_SETTINGS_H4_UART_CONFIG" psid="1209">
  <label>HCI_UART_SETTINGS_H4_UART_CONFIG</label>
  <type>hci_uart_settings_h4_uart_config_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="HCI_UART_SETTINGS_UART_BAUD_RATE" psid="1210">
  <label>HCI_UART_SETTINGS_UART_BAUD_RATE</label>
  <type>uart_baud_rate_t</type>
</config_element>

<config_element name="HCI_UART_SETTINGS_USER_DEFINED_BAUD" psid="1211">
  <label>HCI_UART_SETTINGS_USER_DEFINED_BAUD</label>
  <type>user_defined_baud_t</type>
  <description_user>
User Defined Baud fields:

Integer Rate Divisor: Integer Baud Rate divisor;  Formula's to Calculate Baud Rate Registers: ibrd = ( BBCLK/(8*BAUD) ); For SiW1750/1760: BBCLK = 16,000,000; For the SiW3000 : BBCLK = 32,000,000; For QCA6174 2.x : BBCLK = 32,000,000; For QCA6174 3.x : BBCLK = 32,000,000 or 64,000,000
Fractional Rate Divisor: SiW1750/1760: BBCLK = 16,000,000; For the SiW3000 : BBCLK = 32,000,000; For QCA6174 2.x : BBCLK = 32,000,000; For QCA6174 3.x : BBCLK = 32,000,000 or 64,000,000
Reserved1: Padding bytes for alignment
  </description_user>
</config_element>

<config_element name="POWER_CONTROL_INCREMENT_COUNTER_LIMIT" psid="1212">
  <label>POWER_CONTROL_INCREMENT_COUNTER_LIMIT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
When the Power Control increment counter limit is reached, a decrement power PDU is generated.
  </description_user>
</config_element>

<config_element name="POWER_CONTROL_DECREMENT_COUNTER_LIMIT" psid="1213">
  <label>POWER_CONTROL_DECREMENT_COUNTER_LIMIT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
When the Power Control decrement counter limit is reached, a increment power PDU is generated.
  </description_user>
</config_element>

<config_element name="POWER_CONTROL_POWER_CONTROL_TIMER" psid="1214">
  <label>POWER_CONTROL_POWER_CONTROL_TIMER</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Periodic timer (msec) to assess power control conditions.
  </description_user>
</config_element>

<config_element name="POWER_CONTROL_LE_INCREMENT_COUNTER_LIMIT" psid="1215">
  <label>POWER_CONTROL_LE_INCREMENT_COUNTER_LIMIT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
When the Power Control increment counter limit is reached, a decrement power PDU for LE link is generated.
  </description_user>
</config_element>

<config_element name="POWER_CONTROL_LE_DECREMENT_COUNTER_LIMIT" psid="1216">
  <label>POWER_CONTROL_LE_DECREMENT_COUNTER_LIMIT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
When the Power Control decrement counter limit is reached, a increment power PDU for LE link is generated.
  </description_user>
</config_element>

<config_element name="POWER_CONTROL_CL2_FB_PC_INCREMENT_COUNTER_LIMIT" psid="1217">
  <label>POWER_CONTROL_CL2_FB_PC_INCREMENT_COUNTER_LIMIT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
When the Fallback Power Control increment counter limit is reached, TX power is incremented by one step
  </description_user>
</config_element>

<config_element name="POWER_CONTROL_CL2_FB_PC_DECREMENT_COUNTER_LIMIT" psid="1218">
  <label>POWER_CONTROL_CL2_FB_PC_DECREMENT_COUNTER_LIMIT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
When the Fallback Power Control Decrement counter limit is reached, TX power is Decremented by one step
  </description_user>
</config_element>

<config_element name="POWER_CONTROL_MINIMUM_POWER_LEVEL" psid="1219">
  <label>POWER_CONTROL_MINIMUM_POWER_LEVEL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Minimum Tx Power configured in case of Class 2 Fallback
  </description_user>
</config_element>

<config_element name="POWER_CONTROL_GOLDEN_RANGE_MINIMUM_POWER_LEVEL" psid="1220">
  <label>POWER_CONTROL_GOLDEN_RANGE_MINIMUM_POWER_LEVEL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
When AvgRssi  of remote device is in golden range, this is minimum Tx power
  </description_user>
</config_element>

<config_element name="SLEEP_CONTROL_SLEEPEN" psid="1221">
  <label>SLEEP_CONTROL_SLEEPEN</label>
  <type>sleepen_t</type>
</config_element>

<config_element name="SLEEP_CONTROL_TXPSLEEPMODE" psid="1222">
  <label>SLEEP_CONTROL_TXPSLEEPMODE</label>
  <type>txpsleepmode_t</type>
</config_element>

<config_element name="SLEEP_CONTROL_SIBS_PARAMETERS" psid="1223">
  <label>SLEEP_CONTROL_SIBS_PARAMETERS</label>
  <type>sibs_parameters_t</type>
  <description_user>
SIBS Parameters fields:

Wake Retransmission Timeout: Software In-Band Sleep Wake Retransmission Timeout in ms. Wake will be re-transmitted after this number of ms if a Wake Ack is not received.
Tx Idle Timeout: Software In-Band Sleep Tx Idle Timeout in ms. Sleep signal will be sent if Tx stays idle for the defined timeout period.
Options: bitfield:
Wake Byte Required: When enabled (set to 1), an actual Wake byte must be received to respond with a Wake Ack byte.  When disabled, a Wake Ack byte will be sent on wakeup due to any Rx activity.
Dynamic Wake Retransmit Timeout: Wake Retransmit Timeout can be set to either constant value always or can be configured to increment dynamically based on number of Wake Indication Timeouts. When this BIT is set to 1: Wake Retransmit timeout will increment linearly. For example if the Wake Retransmit timeout is set to 10msec then Wake Indication will be sent out at 0, 10, 20, 30, 40, 50, 60msec timeouts.
Wakeup Source: Wakeup source selection for SIBS mode. Value of 0x0(default) is used when both HCI RxD &amp; RxD Fast are configured as wakeup source., Value of 0x1 is used when HCI RxD only is configured as wakeup source.

  </description_user>
</config_element>

<config_element name="SLEEP_CONTROL_HWOOB_PARAMETERS" psid="1224">
  <label>SLEEP_CONTROL_HWOOB_PARAMETERS</label>
  <type>hwoob_parameters_t</type>
  <description_user>
HWOOB Parameters fields:

BTWake Polarity: 
HostWake Polarity: 
BTWake Pin: 
HostWake Pin: 
  </description_user>
</config_element>

<config_element name="SLEEP_PARAMETERS_POWER_CONTROL_SELECT" psid="1227">
  <label>SLEEP_PARAMETERS_POWER_CONTROL_SELECT</label>
  <type>sleep_parameters_power_control_select_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="SLEEP_PARAMETERS_MIN_TIMER" psid="1228">
  <label>SLEEP_PARAMETERS_MIN_TIMER</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
  <description_user>
Minimum Timer for deep sleep, in units of 1 uS.  Default=0xCB2 (3250us). This value should include Power_on_count + Clock_lock_count + Xtal_ready_count + FW_Sleep_Config_Overhead + HW_Sleep_SM_overhead
  </description_user>
</config_element>

<config_element name="SLEEP_PARAMETERS_WAKE_OVERHEAD" psid="1229">
  <label>SLEEP_PARAMETERS_WAKE_OVERHEAD</label>
  <type>uint16</type>
  <range_min>1</range_min>
  <range_max>65535</range_max>
  <description_user>
Specifies the amount of time firmware required to perform the exit sleep process. Current value is 200us, but this should be tuned per platform.
  </description_user>
</config_element>

<config_element name="SLEEP_PARAMETERS_POWER_ON_COUNT" psid="1230">
  <label>SLEEP_PARAMETERS_POWER_ON_COUNT</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>511</range_max>
  <description_user>
Power up time relative to the end of sleep. This time needs to include the osrut_count and fixed overhead. Resolution: 64us. (default=0x28, 40d)
  </description_user>
</config_element>

<config_element name="SLEEP_PARAMETERS_CLOCK_LOCK_COUNT" psid="1231">
  <label>SLEEP_PARAMETERS_CLOCK_LOCK_COUNT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>64</range_max>
  <description_user>
Clock source lock time relative to the end of sleep. This time needs to include a fixed overhead. Resolution: 62.5us. (default=0x2, 2d)
  </description_user>
</config_element>

<config_element name="SLEEP_PARAMETERS_SLEEP_STATE_LOG_MASK" psid="1233">
  <label>SLEEP_PARAMETERS_SLEEP_STATE_LOG_MASK</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Mask used to decide which sleep logs needs to be enabled for debugging.
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_FLAGS" psid="1234">
  <label>DEBUG_PARAMETERS_FLAGS</label>
  <type>debug_parameters_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_LOGGER_PARAMS" psid="1235">
  <label>DEBUG_PARAMETERS_LOGGER_PARAMS</label>
  <type>logger_params_t</type>
  <description_user>
Logger Params fields:

NBLK Logger Memory Usage: Not used for ROME. Total memory for logger is defined in oscfg instead.
NBLK Logger Memory Block Size: Not used for ROME. Memory block size for logger is defined in oscfg instead.
NBLK Stats Timer Interval: Timer Interval (Secs) to display Logger Statistics/Info, when Logger is in NonBlocking (Asynchronous) Mode. A value of 0 turns off the Statistics Display.
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_LOGGER_CONFIG_SELECT" psid="1236">
  <label>DEBUG_PARAMETERS_LOGGER_CONFIG_SELECT</label>
  <type>logger_config_select_t</type>
</config_element>

<config_element name="DEBUG_PARAMETERS_LOGGER_HCI_FILTER" psid="1237">
  <label>DEBUG_PARAMETERS_LOGGER_HCI_FILTER</label>
  <type>debug_parameters_logger_hci_filter_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_IOP_TRANSMIT_BUFFER_PROTECTION" psid="1238">
  <label>DEBUG_PARAMETERS_IOP_TRANSMIT_BUFFER_PROTECTION</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
  <description_user>
Number of microseconds in 5us increments to wait for the IOP to push data out the UART before going to sleep.  For a 115k serial connection, this value should be set to 20 (100us)
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_VOICE_LOOPBACK_MODE" psid="1239">
  <label>DEBUG_PARAMETERS_VOICE_LOOPBACK_MODE</label>
  <type>voice_loopback_mode_t</type>
</config_element>

<config_element name="DEBUG_PARAMETERS_ENHLOG_FLAGS" psid="1240">
  <label>DEBUG_PARAMETERS_ENHLOG_FLAGS</label>
  <type>enh_logging_params_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_INTERVAL" psid="1241">
  <label>DEBUG_PARAMETERS_INTERVAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>10</range_max>
  <description_user>
Interval for Periodic Logging in secs.
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_LOGLEVEL" psid="1242">
  <label>DEBUG_PARAMETERS_LOGLEVEL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Default Log Level for all the Log Modules
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_SLC" psid="1243">
  <label>DEBUG_PARAMETERS_SLC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_HIF" psid="1244">
  <label>DEBUG_PARAMETERS_HIF</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_LLM" psid="1245">
  <label>DEBUG_PARAMETERS_LLM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_OTA" psid="1246">
  <label>DEBUG_PARAMETERS_OTA</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_CXM" psid="1247">
  <label>DEBUG_PARAMETERS_CXM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_APP" psid="1248">
  <label>DEBUG_PARAMETERS_APP</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_STATS" psid="1249">
  <label>DEBUG_PARAMETERS_STATS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_PFAL" psid="1250">
  <label>DEBUG_PARAMETERS_PFAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_FM" psid="1251">
  <label>DEBUG_PARAMETERS_FM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
FM logging level is being selected from FM NVM file (TAG: LOG(64)) and is placed here for reference only. Please change FM TAG: LOG(64) in FM NVM file to chnage the FM Logging Mask levels. Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_A2DP" psid="1252">
  <label>DEBUG_PARAMETERS_A2DP</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_ANT" psid="1253">
  <label>DEBUG_PARAMETERS_ANT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
  <description_user>
Logging Levels: 0-Error, 1-High, 2-Med, 3-Low. If the value is other than 0-3 Logging level is set to the default level set by Enhance Logging Params
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_ENH_LOGGING_SLC_MASK" psid="1254">
  <label>DEBUG_PARAMETERS_ENH_LOGGING_SLC_MASK</label>
  <type>enh_logging_slc_mask_t</type>
  <description_user>
Enh Logging SLC Mask fields:

SLC_MASK_0: bitfield:
Reserved_0: Reserved for future use
TX_INFO: Unused?
RX_INFO: Unused?
SCHED_CLOCK_SHORT: Logs only the lower two bytes of the interger portion of the piconet clock
SCHED_CLOCK: Logs all 4 bytes of the interger portion of the piconet clock
POLLMGR_RESULT: Logs the connection handle and priority of the resulting dispatch from the PollMgr
DISPATCH_CONSUMED: Logs information from the dispatch element that was consumed by the scheduler.
DISPATCH_NOT_CONSUMED: Logs information from the dispatch element that was NOT consumed by the scheduler.

SLC_MASK_1: bitfield:
DISPATCH_LATE: Logs information from the dispatch element that was determined to be late by the scheduler.
DISPATCH_FUTURE: Logs information from the dispatch element that was determined to be in the future by the scheduler.
DISPATCH_SEARCH_PRIO_ELEM: Logs information for each next time-ordered dispatch element the scheduler considers while the scheduler decides the correct choice for the next job to dispatch.
DISPATCH_SEARCH_CHECK_ELEM: Logs information for next time-ordered dispatch element the scheduler compares against DISPATCH_SEARCH_PRIO_ELEM to decide the next correct job to dispatch.
DISPATCH_SEARCH_OVERLAP: Logs information for the next time-ordered dispatch element the scheduler considers higher priority and overlapping in time compared to DISPATCH_SEARCH_PRIO_ELEM while the scheduler decides the correct choice for the next job to dispatch.
DISPATCH_SEARCH_UNWIND: Logs information for each dispatch element the scheduler considers to not overlap with the next higher priority dispatch while the scheduler decides the correct choice for the next job to dispatch.
DISPATCH_LATE_REPORT: Unused?
DISPATCH_VERBOSE: Unused?

SLC_MASK_2: bitfield:
TX_VERBOSE: Logs the header for each BR/EDR packet transmitted.
RX_VERBOSE: Logs the packet header for each BR/EDR packet received.
LE_TX_VERBOSE: Logs the packet header for each LE packet transmitted.
LE_RX_VERBOSE: Logs the packet header for each LE packet received.
LE_ADV_VERBOSE: Logs the packet header for each LE advertising packet transmitted.
PRIORITY_CHANGE: Logs the change in priority and reason for a dispatch element.
LE_CONN_EVT_END: Logs the reason why an LE connection event ended unnaturally (e.g. no data to Tx/Rx).
POLLMGR_RESULT_TYPE: Logs information about the resulting PollMgr task chosen.

SLC_MASK_3: bitfield:
A2DP_TX_BUFFER_SIZE_ERROR: Logs a message when there is insufficient baseband buffer space available for the current A2DP packet.
DISPATCH_HANDLE: Logs the connection handle/ISO group ID for select dispatch handlers.
QLL_ALT_PHY_RATE: Logs alternate PHY information for QLL ISO
QLL_CIS_EVT_CNT: Event counter at the time QLL_ALT_PHY_RATE is logged.
Reserved_4: Reserved for future use
Reserved_5: Reserved for future use
Reserved_6: Reserved for future use
Reserved_7: Reserved for future use

SLC_MASK_4: bitfield:
ALE_PERIODIC_SYNC_INFO: Logs state machine information related to a LE periodic link.
LPRX_SCAN_INFO: Logs information related to low power page/inquiry scan.
Reserved_2: Reserved for future use
Reserved_3: Reserved for future use
Reserved_4: Reserved for future use
Reserved_5: Reserved for future use
LE_SUBRATE_INFO: Logs information related to LE subrate feature.
Reserved_7: Reserved for future use

SLC_MASK_5: bitfield:
Reserved_0: Reserved for future use
SLC_LOG_ID_QHS_TX: Logs the header for each TX QHS packet
SLC_LOG_ID_QHS_RX: Logs the header for each RX QHS packet
Reserved_3: Reserved for future use
Reserved_4: Reserved for future use
Reserved_5: Reserved for future use
Reserved_6: Reserved for future use
Reserved_7: Reserved for future use

SLC_MASK_6: 
SLC_MASK_7: bitfield:
Reserved_0: Reserved for future use
ASSERT: Unused?
Reserved_2: Reserved for future use
Reserved_3: Reserved for future use
Reserved_4: Reserved for future use
Reserved_5: Reserved for future use
Reserved_6: Reserved for future use
EXTID: SLC logging extendable ID.  Through the use of a sub-ID, this may be used to extend the number of SLC log types possible.

SLC_MASK_8: 
SLC_MASK_9: 
SLC_MASK_10: 
SLC_MASK_11: 
SLC_MASK_12: 
SLC_MASK_13: 
SLC_MASK_14: 
SLC_MASK_15: 
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_HCI_UART_RX_RINGBUFFER_SIZE" psid="1255">
  <label>DEBUG_PARAMETERS_HCI_UART_RX_RINGBUFFER_SIZE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>4096</range_max>
  <description_user>
Provide the Ring Buffer Size in Bytes. When the size is 0, Ring buffer is disabled.
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_HCI_UART_TX_RINGBUFFER_SIZE" psid="1256">
  <label>DEBUG_PARAMETERS_HCI_UART_TX_RINGBUFFER_SIZE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>4096</range_max>
  <description_user>
Provide the Ring Buffer Size in Bytes. When the size is 0, Ring buffer is disabled.
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_AHB_TIMEOUT" psid="1257">
  <label>DEBUG_PARAMETERS_AHB_TIMEOUT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
AHB timeout timer value. (0 to disable AHB Timeout feature).
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_HYDRA_PANIC_ON_FAULT" psid="1258">
  <label>DEBUG_PARAMETERS_HYDRA_PANIC_ON_FAULT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
When enabled, Hydra faults will become panics. 0 - Disabled; 1 - Enabled
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_HCI_LOGGING_CONFIG" psid="1259">
  <label>DEBUG_PARAMETERS_HCI_LOGGING_CONFIG</label>
  <type>hci_logging_config_t</type>
  <description_user>
HCI_Logging_Config fields:

Host_Report_Mask: bitfield:
Page_Timeout: 
Half_LSTO: 
audio_glitch: 
SCO_Misses: 
LSTO: 
CONN_FAIL: 
Reserved: 

SCO_Misses: Minimum report interval in ms.
  </description_user>
</config_element>

<config_element name="HEADER_FEC_ERRORS_ALLOWED" psid="1260">
  <label>HEADER_FEC_ERRORS_ALLOWED</label>
  <type>header_fec_errors_allowed_t</type>
  <description_user>
The number of allowed FEC errors before NACKing a packet.  This parameter helps distinguish bad packets in the presence of 802.11 interference.

Header FEC Errors Allowed fields:

ACL: Number of header FEC errors allowed before NACKing an ACL packet
SCO: Number of header FEC errors allowed before NACKing a SCO packet
  </description_user>
</config_element>

<config_element name="PPM_DRIFT_RATE" psid="1261">
  <label>PPM_DRIFT_RATE</label>
  <type>ppm_drift_rate_t</type>
  <description_user>
This parameter contains PPM drift rate for the low power oscillator that is reported over the air via the LMP_timing_accuracy PDU.When a 32kHz crystal (or clock) is used, the baseband will typically self calibrate this to 45 ppm using the 32MHz clock as a reference.  When/If the internal 32kHz relaxation oscillator is used on the SIW3000, the tolerance will be different, so it will need to be reflected in this tag.This parameter does not affect the calibration procedure, only the reported accuracy.

PPM Drift Rate fields:

Drift Rate BTC: PPM Drift Rate for BT Classical (Default: 0x2D, 45d)
Drift Rate BLE: PPM Drift Rate for BLE (Default: 0x2D, 45d)
  </description_user>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_0" psid="1262">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_0</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_1" psid="1263">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_1</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_2" psid="1264">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_2</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_3" psid="1265">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_3</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_4" psid="1266">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_4</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_5" psid="1267">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_5</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_6" psid="1268">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_6</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_7" psid="1269">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_7</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_8" psid="1270">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_8</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_9" psid="1271">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_9</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_10" psid="1272">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_10</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_11" psid="1273">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_11</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_12" psid="1274">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_12</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_13" psid="1275">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_13</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_14" psid="1276">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_14</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_15" psid="1277">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_15</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_16" psid="1278">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_16</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_17" psid="1279">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_17</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_18" psid="1280">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_18</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_19" psid="1281">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_19</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_20" psid="1282">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_20</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_21" psid="1283">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_21</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_22" psid="1284">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_22</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_23" psid="1285">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_23</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_24" psid="1286">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_24</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_25" psid="1287">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_25</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_26" psid="1288">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_26</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_27" psid="1289">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_27</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_28" psid="1290">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_28</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_29" psid="1291">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_29</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_30" psid="1292">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_30</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_31" psid="1293">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_31</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_32" psid="1294">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_32</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_33" psid="1295">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_33</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_34" psid="1296">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_34</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_35" psid="1297">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_35</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_36" psid="1298">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_36</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_37" psid="1299">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_37</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_38" psid="1300">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_38</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_39" psid="1301">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_39</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_40" psid="1302">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_40</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_41" psid="1303">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_41</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_42" psid="1304">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_42</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_43" psid="1305">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_43</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_44" psid="1306">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_44</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_45" psid="1307">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_45</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_46" psid="1308">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_46</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_47" psid="1309">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_47</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_48" psid="1310">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_48</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_49" psid="1311">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_49</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_50" psid="1312">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_50</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_51" psid="1313">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_51</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_52" psid="1314">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_52</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_53" psid="1315">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_53</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_54" psid="1316">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_54</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_55" psid="1317">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_55</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_56" psid="1318">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_56</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_57" psid="1319">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_57</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_58" psid="1320">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_58</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_59" psid="1321">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_59</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_60" psid="1322">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_60</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_61" psid="1323">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_61</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_62" psid="1324">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_62</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_63" psid="1325">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_63</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_64" psid="1326">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_64</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_65" psid="1327">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_65</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_66" psid="1328">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_66</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_67" psid="1329">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_67</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_68" psid="1330">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_68</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_69" psid="1331">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_69</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_70" psid="1332">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_70</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_71" psid="1333">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_71</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_72" psid="1334">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_72</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_73" psid="1335">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_73</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_74" psid="1336">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_74</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_75" psid="1337">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_75</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_76" psid="1338">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_76</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_77" psid="1339">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_77</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_78" psid="1340">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_78</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="GPIO_ASSIGNMENTS_GPIO_FUNCTION_79" psid="1341">
  <label>GPIO_ASSIGNMENTS_GPIO_FUNCTION_79</label>
  <type>gpio_function_t</type>
</config_element>

<config_element name="BB_PRIORITY_INQUIRY" psid="1345">
  <label>BB_PRIORITY_INQUIRY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Inquiry]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_INQUIRY_CANCEL" psid="1346">
  <label>BB_PRIORITY_INQUIRY_CANCEL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Inquiry]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGE_ID" psid="1347">
  <label>BB_PRIORITY_PAGE_ID</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGE_FHS" psid="1348">
  <label>BB_PRIORITY_PAGE_FHS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGE_POLL_LOW" psid="1349">
  <label>BB_PRIORITY_PAGE_POLL_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGE_POLL_HIGH" psid="1350">
  <label>BB_PRIORITY_PAGE_POLL_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGE_POLL_RNR" psid="1351">
  <label>BB_PRIORITY_PAGE_POLL_RNR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGE_CANCEL" psid="1352">
  <label>BB_PRIORITY_PAGE_CANCEL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGE_TPO" psid="1353">
  <label>BB_PRIORITY_PAGE_TPO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
truncated page offloading priority. It should be very low = ACL_IDLE, [BB_GROUP=Page]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_INQUIRYSCAN_LOW" psid="1354">
  <label>BB_PRIORITY_INQUIRYSCAN_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Inquiry Scan]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_INQUIRYSCAN_HIGH" psid="1355">
  <label>BB_PRIORITY_INQUIRYSCAN_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Inquiry Scan]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_INQUIRYSCAN_FHS" psid="1356">
  <label>BB_PRIORITY_INQUIRYSCAN_FHS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Inquiry Scan]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_INQUIRYSCAN_EIR" psid="1357">
  <label>BB_PRIORITY_INQUIRYSCAN_EIR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Inquiry Scan]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGESCAN_LOW" psid="1358">
  <label>BB_PRIORITY_PAGESCAN_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page Scan]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGESCAN_HIGH" psid="1359">
  <label>BB_PRIORITY_PAGESCAN_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page Scan]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGESCAN_RSP_LOW" psid="1360">
  <label>BB_PRIORITY_PAGESCAN_RSP_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page Scan]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGESCAN_RSP_HIGH" psid="1361">
  <label>BB_PRIORITY_PAGESCAN_RSP_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page Scan]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PAGESCAN_CANCEL" psid="1362">
  <label>BB_PRIORITY_PAGESCAN_CANCEL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page Scan]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SCAN_ACTIVE" psid="1363">
  <label>BB_PRIORITY_SCAN_ACTIVE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Page Scan]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LLR" psid="1364">
  <label>BB_PRIORITY_LLR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_BCA_LOW" psid="1365">
  <label>BB_PRIORITY_BCA_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
It should be a2dp_low +1, [BB_GROUP=BCA]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_BCA_HIGH" psid="1366">
  <label>BB_PRIORITY_BCA_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
It should be a2dp_critical+1, [BB_GROUP=BCA]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_BCA_RANDOMSEED" psid="1367">
  <label>BB_PRIORITY_BCA_RANDOMSEED</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BCA]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SETAFH" psid="1368">
  <label>BB_PRIORITY_SETAFH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ROLESWITCH_LOW" psid="1369">
  <label>BB_PRIORITY_ROLESWITCH_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Role Switch]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ROLESWITCH_HIGH" psid="1370">
  <label>BB_PRIORITY_ROLESWITCH_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Role Switch]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PCA" psid="1371">
  <label>BB_PRIORITY_PCA</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_A2DP_IDLE" psid="1372">
  <label>BB_PRIORITY_A2DP_IDLE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=A2DP]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_A2DP_LOW" psid="1373">
  <label>BB_PRIORITY_A2DP_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=A2DP]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_A2DP_HIGH" psid="1374">
  <label>BB_PRIORITY_A2DP_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=A2DP]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_A2DP_CRITICAL" psid="1375">
  <label>BB_PRIORITY_A2DP_CRITICAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=A2DP]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ACL_IDLE" psid="1376">
  <label>BB_PRIORITY_ACL_IDLE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=ACL]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ACL_LOW" psid="1377">
  <label>BB_PRIORITY_ACL_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=ACL]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ACL_HIGH" psid="1378">
  <label>BB_PRIORITY_ACL_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=ACL]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ACL_CRITICAL" psid="1379">
  <label>BB_PRIORITY_ACL_CRITICAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=ACL]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ACL_TERMINATE" psid="1380">
  <label>BB_PRIORITY_ACL_TERMINATE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=ACL]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_IDLE" psid="1381">
  <label>BB_PRIORITY_SNIFF_IDLE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_ANCHOR_LOW" psid="1382">
  <label>BB_PRIORITY_SNIFF_ANCHOR_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_ANCHOR_HIGH" psid="1383">
  <label>BB_PRIORITY_SNIFF_ANCHOR_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_TIMEOUT" psid="1384">
  <label>BB_PRIORITY_SNIFF_TIMEOUT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_QOS_LOW" psid="1385">
  <label>BB_PRIORITY_SNIFF_QOS_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_QOS_HIGH" psid="1386">
  <label>BB_PRIORITY_SNIFF_QOS_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_BASERATE" psid="1388">
  <label>BB_PRIORITY_SNIFF_BASERATE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_ENTER" psid="1389">
  <label>BB_PRIORITY_SNIFF_ENTER</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_EXIT" psid="1390">
  <label>BB_PRIORITY_SNIFF_EXIT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_HID_IDLE" psid="1391">
  <label>BB_PRIORITY_HID_IDLE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=HID]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_HID_ANCHOR_LOW" psid="1392">
  <label>BB_PRIORITY_HID_ANCHOR_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=HID]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_HID_ANCHOR_HIGH" psid="1393">
  <label>BB_PRIORITY_HID_ANCHOR_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=HID]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_HID_TIMEOUT" psid="1394">
  <label>BB_PRIORITY_HID_TIMEOUT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=HID]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_HID_QOS_LOW" psid="1395">
  <label>BB_PRIORITY_HID_QOS_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=HID]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_HID_QOS_HIGH" psid="1396">
  <label>BB_PRIORITY_HID_QOS_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=HID]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_HID_CRITICAL" psid="1397">
  <label>BB_PRIORITY_HID_CRITICAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=HID]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_XSCO_RESERVE" psid="1399">
  <label>BB_PRIORITY_XSCO_RESERVE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Normal (non-boosted) priority for an xSCO reserved frame.  In addition, for TWS+ eSCO connections, boosted LEFT retransmission frames will use this priority minus 1, and boosted RIGHT retransmission frames will use this priority minus 2 (to keep both retransmission frames lower priority than the reserved frames, and to keep the RIGHT retransmission frames lower priority than the LEFT), [BB_GROUP=xSCO]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_XSCO_HIGH" psid="1401">
  <label>BB_PRIORITY_XSCO_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Priority for an xSCO reserved frame when temporarily boosted (when recent scheduling history indicates one or more missed reserved frames), [BB_GROUP=xSCO]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_XSCO_RETRAN" psid="1402">
  <label>BB_PRIORITY_XSCO_RETRAN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Normal (non-boosted) priority for an xSCO retransmission frame.  Retransmission frames are boosted when they are needed (due to bad Rx in previous frame, receiving a NAK, etc).  When boosted, xSCO retransmission frames get assigned the same priority as was used for the corresponding reserved frame.  For TWS+ RIGHT eSCO connections, a normal (non-boosted) xSCO retransmission frame will use this priority minus 1 (to keep the RIGHT retransmission priority lower than the LEFT), [BB_GROUP=xSCO]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_XSCO_TERMINATE" psid="1403">
  <label>BB_PRIORITY_XSCO_TERMINATE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=xSCO]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SYNCTRAIN" psid="1404">
  <label>BB_PRIORITY_SYNCTRAIN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BC/CSB]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SYNCTRAINSCAN" psid="1405">
  <label>BB_PRIORITY_SYNCTRAINSCAN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BC/CSB]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LINKLESSBC" psid="1406">
  <label>BB_PRIORITY_LINKLESSBC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BC/CSB]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_CSB_RECEIVE" psid="1407">
  <label>BB_PRIORITY_CSB_RECEIVE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Priority for CSB Receive operation, [BB_GROUP=BC/CSB]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LINKLESSBC_HIGH" psid="1408">
  <label>BB_PRIORITY_LINKLESSBC_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
If last CSB packet is missed, this will be used, [BB_GROUP=BC/CSB]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_HOLD" psid="1409">
  <label>BB_PRIORITY_HOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=HOLD]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_ADV_HIGHDUTY" psid="1410">
  <label>BB_PRIORITY_LE_ADV_HIGHDUTY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BLE ADV]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_ADV_LOWDUTY" psid="1411">
  <label>BB_PRIORITY_LE_ADV_LOWDUTY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BLE ADV]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_ADV_CANCEL" psid="1412">
  <label>BB_PRIORITY_LE_ADV_CANCEL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BLE ADV]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_CONN_IDLE" psid="1415">
  <label>BB_PRIORITY_LE_CONN_IDLE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BLE CONN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_CONN_DATA" psid="1416">
  <label>BB_PRIORITY_LE_CONN_DATA</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BLE CONN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_CONN_ANCHOR" psid="1417">
  <label>BB_PRIORITY_LE_CONN_ANCHOR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BLE CONN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_CONN_HIGH" psid="1418">
  <label>BB_PRIORITY_LE_CONN_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BLE CONN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_CONN_CRITICAL" psid="1419">
  <label>BB_PRIORITY_LE_CONN_CRITICAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BLE CONN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_TERMINATE" psid="1420">
  <label>BB_PRIORITY_LE_TERMINATE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=BLE CONN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ANT_LOW" psid="1421">
  <label>BB_PRIORITY_ANT_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=ANT]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ANT_HIGH" psid="1422">
  <label>BB_PRIORITY_ANT_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=ANT]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ANT_CRITICAL" psid="1423">
  <label>BB_PRIORITY_ANT_CRITICAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=ANT]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_TESTER_FRAME" psid="1424">
  <label>BB_PRIORITY_TESTER_FRAME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_TESTER_PARAMCHANGE" psid="1425">
  <label>BB_PRIORITY_TESTER_PARAMCHANGE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_EPTM_FRAME" psid="1426">
  <label>BB_PRIORITY_EPTM_FRAME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_APT" psid="1427">
  <label>BB_PRIORITY_APT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=APT]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_SCAN_AUX_ADV" psid="1433">
  <label>BB_PRIORITY_LE_SCAN_AUX_ADV</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Priority for LE Scan for Aux Advertising, [BB_GROUP=BLE SCAN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_SCAN_AUX_CHAIN_ADV" psid="1434">
  <label>BB_PRIORITY_LE_SCAN_AUX_CHAIN_ADV</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Priority for LE Scan for Aux Chain Advertising, [BB_GROUP=BLE SCAN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_SCAN_AUX_CHAIN_SCANRSP" psid="1435">
  <label>BB_PRIORITY_LE_SCAN_AUX_CHAIN_SCANRSP</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Priority for LE Scan for Aux Chain Scan Response, [BB_GROUP=BLE SCAN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_SCAN_AUX_SYNC" psid="1436">
  <label>BB_PRIORITY_LE_SCAN_AUX_SYNC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Priority for LE Scan for Aux Sync (Periodic), [BB_GROUP=BLE SCAN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_SCAN_AUX_CHAIN_SYNC" psid="1437">
  <label>BB_PRIORITY_LE_SCAN_AUX_CHAIN_SYNC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Priority for LE Scan for Aux Chain Sync (Periodic), [BB_GROUP=BLE SCAN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ACL_BB_ACK_CRITICAL" psid="1438">
  <label>BB_PRIORITY_ACL_BB_ACK_CRITICAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
This priority level governs the priority of an ACL link when as a Slave its BB ACK is pending for long. It is used to put this ACL link higer in priority order so that it gets the BB ACK from remote Master, [BB_GROUP=ACL]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_QHS_PHY_SWITCH" psid="1439">
  <label>BB_PRIORITY_QHS_PHY_SWITCH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling priority for QHS Phy Switch, [BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_A2DP_LOW_LATENCY" psid="1441">
  <label>BB_PRIORITY_A2DP_LOW_LATENCY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
[BB_GROUP=A2DP]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PERIODIC_CAL_LOW" psid="1444">
  <label>BB_PRIORITY_PERIODIC_CAL_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
[BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PERIODIC_CAL_HIGH" psid="1445">
  <label>BB_PRIORITY_PERIODIC_CAL_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
[BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_PERIODIC_CAL_STEP" psid="1446">
  <label>BB_PRIORITY_PERIODIC_CAL_STEP</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
[BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="LE_POWER_CONFIGURATION" psid="1447">
  <label>LE_POWER_CONFIGURATION</label>
  <type>le_power_configuration_t</type>
  <description_user>
These parameters control LE TX output power configuration.

LE Power Configuration fields:

Advertising Power Level Index: Advertising power level index (Default=0x7, 7d). Host can control range by limiting Tx Output Power. This Tx Power is used for Advertising and Scan Response. Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
Scan Request Power Level Index: Scan Request Tx Power Level Index (Default=0x7, 7d). Host can control range by limiting Tx Output Power. Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
Connection Power Level Index: Connection power level index (Default=0x7, 7d). Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
Broadcaster Power Level Index: LE ISO BIG Tx power level. (Default=0x7, 7d). Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
MultiAdvTxPower_min: Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
MultiAdvTxPower_low: Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
MultiAdvTxPower_mid: Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
MultiAdvTxPower_high: Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
MultiAdvTxPower_max: Negative PL can be specified as 0x20(-1) ~ 0x23(-4).
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_GMEM" psid="1448">
  <label>MEMORY_POOL_CONFIG_GMEM</label>
  <type>generic_pool_config_t</type>
  <array_length_min>16</array_length_min>
  <array_length_max>16</array_length_max>
  <description_user>
GENERIC POOL CONFIG fields:

mem config: bitfield:
section: 00: lower heap only; 01: upper heap only;
prealloc: Preallocate memory
retaddr: record the return address of the caller.

max count: minimum memory blocks allocated when memory pool is initialized.
block size: maximum memory blocks allowed to be allocated from memory pool. Note the block size should be in increasing ordrer for optimal allocation
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LARGE_HCI_CMD" psid="1449">
  <label>MEMORY_POOL_CONFIG_LARGE_HCI_CMD</label>
  <type>large_hci_cmd_t</type>
  <description_user>
LARGE_HCI_CMD fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LARGE_HCI_EVENT" psid="1450">
  <label>MEMORY_POOL_CONFIG_LARGE_HCI_EVENT</label>
  <type>large_hci_event_t</type>
  <description_user>
LARGE_HCI_EVENT fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_SMALL_HCI_CMD" psid="1451">
  <label>MEMORY_POOL_CONFIG_SMALL_HCI_CMD</label>
  <type>small_hci_cmd_t</type>
  <description_user>
SMALL_HCI_CMD fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_SMALL_HCI_EVENT" psid="1452">
  <label>MEMORY_POOL_CONFIG_SMALL_HCI_EVENT</label>
  <type>small_hci_event_t</type>
  <description_user>
SMALL_HCI_EVENT fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LMP_TX" psid="1453">
  <label>MEMORY_POOL_CONFIG_LMP_TX</label>
  <type>lmp_tx_t</type>
  <description_user>
LMP_TX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LMP_RX" psid="1454">
  <label>MEMORY_POOL_CONFIG_LMP_RX</label>
  <type>lmp_rx_t</type>
  <description_user>
LMP_RX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LLM_LMS_COMMAND_STATUS" psid="1455">
  <label>MEMORY_POOL_CONFIG_LLM_LMS_COMMAND_STATUS</label>
  <type>llm_lms_command_status_t</type>
  <description_user>
LLM_LMS_COMMAND_STATUS fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LLM_FILTER" psid="1456">
  <label>MEMORY_POOL_CONFIG_LLM_FILTER</label>
  <type>llm_filter_t</type>
  <description_user>
LLM_FILTER fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LMS_DISPATCH_QUEUE" psid="1457">
  <label>MEMORY_POOL_CONFIG_LMS_DISPATCH_QUEUE</label>
  <type>lms_dispatch_queue_t</type>
  <description_user>
LMS_DISPATCH_QUEUE fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_MEDIUM_HCI_EVENT" psid="1458">
  <label>MEMORY_POOL_CONFIG_MEDIUM_HCI_EVENT</label>
  <type>medium_hci_event_t</type>
  <description_user>
MEDIUM_HCI_EVENT fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_DBG_LOGMSG" psid="1459">
  <label>MEMORY_POOL_CONFIG_DBG_LOGMSG</label>
  <type>dbg_logmsg_t</type>
  <description_user>
DBG_LOGMSG fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_ANT_CMD" psid="1460">
  <label>MEMORY_POOL_CONFIG_ANT_CMD</label>
  <type>ant_cmd_t</type>
  <description_user>
ANT_CMD fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_ANT_EVENT" psid="1461">
  <label>MEMORY_POOL_CONFIG_ANT_EVENT</label>
  <type>ant_event_t</type>
  <description_user>
ANT_EVENT fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_ANT_DATA_FROM_HOST" psid="1462">
  <label>MEMORY_POOL_CONFIG_ANT_DATA_FROM_HOST</label>
  <type>ant_data_from_host_t</type>
  <description_user>
ANT_DATA_FROM_HOST fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_ANT_DATA_TO_HOST" psid="1463">
  <label>MEMORY_POOL_CONFIG_ANT_DATA_TO_HOST</label>
  <type>ant_data_to_host_t</type>
  <description_user>
ANT_DATA_TO_HOST fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_DBG_LOG_SMALL" psid="1464">
  <label>MEMORY_POOL_CONFIG_DBG_LOG_SMALL</label>
  <type>dbg_log_small_t</type>
  <description_user>
DBG_LOG_SMALL fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_DBG_LOG_VERY_LARGE" psid="1465">
  <label>MEMORY_POOL_CONFIG_DBG_LOG_VERY_LARGE</label>
  <type>dbg_log_very_large_t</type>
  <description_user>
DBG_LOG_VERY_LARGE fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_PRHL_POWER_EVENT" psid="1466">
  <label>MEMORY_POOL_CONFIG_PRHL_POWER_EVENT</label>
  <type>prhl_power_event_t</type>
  <description_user>
PRHL_POWER_EVENT fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_DBG_LOG_SLCBUF" psid="1467">
  <label>MEMORY_POOL_CONFIG_DBG_LOG_SLCBUF</label>
  <type>dbg_log_slcbuf_t</type>
  <description_user>
DBG_LOG_SLCBUF fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_DBG_LOG_MCIBUF" psid="1468">
  <label>MEMORY_POOL_CONFIG_DBG_LOG_MCIBUF</label>
  <type>dbg_log_mcibuf_t</type>
  <description_user>
DBG_LOG_MCIBUF fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_DBG_LOG_MWSBUF" psid="1469">
  <label>MEMORY_POOL_CONFIG_DBG_LOG_MWSBUF</label>
  <type>dbg_log_mwsbuf_t</type>
  <description_user>
DBG_LOG_MWSBUF fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_RX_NONRT_OFFLOAD" psid="1470">
  <label>MEMORY_POOL_CONFIG_RX_NONRT_OFFLOAD</label>
  <type>rx_nonrt_offload_t</type>
  <description_user>
RX_NONRT_OFFLOAD fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_MCI_MSG" psid="1471">
  <label>MEMORY_POOL_CONFIG_MCI_MSG</label>
  <type>mci_msg_t</type>
  <description_user>
MCI_MSG fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LLM_SCO_CONN" psid="1472">
  <label>MEMORY_POOL_CONFIG_LLM_SCO_CONN</label>
  <type>llm_sco_conn_t</type>
  <description_user>
LLM_SCO_CONN fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LLM_PICONET" psid="1473">
  <label>MEMORY_POOL_CONFIG_LLM_PICONET</label>
  <type>llm_piconet_t</type>
  <description_user>
LLM_PICONET fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LLM_CONN" psid="1474">
  <label>MEMORY_POOL_CONFIG_LLM_CONN</label>
  <type>llm_conn_t</type>
  <description_user>
LLM_CONN fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_WIP_DBG_LOG_EVENT" psid="1475">
  <label>MEMORY_POOL_CONFIG_WIP_DBG_LOG_EVENT</label>
  <type>wip_dbg_log_event_t</type>
  <description_user>
WIP_DBG_LOG_EVENT fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_ESTACK_TMR" psid="1476">
  <label>MEMORY_POOL_CONFIG_ESTACK_TMR</label>
  <type>estack_tmr_t</type>
  <description_user>
ESTACK_TMR fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_HCI_DATA_TX" psid="1477">
  <label>MEMORY_POOL_CONFIG_HCI_DATA_TX</label>
  <type>hci_data_tx_t</type>
  <description_user>
HCI_DATA_TX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: The size of each Tx buffer, in bytes (Default: 1036 (0x408)). The ACL_U Isochronous Flush mechanism clock tags each Tx HCI data packet. This allocation needs to account 4 bytes for this clock tag.  Note:  The BB Tx mechanism builds baseband ACL packets by concatenating up to three HCI Tx packets. If the specified Tx packet size is to small ( &lt;117 bytes BR, &lt;345 bytes EDR) smaller BT packets will be used to Tx the data.
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_HCI_DATA_RX" psid="1478">
  <label>MEMORY_POOL_CONFIG_HCI_DATA_RX</label>
  <type>hci_data_rx_t</type>
  <description_user>
HCI_DATA_RX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: The size of each Rx buffer, in bytes (Default: 372 (0x174)). Note: The baseband Rx mechanism expects a minimum Rx packet size of 64 bytes. If a smaller value is specified, ACL data traffic will stall due to insufficient buffering to handle an incomming  BT Rx ACL packet.
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_MCI_SCHED_PREDICT" psid="1479">
  <label>MEMORY_POOL_CONFIG_MCI_SCHED_PREDICT</label>
  <type>mci_sched_predict_t</type>
  <description_user>
MCI_SCHED_PREDICT fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_SENUART_DATA_TX" psid="1480">
  <label>MEMORY_POOL_CONFIG_SENUART_DATA_TX</label>
  <type>senuart_data_tx_t</type>
  <description_user>
SENUART_DATA_TX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_SENUART_DATA_RX" psid="1481">
  <label>MEMORY_POOL_CONFIG_SENUART_DATA_RX</label>
  <type>senuart_data_rx_t</type>
  <description_user>
SENUART_DATA_RX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_HCI_LE_DATA_TX" psid="1482">
  <label>MEMORY_POOL_CONFIG_HCI_LE_DATA_TX</label>
  <type>hci_le_data_tx_t</type>
  <description_user>
HCI_LE_DATA_TX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_SCO_CREATE_MSG" psid="1483">
  <label>MEMORY_POOL_CONFIG_SCO_CREATE_MSG</label>
  <type>sco_create_msg_t</type>
  <description_user>
SCO_CREATE_MSG fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_ACCMD" psid="1484">
  <label>MEMORY_POOL_CONFIG_ACCMD</label>
  <type>accmd_t</type>
  <description_user>
ACCMD fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_BCCMD" psid="1485">
  <label>MEMORY_POOL_CONFIG_BCCMD</label>
  <type>bccmd_t</type>
  <description_user>
BCCMD fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LLM_LE_DEFERRED_CMD_QUEUE" psid="1486">
  <label>MEMORY_POOL_CONFIG_LLM_LE_DEFERRED_CMD_QUEUE</label>
  <type>llm_le_deferred_cmd_queue_t</type>
  <description_user>
LLM_LE_DEFERRED_CMD_QUEUE fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_LE_LONG_CTRL_TX" psid="1487">
  <label>MEMORY_POOL_CONFIG_LE_LONG_CTRL_TX</label>
  <type>le_long_ctrl_tx_t</type>
  <description_user>
LE_LONG_CTRL_TX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_VOICE_AUDIO_LOG_BUFFER" psid="1488">
  <label>MEMORY_POOL_CONFIG_VOICE_AUDIO_LOG_BUFFER</label>
  <type>voice_audio_log_buffer_t</type>
  <description_user>
VOICE_AUDIO_LOG_BUFFER fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_A2DP_SINK_MEDIA" psid="1489">
  <label>MEMORY_POOL_CONFIG_A2DP_SINK_MEDIA</label>
  <type>a2dp_sink_media_t</type>
  <description_user>
A2DP_SINK_MEDIA fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: 
block size: 
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_BCAUD_EC_SEGMENT_POOL" psid="1490">
  <label>MEMORY_POOL_CONFIG_BCAUD_EC_SEGMENT_POOL</label>
  <type>bcaud_ec_segment_pool_t</type>
  <description_user>
BCAUD_EC_SEGMENT_POOL fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: EC(2,5) creates 5 segments in one go. max vlaue is set to 10 to hold max 2 set of EC coded segments
block size: Max size = max data size of 2DH5 packet + 3(EC Header)
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_HCI_SCO_TX" psid="1491">
  <label>MEMORY_POOL_CONFIG_HCI_SCO_TX</label>
  <type>hci_sco_tx_t</type>
  <description_user>
HCI_SCO_TX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: Total number of HCI SCO Tx buffers.
block size: Size of each HCI SCO TX buffer. 240-byte payload + 4-byte SCO header.
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_HCI_SCO_RX" psid="1492">
  <label>MEMORY_POOL_CONFIG_HCI_SCO_RX</label>
  <type>hci_sco_rx_t</type>
  <description_user>
HCI_SCO_RX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: Total number of HCI SCO Rx buffers.
block size: Size of each HCI SCO RX buffer. 240-byte payload + 4-byte SCO header.
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_HCI_ISO_TX" psid="1493">
  <label>MEMORY_POOL_CONFIG_HCI_ISO_TX</label>
  <type>hci_iso_tx_t</type>
  <description_user>
HCI_ISO_TX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: Total number of HCI ISO Tx buffers.
block size: Size of each HCI ISO TX buffer. 5 bytes for the ISO header.
  </description_user>
</config_element>

<config_element name="MEMORY_POOL_CONFIG_HCI_ISO_RX" psid="1494">
  <label>MEMORY_POOL_CONFIG_HCI_ISO_RX</label>
  <type>hci_iso_rx_t</type>
  <description_user>
HCI_ISO_RX fields:

block config: bitfield:
section: 
prealloc: 
NVMSection: 

max count: Total number of HCI ISO Rx buffers.
block size: Size of each HCI ISO RX buffer. 5 bytes for the ISO header.
  </description_user>
</config_element>

<config_element name="SYSTEM_MEMORY_CONFIG_TASK_STACK_SIZES" psid="1496">
  <label>SYSTEM_MEMORY_CONFIG_TASK_STACK_SIZES</label>
  <type>uint16</type>
  <array_length_min>5</array_length_min>
  <array_length_max>5</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="SYSTEM_MEMORY_CONFIG_STACK_ALLOC_SECTION" psid="1497">
  <label>SYSTEM_MEMORY_CONFIG_STACK_ALLOC_SECTION</label>
  <type>stack_alloc_section_t</type>
</config_element>

<config_element name="COEX_SPTA_CONFIGURATION_COEX_SPTA_CONFIGURATION_FLAGS" psid="1498">
  <label>COEX_SPTA_CONFIGURATION_COEX_SPTA_CONFIGURATION_FLAGS</label>
  <type>coex_spta_configuration_coex_spta_configuration_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="COEX_SPTA_CONFIGURATION_PRIORITY_WINDOW_TIMER" psid="1499">
  <label>COEX_SPTA_CONFIGURATION_PRIORITY_WINDOW_TIMER</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>63</range_max>
  <description_user>
Timer to indicate priority on slave PTA interface before switching to Tx/Rx indication.
  </description_user>
</config_element>

<config_element name="COEX_SPTA_CONFIGURATION_PRIORITY_THRESHOLD" psid="1500">
  <label>COEX_SPTA_CONFIGURATION_PRIORITY_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
8-bit priority threshold to determine high/low priority on slave PTA interface. PP request is considered high priority if its priority value is above this threshold; otherwise, it would be low priority.
  </description_user>
</config_element>

<config_element name="SYNC_LINK_CONTROL_INTERVAL_RANGE" psid="1501">
  <label>SYNC_LINK_CONTROL_INTERVAL_RANGE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
This is the final range (in frames) to be adjusted of MinInterval and MaxInterval. 800 is 1s.
  </description_user>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_DBM_GOLDEN_LOWER" psid="1502">
  <label>RM_GAIN_FACTOR_TABLE_DBM_GOLDEN_LOWER</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Golden Range lower threshold in dBm
  </description_user>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_DBM_GOLDEN_UPPER" psid="1503">
  <label>RM_GAIN_FACTOR_TABLE_DBM_GOLDEN_UPPER</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Golden Range upper threshold in dBm
  </description_user>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_DBM_EDR_ACL_CQDDR" psid="1504">
  <label>RM_GAIN_FACTOR_TABLE_DBM_EDR_ACL_CQDDR</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
EDR ACL CQDDR Switching Threashold in dBM (default -78)
  </description_user>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_RESERVED_0" psid="1505">
  <label>RM_GAIN_FACTOR_TABLE_RESERVED_0</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_XLNAFACTORSX256" psid="1506">
  <label>RM_GAIN_FACTOR_TABLE_XLNAFACTORSX256</label>
  <type>uint16</type>
  <array_length_min>11</array_length_min>
  <array_length_max>11</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_XLNADISABLEDFACTORX256" psid="1507">
  <label>RM_GAIN_FACTOR_TABLE_XLNADISABLEDFACTORX256</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
XLNA factor when xlna is disabled premultiplied by 256
  </description_user>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_GAINFACTORSX16" psid="1508">
  <label>RM_GAIN_FACTOR_TABLE_GAINFACTORSX16</label>
  <type>uint16</type>
  <array_length_min>8</array_length_min>
  <array_length_max>8</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_LOWTOHIGHGAINFACTOR" psid="1509">
  <label>RM_GAIN_FACTOR_TABLE_LOWTOHIGHGAINFACTOR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Obsoleted for Rome. Used to adjust RM RSSI to RSSI_raw if in low gain = 10^(37/20)
  </description_user>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_NOMINALTOHIGHGAINFACTOR" psid="1510">
  <label>RM_GAIN_FACTOR_TABLE_NOMINALTOHIGHGAINFACTOR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Obsoleted for Rome. Used to adjust RM RSSI to RSSI_raw if in nominal gain = 10^(16/20)
  </description_user>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_RSSIGAINFACTOR" psid="1511">
  <label>RM_GAIN_FACTOR_TABLE_RSSIGAINFACTOR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
used to convert RSSI_raw to dBm
  </description_user>
</config_element>

<config_element name="RM_GAIN_FACTOR_TABLE_RSSI_CALCULATIONS" psid="1512">
  <label>RM_GAIN_FACTOR_TABLE_RSSI_CALCULATIONS</label>
  <type>rssi_calculations_t</type>
</config_element>

<config_element name="CORRELATOR_THRESHOLD_BR_EDR_DEFAULT" psid="1513">
  <label>CORRELATOR_THRESHOLD_BR_EDR_DEFAULT</label>
  <type>correlator_threshold_br_edr_default_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="CORRELATOR_THRESHOLD_LE_1MBPS_DEFAULT" psid="1514">
  <label>CORRELATOR_THRESHOLD_LE_1MBPS_DEFAULT</label>
  <type>correlator_threshold_le_1mbps_default_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="CORRELATOR_THRESHOLD_LE_2MBPS_DEFAULT" psid="1515">
  <label>CORRELATOR_THRESHOLD_LE_2MBPS_DEFAULT</label>
  <type>correlator_threshold_le_2mbps_default_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="CORRELATOR_THRESHOLD_ANT_DEFAULT" psid="1516">
  <label>CORRELATOR_THRESHOLD_ANT_DEFAULT</label>
  <type>correlator_threshold_ant_default_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="CORRELATOR_THRESHOLD_BR_EDR_PARAMETERS" psid="1517">
  <label>CORRELATOR_THRESHOLD_BR_EDR_PARAMETERS</label>
  <type>br_edr_parameters_t</type>
  <description_user>
BR EDR Parameters fields:

COS Beta High: 
COS Beta Low: 
COS Beta Combined: 
SIN Beta High: 
SIN Beta Low: 
SIN Beta Combined: 
COS Phase Mismatch: 
Lambda: 
DMin: 
Mismatch Comp: 
  </description_user>
</config_element>

<config_element name="CORRELATOR_THRESHOLD_LE_1MBPS_PARAMETERS" psid="1518">
  <label>CORRELATOR_THRESHOLD_LE_1MBPS_PARAMETERS</label>
  <type>le_1mbps_parameters_t</type>
  <description_user>
LE 1Mbps Parameters fields:

COS Beta High: 
COS Beta Low: 
COS Beta Combined: 
SIN Beta High: 
SIN Beta Low: 
SIN Beta Combined: 
COS Phase Mismatch: 
Lambda: 
DMin: 
Mismatch Comp: 
  </description_user>
</config_element>

<config_element name="CORRELATOR_THRESHOLD_LE_2MBPS_PARAMETERS" psid="1519">
  <label>CORRELATOR_THRESHOLD_LE_2MBPS_PARAMETERS</label>
  <type>le_2mbps_parameters_t</type>
  <description_user>
LE 2Mbps Parameters fields:

COS Beta High: 
COS Beta Low: 
COS Beta Combined: 
SIN Beta High: 
SIN Beta Low: 
SIN Beta Combined: 
COS Phase Mismatch: 
Lambda: 
DMin: 
Mismatch Comp: 
  </description_user>
</config_element>

<config_element name="CORRELATOR_THRESHOLD_ANT_PARAMETERS" psid="1520">
  <label>CORRELATOR_THRESHOLD_ANT_PARAMETERS</label>
  <type>ant_parameters_t</type>
  <description_user>
ANT Parameters fields:

COS Beta High: 
COS Beta Low: 
COS Beta Combined: 
SIN Beta High: 
SIN Beta Low: 
SIN Beta Combined: 
COS Phase Mismatch: 
Lambda: 
DMin: 
Mismatch Comp: 
  </description_user>
</config_element>

<config_element name="CORRELATOR_THRESHOLD_THRESHOLD_CONTROL" psid="1521">
  <label>CORRELATOR_THRESHOLD_THRESHOLD_CONTROL</label>
  <type>correlator_threshold_threshold_control_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="LE_GOLDEN_RANGE_DBM_GOLDEN_LOWER_1M" psid="1522">
  <label>LE_GOLDEN_RANGE_DBM_GOLDEN_LOWER_1M</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>127</range_max>
  <description_user>
Golden Range lower threshold in dBm for LE1M.
  </description_user>
</config_element>

<config_element name="LE_GOLDEN_RANGE_DBM_GOLDEN_UPPER_1M" psid="1523">
  <label>LE_GOLDEN_RANGE_DBM_GOLDEN_UPPER_1M</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>127</range_max>
  <description_user>
Golden Range upper threshold in dBm for LE1M.
  </description_user>
</config_element>

<config_element name="LE_GOLDEN_RANGE_DBM_GOLDEN_LOWER_2M" psid="1524">
  <label>LE_GOLDEN_RANGE_DBM_GOLDEN_LOWER_2M</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>127</range_max>
  <description_user>
Golden Range lower threshold in dBm for LE2M.
  </description_user>
</config_element>

<config_element name="LE_GOLDEN_RANGE_DBM_GOLDEN_UPPER_2M" psid="1525">
  <label>LE_GOLDEN_RANGE_DBM_GOLDEN_UPPER_2M</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>127</range_max>
  <description_user>
Golden Range upper threshold in dBm for LE2M.
  </description_user>
</config_element>

<config_element name="LE_GOLDEN_RANGE_DBM_GOLDEN_LOWER_CODED" psid="1526">
  <label>LE_GOLDEN_RANGE_DBM_GOLDEN_LOWER_CODED</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>127</range_max>
  <description_user>
Golden Range lower threshold in dBm for LE CODED PHY.
  </description_user>
</config_element>

<config_element name="LE_GOLDEN_RANGE_DBM_GOLDEN_UPPER_CODED" psid="1527">
  <label>LE_GOLDEN_RANGE_DBM_GOLDEN_UPPER_CODED</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>127</range_max>
  <description_user>
Golden Range upper threshold in dBm for LE CODED PHY.
  </description_user>
</config_element>

<config_element name="LE_GOLDEN_RANGE_DBM_GOLDEN_LOWER_LEHS" psid="1528">
  <label>LE_GOLDEN_RANGE_DBM_GOLDEN_LOWER_LEHS</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>127</range_max>
  <description_user>
Golden Range lower threshold in dBm for LEHigh Speed.
  </description_user>
</config_element>

<config_element name="LE_GOLDEN_RANGE_DBM_GOLDEN_UPPER_LEHS" psid="1529">
  <label>LE_GOLDEN_RANGE_DBM_GOLDEN_UPPER_LEHS</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>127</range_max>
  <description_user>
Golden Range upper threshold in dBm for LEHigh Speed.
  </description_user>
</config_element>

<config_element name="RADIO_PP_STATE_CTRL" psid="1530">
  <label>RADIO_PP_STATE_CTRL</label>
  <type>pp_state_ctrl_t</type>
  <description_user>
PP State Ctrl fields:

T_LDO_BIAS_ON: 
T_LDO_BIAS_OFF: 
T_SYNTH_OFF: 
T_TX_SYNTH_TUNE: 
T_TX_RF_ON: 
T_TX_RF_OFF: 
T_RX_SYNTH_TUNE: 
T_RX_FULL_RF_ON: 
T_RX_FULL_RF_OFF: 
T_RX_PRTL_RF_ON: 
T_RX_PRTL_RF_OFF: 
  </description_user>
</config_element>

<config_element name="RADIO_RCU_STATE_CTRL" psid="1531">
  <label>RADIO_RCU_STATE_CTRL</label>
  <type>rcu_state_ctrl_t</type>
  <description_user>
RCU State Ctrl fields:

TX_RF_TURN_OFF_DONE_DELAY: 
TX_SYNTH_OFF_DONE_DELAY: 
TX_BIAS_OFF_DONE_DELAY: 
TX_RF_TURN_ON_DONE_DELAY: 
RX_RF_TURN_OFF_DONE_DELAY: 
RX_SYNTH_OFF_DONE_DELAY: 
RX_BIAS_OFF_DONE_DELAY: 
RX_RF_TURN_ON_DONE_DELAY: 
MODEM_TX_EN_ON_DELAY: 
MODEM_TX_EN_OFF_DELAY: 
MODEM_RX_EN_ON_DELAY: 
MODEM_RX_EN_OFF_DELAY: 
  </description_user>
</config_element>

<config_element name="RADIO_TX_RAMP_CTRL" psid="1532">
  <label>RADIO_TX_RAMP_CTRL</label>
  <type>tx_ramp_ctrl_t</type>
  <description_user>
Tx Ramp Ctrl fields:

T_TX_OFF_DLY: Value in us
T_TX_GRP_DLY: 
T_START_DIG_RAMP_UP: 
ramp_alpha: 
  </description_user>
</config_element>

<config_element name="RADIO_BTC_TX_GUARD_SYNC_LEN" psid="1533">
  <label>RADIO_BTC_TX_GUARD_SYNC_LEN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="RADIO_BTC_PP_DELAY_COMPENSATION" psid="1534">
  <label>RADIO_BTC_PP_DELAY_COMPENSATION</label>
  <type>btc_pp_delay_compensation_t</type>
  <description_user>
BTC PP Delay Compensation fields:

RX_SOF_TSTAMP_OFFSET: 
TX_SOF_TSTAMP_OFFSET: 
RX_EOF_TSTAMP_1M_OFFSET: 
RX_EOF_TSTAMP_2M_OFFSET: 
RX_EOF_TSTAMP_3M_OFFSET: 
RX_EOF_TSTAMP_4M_OFFSET: 
RX_EOF_TSTAMP_6M_OFFSET: 
RX_EOF_TSTAMP_8M_OFFSET: 
TX_EOF_TSTAMP_1M_OFFSET: 
TX_EOF_TSTAMP_2M_OFFSET: 
TX_EOF_TSTAMP_3M_OFFSET: 
TX_EOF_TSTAMP_4M_OFFSET: 
TX_EOF_TSTAMP_6M_OFFSET: 
TX_EOF_TSTAMP_8M_OFFSET: 
SC_SYS_T_WARM_UP: 
SC_TX_SCHED_START_CAL_OFFSET: 
SC_RX_SCHED_START_CAL_OFFSET: 
Reserved1: Padding bytes for alignment
Reserved2: Padding bytes for alignment
  </description_user>
</config_element>

<config_element name="RADIO_BLE_PP_DELAY_COMPENSATION" psid="1535">
  <label>RADIO_BLE_PP_DELAY_COMPENSATION</label>
  <type>ble_pp_delay_compensation_t</type>
  <description_user>
BLE PP Delay Compensation fields:

RX_SOF_TSTAMP_1M_OFFSET: 
RX_SOF_TSTAMP_2M_OFFSET: 
RX_SOF_TSTAMP_LEHS_OFFSET: 
TX_SOF_TSTAMP_1M_OFFSET: 
TX_SOF_TSTAMP_2M_OFFSET: 
TX_SOF_TSTAMP_LEHS_OFFSET: 
RX_EOF_TSTAMP_1M_NO_AOX_OFFSET: 
RX_EOF_TSTAMP_2M_NO_AOX_OFFSET: 
RX_EOF_TSTAMP_LEHS_2M_NO_AOX_OFFSET: 
RX_EOF_TSTAMP_LEHS_3M_NO_AOX_OFFSET: 
RX_EOF_TSTAMP_LEHS_4M_NO_AOX_OFFSET: 
RX_EOF_TSTAMP_LEHS_5M_NO_AOX_OFFSET: 
RX_EOF_TSTAMP_LEHS_6M_NO_AOX_OFFSET: 
SC_SYS_T_WARM_UP: 
SC_RX_SCHED_START_CAL_OFFSET: 
SC_TX_SCHED_START_CAL_OFFSET: 
TX_EOF_TSTAMP_1M_NO_AOX_OFFSET: 
TX_EOF_TSTAMP_2M_NO_AOX_OFFSET: 
TX_EOF_TSTAMP_LEHS_NO_AOX_2M_OFFSET: 
TX_EOF_TSTAMP_LEHS_NO_AOX_3M_OFFSET: 
TX_EOF_TSTAMP_LEHS_NO_AOX_4M_OFFSET: 
TX_EOF_TSTAMP_LEHS_NO_AOX_5M_OFFSET: 
TX_EOF_TSTAMP_LEHS_NO_AOX_6M_OFFSET: 
Reserved1: Padding bytes for alignment
Reserved2: Padding bytes for alignment
TX_IFS_WAIT: 
RX_IFS_WAIT: 
  </description_user>
</config_element>

<config_element name="RADIO_PSU_DEFAULTS" psid="1536">
  <label>RADIO_PSU_DEFAULTS</label>
  <type>psu_defaults_t</type>
  <description_user>
PSU Defaults fields:

BT_ANA_PSU_EN_SEL: 
BT_ANA_PSU_SW_OVR: 
  </description_user>
</config_element>

<config_element name="RADIO_PERIODIC_CAL" psid="1537">
  <label>RADIO_PERIODIC_CAL</label>
  <type>periodic_cal_t</type>
  <description_user>
PERIODIC_CAL fields:

PRIORITY_UPDATE_INTERVAL: Interval in which the periodic calibration dispatch priority shall be updated if preempted by other higher priory tasks. Unit in BT CLK LSB, 312.5 us. Default is 100 ms.
MAX_DURATION: Max duration for which the periodic calibration is allowed to run in a single shot. Unit in BT CLK LSB, 312.5 us.
Reserved1: Padding bytes for alignment
Reserved2: Padding bytes for alignment
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_TX_POWER_TABLE" psid="1539">
  <label>TX_POWER_CTRL_TX_POWER_TABLE</label>
  <type>tx_power_table_t</type>
  <array_length_min>10</array_length_min>
  <array_length_max>10</array_length_max>
  <description_user>
tx_power_table fields:

BR: Attenuation for digital control
EDR: Attenuation for digital control
LE: Attenuation for digital control
QHS: Attenuation for digital control
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="TX_POWER_CTRL_NUM_TX_POWER_TABLE_ENTRY" psid="1540">
  <label>TX_POWER_CTRL_NUM_TX_POWER_TABLE_ENTRY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>10</range_max>
  <description_user>
Number of power table entries. Highest value is the total number number of entries including the reserved ones. Default value is actual valid power table entries.
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_DEFAULT_TX_POWER_DBM" psid="1541">
  <label>TX_POWER_CTRL_DEFAULT_TX_POWER_DBM</label>
  <type>int8</type>
  <range_min>-20</range_min>
  <range_max>20</range_max>
  <description_user>
Default standard power in dBm
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_MAX_GFSK_POWER_DBM" psid="1542">
  <label>TX_POWER_CTRL_MAX_GFSK_POWER_DBM</label>
  <type>int8</type>
  <range_min>-20</range_min>
  <range_max>20</range_max>
  <description_user>
Max GFSK power
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_MIN_GFSK_POWER_DBM" psid="1543">
  <label>TX_POWER_CTRL_MIN_GFSK_POWER_DBM</label>
  <type>int8</type>
  <range_min>-20</range_min>
  <range_max>20</range_max>
  <description_user>
This value is used to report the GFSK Min Power
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_MAX_DQPSK_POWER_DBM" psid="1544">
  <label>TX_POWER_CTRL_MAX_DQPSK_POWER_DBM</label>
  <type>int8</type>
  <range_min>-20</range_min>
  <range_max>20</range_max>
  <description_user>
Max EDR2 power in dBm
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_MIN_DQPSK_POWER_DBM" psid="1545">
  <label>TX_POWER_CTRL_MIN_DQPSK_POWER_DBM</label>
  <type>int8</type>
  <range_min>-20</range_min>
  <range_max>20</range_max>
  <description_user>
Min EDR2 power in dBm
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_MAX_8PSK_POWER_DBM" psid="1546">
  <label>TX_POWER_CTRL_MAX_8PSK_POWER_DBM</label>
  <type>int8</type>
  <range_min>-20</range_min>
  <range_max>20</range_max>
  <description_user>
Max EDR3 power in dBm
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_MIN_8PSK_POWER_DBM" psid="1547">
  <label>TX_POWER_CTRL_MIN_8PSK_POWER_DBM</label>
  <type>int8</type>
  <range_min>-20</range_min>
  <range_max>20</range_max>
  <description_user>
Min EDR3 power in dBm
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_BROADCAST_POWER_DBM" psid="1548">
  <label>TX_POWER_CTRL_BROADCAST_POWER_DBM</label>
  <type>int8</type>
  <range_min>-20</range_min>
  <range_max>20</range_max>
  <description_user>
Broadcast power in dBm
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_CLASS2_FALLBACK_POWER_DBM" psid="1549">
  <label>TX_POWER_CTRL_CLASS2_FALLBACK_POWER_DBM</label>
  <type>int8</type>
  <range_min>-20</range_min>
  <range_max>20</range_max>
  <description_user>
Class2 fallback power in dBm
  </description_user>
</config_element>

<config_element name="TX_POWER_CTRL_ENABLE_PKG_VARIANT" psid="1550">
  <label>TX_POWER_CTRL_ENABLE_PKG_VARIANT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
When set to '1', the package variant taken from the eFuses is used to auto select the Tx power table based on the package in use. When doing a ROM patch of the power table ensure that this key is set to '0' to prevent the patched power table being overridden by the package variant version.
  </description_user>
</config_element>

<config_element name="RADIO_CAL_COMMON" psid="1551">
  <label>RADIO_CAL_COMMON</label>
  <type>common_params_t</type>
  <description_user>
common_params fields:

channel: 
am_cals_agc_index: AGC gain table index to be used during AMAM and AMPM calibrations.
psu_mode: 
Reserved1: 
cals_enabled: bitfield:
am_cal_am: 
am_cal_pm: Enable AMPM Cal
mdac_cal_k1: 
mdac_cal_k2: 
mdac_cal_curve: 
mdac_cal_lut1: 
mdac_cal_lut2: 
mdac_cal_lut3: 
cdac_cal_4g8: 
cdac_cal_3g6: 
am_cal_path_delay: 
vco_cal_amp: 
rx_cal_rssi_det: 
ldo_cal_offset: 
power_cal: 
mdac_cal_1p5: 
rx_cal_ip2: 
loopback_lut_attn: This when set, will enable the calibration of  the loopback attenuation setting during the amam and ampm calibraitons.

  </description_user>
</config_element>

<config_element name="RADIO_CAL_VCO_AMPL" psid="1552">
  <label>RADIO_CAL_VCO_AMPL</label>
  <type>vco_ampl_cal_params_t</type>
  <description_user>
vco_ampl_cal_params fields:

lo_ref_bias: 
target_ampl_mV_rx2x: 
target_ampl_mV_tx1p5x: 
  </description_user>
</config_element>

<config_element name="RADIO_CAL_LDO_OFFSET" psid="1553">
  <label>RADIO_CAL_LDO_OFFSET</label>
  <type>ldo_offset_cal_params_t</type>
  <description_user>
ldo_offset_cal_params fields:

meas_dac: 
ctap_min: 
ctap_max: 
  </description_user>
</config_element>

<config_element name="RADIO_CAL_AM_DELAY" psid="1554">
  <label>RADIO_CAL_AM_DELAY</label>
  <type>am_delay_cal_params_t</type>
  <description_user>
am_delay_cal_params fields:

tx_atten: 
servo_gain_min: 
servo_gain_max: 
Reserved1: Padding bytes for alignment
wait_min_gain: 
wait_max_gain: 
comparator_delay: 0.65 Ref clock cycles
delay_adjust: 3.5 in S32.12 format.
offset_high: 
offset_low: 
phase_divisor: 
phase_residue: 
phase_incr: 
am_coeffs: 
  </description_user>
</config_element>

<config_element name="RADIO_CAL_RSSI_DET" psid="1555">
  <label>RADIO_CAL_RSSI_DET</label>
  <type>rssi_det_cal_params_t</type>
  <description_user>
rssi_det_cal_params fields:

temp_delta: 
Reserved1: Padding bytes for alignment
update_margin: 
dac_code_start: 
dac_code_stop: 
gain_index: 
lna_gain: 
Reserved2: Padding bytes for alignment
  </description_user>
</config_element>

<config_element name="RADIO_CAL_MDAC" psid="1556">
  <label>RADIO_CAL_MDAC</label>
  <type>mdac_cal_params_t</type>
  <description_user>
mdac_cal_params fields:

offset: 
freq_meas_time_ms: 
reserve: 
  </description_user>
</config_element>

<config_element name="RADIO_CAL_AMAM" psid="1557">
  <label>RADIO_CAL_AMAM</label>
  <type>amam_cal_params_t</type>
  <description_user>
amam_cal_params fields:

lut_loopback_attn: 
temp_threshold: 
sweep_loopback_disabled: 
FM_LO: 
n_samples_dc_avg: Number of samples of DC notch output used for averaging.
psrc_mx_itrim: 
n_samples_fm: Number of IQ samples used for FM in bytes. So this value/4 will be the number of words filled with randon data.
  </description_user>
</config_element>

<config_element name="RADIO_CAL_AMPM" psid="1558">
  <label>RADIO_CAL_AMPM</label>
  <type>ampm_cal_params_t</type>
  <description_user>
ampm_cal_params fields:

num_extp_pnts: Number of points to be extrapolated.
compensation_type: 
phase_offset: Shift the computed phase correction to be centered around this value.
dac_sweep: 
Reserved1: 
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_EFUSE_ENABLE" psid="1559">
  <label>OTP_RADIO_DATA_EFUSE_ENABLE</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>4294967295</range_max>
  <description_user>
default group (keep this enabled) 0x800000, ANALOG_AUDIO_HP_CAP_TRIM   0x0001, BT_ADC_OVLD_SET_I          0x0002, BT_ADC_OVLD_VFB_SEL_I      0x0004, BT_BIST_ADC_CODE_1         0x0008, BT_TRIM_VALID              0x0010, BT_ADC_OVLD_SET_Q          0x0020, BT_ADC_OVLD_VFB_SEL_Q      0x0040, BT_BIST_ADC_CODE_2         0x0080, PACKAGE_VARIANT            0x0100, BT_IQ_CAL_PHASE_0          0x0200, BT_IQ_CAL_GAIN_0           0x0400, BT_IQ_CAL_PHASE_1          0x0800, BT_IQ_CAL_GAIN_1           0x1000, BT_IQ_CAL_PHASE_2          0x2000, BT_IQ_CAL_GAIN_2           0x4000, BT_IQ_CAL_PHASE_3          0x8000. BT_IQ_CAL_GAIN_3           0x10000, BT_IQ_CAL_PHASE_4_7        0x20000, BT_IQ_CAL_GAIN_4_7         0x40000,
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_ANALOG_AUDIO_HP_CAP_TRIM" psid="1560">
  <label>OTP_RADIO_DATA_ANALOG_AUDIO_HP_CAP_TRIM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Audio RC Calibration trim bits
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_ADC_OVLD_SET_I" psid="1561">
  <label>OTP_RADIO_DATA_BT_ADC_OVLD_SET_I</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ADC I Overload detection setting selection for SW.
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_ADC_OVLD_VFB_SEL_I" psid="1562">
  <label>OTP_RADIO_DATA_BT_ADC_OVLD_VFB_SEL_I</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ADC I Overload detector offset correction
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_BIST_ADC_CODE_1" psid="1563">
  <label>OTP_RADIO_DATA_BT_BIST_ADC_CODE_1</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
BT BIST ADC Code1 typically measured at at 50 mV
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_TRIM_VALID" psid="1564">
  <label>OTP_RADIO_DATA_BT_TRIM_VALID</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Indicates the BT trim bits are valid
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_ADC_OVLD_SET_Q" psid="1565">
  <label>OTP_RADIO_DATA_BT_ADC_OVLD_SET_Q</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ADC Q Overload detection setting selection for SW.
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_ADC_OVLD_VFB_SEL_Q" psid="1566">
  <label>OTP_RADIO_DATA_BT_ADC_OVLD_VFB_SEL_Q</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ADC Q Overload detector offset correction
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_BIST_ADC_CODE_2" psid="1567">
  <label>OTP_RADIO_DATA_BT_BIST_ADC_CODE_2</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
BT BIST ADC Code2 typically measured at at 1000 mV
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_IQ_CAL_PHASE_0" psid="1568">
  <label>OTP_RADIO_DATA_BT_IQ_CAL_PHASE_0</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
IQ calibration, Phase is represented by Signed 8 bit representation.
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_IQ_CAL_GAIN_0" psid="1569">
  <label>OTP_RADIO_DATA_BT_IQ_CAL_GAIN_0</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
IQ calibration, Gain is represented by Signed 8 bit representation.
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_PACKAGE_VARIANT" psid="1572">
  <label>OTP_RADIO_DATA_PACKAGE_VARIANT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
5140 package variant: 0000 - WBLAM165, Development; 0001 - Reserved; 0010 - WBLAM134, Production; 0011 - WBLAM90, Production; 0100 - WLP94; 0101 - Reserved; 0110 - Reserved; 0111 - Reserved; 1000 - QFN, 8x8, 0.35 mm pitch; 1001 - Reserved; 1010 - Reserved; 1011 - Reserved; 1101 - Reserved; 1110 - Reserved; 1111 - Reserved
  </description_user>
</config_element>

<config_element name="RADIO_TIMINGS_RCU_DYNAMIC_RX_CONTROL" psid="1573">
  <label>RADIO_TIMINGS_RCU_DYNAMIC_RX_CONTROL</label>
  <type>rcu_dynamic_rx_control_t</type>
  <array_length_min>18</array_length_min>
  <array_length_max>18</array_length_max>
  <description_user>
RCU Dynamic RX Control fields:

RX Control: 
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="RADIO_TIMINGS_RCU_DYNAMIC_TX_CONTROL" psid="1574">
  <label>RADIO_TIMINGS_RCU_DYNAMIC_TX_CONTROL</label>
  <type>rcu_dynamic_tx_control_t</type>
  <array_length_min>18</array_length_min>
  <array_length_max>18</array_length_max>
  <description_user>
RCU Dynamic TX Control fields:

TX Control: 
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="RADIO_TIMINGS_RCU_DYNAMIC_TXRX_CONTROL" psid="1575">
  <label>RADIO_TIMINGS_RCU_DYNAMIC_TXRX_CONTROL</label>
  <type>rcu_dynamic_txrx_control_t</type>
  <array_length_min>16</array_length_min>
  <array_length_max>16</array_length_max>
  <description_user>
RCU Dynamic TXRX Control fields:

TXRX Control Tx: 
TXRX Control Rx: 
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="RADIO_TIMINGS_RCU_DYNAMIC_TXRX_CONTROL_2" psid="1576">
  <label>RADIO_TIMINGS_RCU_DYNAMIC_TXRX_CONTROL_2</label>
  <type>rcu_dynamic_txrx_control2_t</type>
  <array_length_min>16</array_length_min>
  <array_length_max>16</array_length_max>
  <description_user>
RCU Dynamic TXRX Control2 fields:

TXRX Control Tx: 
TXRX Control Rx: 
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="RADIO_CAL_COMMON_RESULTS" psid="1577">
  <label>RADIO_CAL_COMMON_RESULTS</label>
  <type>common_cal_result_t</type>
  <description_user>
common_cal_result fields:

cal_temp: Temperature at which calibration is done
  </description_user>
</config_element>

<config_element name="RADIO_CAL_CDAC_RESULTS" psid="1578">
  <label>RADIO_CAL_CDAC_RESULTS</label>
  <type>cdac_cal_results_t</type>
  <description_user>
cdac_cal_results fields:

cdac_lut_rx: 
cdac_lut_tx: 
  </description_user>
</config_element>

<config_element name="RADIO_CAL_VCO_AMP_RESULTS" psid="1579">
  <label>RADIO_CAL_VCO_AMP_RESULTS</label>
  <type>vco_amp_cal_results_t</type>
  <description_user>
vco_amp_cal_results fields:

bias_trim_rx: 
bias_trim_tx: 
ref_trim: 
  </description_user>
</config_element>

<config_element name="RADIO_CAL_LDO_OFFSET_RESULTS" psid="1580">
  <label>RADIO_CAL_LDO_OFFSET_RESULTS</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="RADIO_CAL_AM_DELAY_RESULTS" psid="1581">
  <label>RADIO_CAL_AM_DELAY_RESULTS</label>
  <type>am_delay_cal_results_t</type>
  <description_user>
am_delay_cal_results fields:

mdel: 
p1del: 
p2del: 
frac_delay_coeff: 
mdel_64msps: 
frac_dly_coeff_64msps: 
Reserved1: Padding bytes for alignment
  </description_user>
</config_element>

<config_element name="RADIO_CAL_MDAC_RESULTS" psid="1582">
  <label>RADIO_CAL_MDAC_RESULTS</label>
  <type>mdac_cal_results_t</type>
  <description_user>
mdac_cal_results fields:

k1: 
k2: 
lut1: 
lut2: 
lut3: 
curve: 
  </description_user>
</config_element>

<config_element name="RADIO_CAL_RSSI_DET_RESULTS" psid="1583">
  <label>RADIO_CAL_RSSI_DET_RESULTS</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="RADIO_CAL_AMAM_RESULTS" psid="1584">
  <label>RADIO_CAL_AMAM_RESULTS</label>
  <type>amam_cal_results_t</type>
  <description_user>
amam_cal_results fields:

num_atten: 
Reserve: 
comp_table: 
  </description_user>
</config_element>

<config_element name="RADIO_CAL_AMPM_RESULTS" psid="1585">
  <label>RADIO_CAL_AMPM_RESULTS</label>
  <type>ampm_cal_results_t</type>
  <description_user>
ampm_cal_results fields:

ampm_comp: 
  </description_user>
</config_element>

<config_element name="RADIO_TEMP_COMP_POWER_TABLE_N_ROWS" psid="1586">
  <label>RADIO_TEMP_COMP_POWER_TABLE_N_ROWS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Number of rows of the Tx power table to apply temperature compensation too
  </description_user>
</config_element>

<config_element name="RADIO_TEMP_COMP_BR_LUT" psid="1587">
  <label>RADIO_TEMP_COMP_BR_LUT</label>
  <type>temp_comp_t</type>
  <array_length_min>8</array_length_min>
  <array_length_max>8</array_length_max>
  <description_user>
temp_comp fields:

absolute: 
internal: Internal power reduction factor, in 1/16ths of dBm
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="RADIO_TEMP_COMP_EDR_LUT" psid="1588">
  <label>RADIO_TEMP_COMP_EDR_LUT</label>
  <type>edr_temp_comp_t</type>
  <array_length_min>8</array_length_min>
  <array_length_max>8</array_length_max>
  <description_user>
edr_temp_comp fields:

absolute: 
internal: Internal power reduction factor, in 1/16ths of dBm
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="RADIO_TEMP_COMP_LE_LUT" psid="1589">
  <label>RADIO_TEMP_COMP_LE_LUT</label>
  <type>le_temp_lut_t</type>
  <array_length_min>8</array_length_min>
  <array_length_max>8</array_length_max>
  <description_user>
le_temp_lut fields:

absolute: 
internal: 
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="RADIO_TEMP_COMP_QHS_LUT" psid="1590">
  <label>RADIO_TEMP_COMP_QHS_LUT</label>
  <type>qhs_temp_lut_t</type>
  <array_length_min>8</array_length_min>
  <array_length_max>8</array_length_max>
  <description_user>
qhs_temp_lut fields:

absolute: 
internal: 
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="RADIO_CAL_DPDV" psid="1591">
  <label>RADIO_CAL_DPDV</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Slope of power vs voltage
  </description_user>
</config_element>

<config_element name="RADIO_CAL_NOMINAL" psid="1592">
  <label>RADIO_CAL_NOMINAL</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Nominal temperature in degrees celsius
  </description_user>
</config_element>

<config_element name="RADIO_CAL_TARGET" psid="1593">
  <label>RADIO_CAL_TARGET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Target voltage reading during boot-time process power calibration when booted at the 'nominal' temperature
  </description_user>
</config_element>

<config_element name="RADIO_CAL_DEFAULT_COMP" psid="1594">
  <label>RADIO_CAL_DEFAULT_COMP</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
Default value to use for process compensation when power calibration is disabled
  </description_user>
</config_element>

<config_element name="RADIO_CAL_POWER_DOWN" psid="1595">
  <label>RADIO_CAL_POWER_DOWN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Only adjust power downwards, not up?
  </description_user>
</config_element>

<config_element name="RADIO_CAL_DTDP_LOWER" psid="1596">
  <label>RADIO_CAL_DTDP_LOWER</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
dTemp/dPower lower bound
  </description_user>
</config_element>

<config_element name="RADIO_CAL_DTDP_UPPER" psid="1597">
  <label>RADIO_CAL_DTDP_UPPER</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
dTemp/dPower upper bound
  </description_user>
</config_element>

<config_element name="DEFAULT_SETTINGS" psid="1598">
  <label>DEFAULT_SETTINGS</label>
  <type>default_voice_settings_default_settings_t</type>
  <description_user>
This defines the default voice settings to use when initiating SCO connections. The parameters entered here have a lower priority than any settings written via the HCI Write_Voice_Settings command.
  </description_user>
</config_element>

<config_element name="VOICE_OPTIONS_FLAGS" psid="1600">
  <label>VOICE_OPTIONS_FLAGS</label>
  <type>options_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_ACL_MIRROR_TIMESLICE" psid="1601">
  <label>SCHEDULER_CONTROL_ACL_MIRROR_TIMESLICE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time slice (In Frames) for Slave ACL when TWM ACL reliable Mirroring.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_ACL_MIRROR_TIMESLICE_EXTN" psid="1602">
  <label>SCHEDULER_CONTROL_ACL_MIRROR_TIMESLICE_EXTN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ACL Slave time slice extension (in Frames) after first sync with Master when TWM ACL reliable Mirroring. Setting to zero disables the time slice extension feature.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_ACL_RELAY_TIMESLICE" psid="1603">
  <label>SCHEDULER_CONTROL_ACL_RELAY_TIMESLICE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time slice (In Frames) for Master of TWM ACL relay piconet.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_ACL_RELAY_CRITICAL" psid="1604">
  <label>SCHEDULER_CONTROL_ACL_RELAY_CRITICAL</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for ACL_RELAY_CRITICAL
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_ACL_RELAY_HIGH" psid="1605">
  <label>SCHEDULER_CONTROL_ACL_RELAY_HIGH</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for ACL_RELAY_HIGH
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_ACL_RELAY_NORMAL" psid="1606">
  <label>SCHEDULER_CONTROL_ACL_RELAY_NORMAL</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots, Deadline for ACL_RELAY_NORMAL
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ACL_RELAY_CRITICAL" psid="1607">
  <label>BB_PRIORITY_ACL_RELAY_CRITICAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ACL Relay Critical Baseband Scheduling Priority, [BB_GROUP=ACL]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ACL_RELAY_HIGH" psid="1608">
  <label>BB_PRIORITY_ACL_RELAY_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ACL Relay High Baseband Scheduling Priority, [BB_GROUP=ACL]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ACL_RELAY_LOW" psid="1609">
  <label>BB_PRIORITY_ACL_RELAY_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ACL Relay Low Baseband Scheduling Priority, [BB_GROUP=ACL]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_ACL_RELAY_IDLE" psid="1610">
  <label>BB_PRIORITY_ACL_RELAY_IDLE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ACL Relay Idle Baseband Scheduling Priority, [BB_GROUP=ACL]
  </description_user>
</config_element>

<config_element name="ACL_RELAY_FRAG_POOL_SIZE" psid="1611">
  <label>ACL_RELAY_FRAG_POOL_SIZE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The size of an ACL Relay fragment in bytes.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_FRAG_POOL_COUNT" psid="1612">
  <label>ACL_RELAY_FRAG_POOL_COUNT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of ACL Relay fragments in the pool.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_POOL_CRITICAL_THRESHOLD" psid="1613">
  <label>ACL_RELAY_POOL_CRITICAL_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of fragments that need to be consumed before the ACL Relay connection has a sync urgency of critical.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_POOL_HIGH_THRESHOLD" psid="1614">
  <label>ACL_RELAY_POOL_HIGH_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of fragments that need to be consumed before the ACL Relay connection has a sync urgency of required.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_CM2CS_RECORD_CRITICAL_THRESHOLD" psid="1615">
  <label>ACL_RELAY_CM2CS_RECORD_CRITICAL_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of bits that need to be consumed in the sync record history before the ACL Relay connection has a sync urgency of critical.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_CM2CS_RECORD_HIGH_THRESHOLD" psid="1616">
  <label>ACL_RELAY_CM2CS_RECORD_HIGH_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of bits that need to be consumed in the sync record history before the ACL Relay connection has a sync urgency of required.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_T_POLL_SYNC" psid="1617">
  <label>ACL_RELAY_T_POLL_SYNC</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The maximum amount of time (in halfslots) that can pass before the connected slave must try to schedule a SYNC packet.
  </description_user>
</config_element>

<config_element name="SCO_AUDIO_ROUTING" psid="1618">
  <label>SCO_AUDIO_ROUTING</label>
  <type>sco_audio_routing_t</type>
  <description_user>
SCO Audio Routing fields:

SCO Audio route: 
Channel: I2S / Codec channel  or slot for PCM
Instance: I2S / PCM instance. Not applicable for Codec
Reserved: Padding bytes for alignment
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_XSCO_RETRAN_BOOST" psid="1619">
  <label>BB_PRIORITY_XSCO_RETRAN_BOOST</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>255</range_max>
  <description_user>
Boosted xSCO retransmit priority, [BB_GROUP=xSCO]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_XSCO_RELAY_HIGH" psid="1620">
  <label>BB_PRIORITY_XSCO_RELAY_HIGH</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>255</range_max>
  <description_user>
Priority of relay slots in TWM feature, [BB_GROUP=xSCO]
  </description_user>
</config_element>

<config_element name="PWR_CFG_NON_AFH_MAX_POWER_LEVEL" psid="1621">
  <label>PWR_CFG_NON_AFH_MAX_POWER_LEVEL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>10</range_max>
  <description_user>
For non-AFH device, maximum allowed power level. This should not be more than Max. AFH Power Level. 0 means no specific restriction for  non-AFH. For ETSI compliant, this value should be 8.
  </description_user>
</config_element>

<config_element name="PWR_CFG_EDR_BACKOFF" psid="1622">
  <label>PWR_CFG_EDR_BACKOFF</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
bits 7:4, DQPSK_BACKOFF, in units of 0.25dB  bits3:0, D8PSK_BACKOFF, in units of 0.25dB
  </description_user>
</config_element>

<config_element name="RADIO_CAL_LOOPBACK_CONFIG" psid="1623">
  <label>RADIO_CAL_LOOPBACK_CONFIG</label>
  <type>loopback_cal_params_t</type>
  <description_user>
loopback_cal_params fields:

amam_cal_attn: 
iq_imb_gain: Value of the gain factor in the IQ imbalance correction to be used in the loopback configuration
iq_imb_phase: Value of the phase correction to be applied for IQ imbalance correction in the loop back configuration.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_MAXIMUMBCAINTERVAL" psid="1624">
  <label>AFH_PARAMS_MAXIMUMBCAINTERVAL</label>
  <type>uint16</type>
  <range_min>600</range_min>
  <range_max>32000</range_max>
  <description_user>
The maximum interval in slots between BCA in low power modes that will be chosen if dynamic BCA interval changes are enabled.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_DISPATCHCOUNT" psid="1625">
  <label>AFH_PARAMS_DISPATCHCOUNT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of low power event intervals between BCA if dynamic BCA interval changes are enabled.
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_SCAN_LOW" psid="1628">
  <label>BB_PRIORITY_LE_SCAN_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Low Baseband Scheduling Priority LE Scans (high bandwidth), [BB_GROUP=BLE SCAN]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_SCAN_NORMAL" psid="1629">
  <label>BB_PRIORITY_LE_SCAN_NORMAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Normal (low bandwidth) Baseband Scheduling Priority, [BB_GROUP=BLE SCAN]
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_MULTI_ACL_OOR_DETECTION_THRESHOLD" psid="1630">
  <label>SCHEDULER_CONTROL_MULTI_ACL_OOR_DETECTION_THRESHOLD</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
OOR detection threshold when there are multi_ACL links. Value in millisecons.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_MAX_LE_SCAN_WINDOW_RATIO_FOR_NORMAL_PRIORITY" psid="1631">
  <label>SCHEDULER_CONTROL_MAX_LE_SCAN_WINDOW_RATIO_FOR_NORMAL_PRIORITY</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>100</range_max>
  <description_user>
Used to set the priority for LE scan dispatch element. Threshold scan window to interval ratio to allow LE scan in normal priority.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_MIN_LE_SCAN_WINDOW_DURATION_FOR_FOCUS" psid="1632">
  <label>SCHEDULER_CONTROL_MIN_LE_SCAN_WINDOW_DURATION_FOR_FOCUS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
This controls the minimum amount of time that LE Scan will remain active once it has gained focus (in slots).
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_ACL_ACTIVE" psid="1633">
  <label>SCHEDULER_CONTROL_ACL_ACTIVE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
In Half Slots,  Deadline for ACL ACTIVE.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_LE_SCAN" psid="1634">
  <label>SCHEDULER_CONTROL_LE_SCAN</label>
  <type>uint16</type>
  <range_min>200</range_min>
  <range_max>32768</range_max>
  <description_user>
Maximum interval between LE Scan gaining focus while a LE scan window is active (in slots).
  </description_user>
</config_element>

<config_element name="SLEEP_CONTROL_HCLK_SCALING" psid="1635">
  <label>SLEEP_CONTROL_HCLK_SCALING</label>
  <type>hclk_scaling_t</type>
</config_element>

<config_element name="SLEEP_CONTROL_EXT_HCLK_SCALING" psid="1638">
  <label>SLEEP_CONTROL_EXT_HCLK_SCALING</label>
  <type>ext_hclk_scaling_t</type>
</config_element>

<config_element name="RTSC_CONTROL_CONFIG" psid="1639">
  <label>RTSC_CONTROL_CONFIG</label>
  <type>config_t</type>
  <description_user>
Config fields:

Num RTSC Mode Buffers: RTSC Buffer here means one instance, which needs three 1K buffer entires in start buffer pointer. Additional 1K buffers each are needed for Weak Bit Mask and last packet received if supported.
Num QBM Mode Buffers: For targets prior to Zealis 3.0, QBM Mode needs single entry in start buffer pointer table for each QBM instance of size 5 times payload size + 8 bytes of metadata. From Zealis 3.0, QBM Mode supports fragmented buffers. Each QBM instance needs 5 buffer pointers entries in the start buffer pointer table. Size of each buffer is payload size + 4 bytes of metadata.
RTSC Config Flags: bitfield:
Enable Common ACL RTSC Instance: Enable Common ACL RTSC Instance
Enable LE ISO RTSC: Enable RTSC for LE ISO. RTSC for LE ISO can be supported only if the RTSC HW supports Weak Bit Mask generation.

RTSC operational mode switch threshold: Number of receive opportunities less than or equal to which Qbm mode is used and above which RTSC mode is used. Setting this NVM tag to zero will ensure RTSC mode is used always and setting it to 255 will ensure Qbm mode is used always.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_CM2CS_PACKETS_CRITICAL_THRESHOLD" psid="1640">
  <label>ACL_RELAY_CM2CS_PACKETS_CRITICAL_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of packets that connected slave need to be queued before the ACL Relay connection has a sync urgency of critical.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_CM2CS_PACKETS_HIGH_THRESHOLD" psid="1641">
  <label>ACL_RELAY_CM2CS_PACKETS_HIGH_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of packets that connected slave need to be queued before the ACL Relay connection has a sync urgency of high.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_CM2CS_DATA_CRITICAL_THRESHOLD" psid="1642">
  <label>ACL_RELAY_CM2CS_DATA_CRITICAL_THRESHOLD</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The size of ACL-U data packets that connected slave need to be queued before the ACL Relay connection has a sync urgency of critical.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_CM2CS_DATA_HIGH_THRESHOLD" psid="1643">
  <label>ACL_RELAY_CM2CS_DATA_HIGH_THRESHOLD</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The size of ACL-U data packets that connected slave need to be queued before the ACL Relay connection has a sync urgency of high.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_MAX_RECONCILIATION_BUFFERS" psid="1644">
  <label>ACL_RELAY_MAX_RECONCILIATION_BUFFERS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Max number of HCI Data RX ACL buffers that can be used for reconciliation purpose.
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_IQ_CAL_PHASE_1" psid="1646">
  <label>OTP_RADIO_DATA_BT_IQ_CAL_PHASE_1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
IQ calibration, Phase is represented by Signed 8 bit representation.
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_IQ_CAL_GAIN_1" psid="1647">
  <label>OTP_RADIO_DATA_BT_IQ_CAL_GAIN_1</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
IQ calibration, Gain is represented by Signed 8 bit representation.
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_IQ_CAL_PHASE_2" psid="1648">
  <label>OTP_RADIO_DATA_BT_IQ_CAL_PHASE_2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_IQ_CAL_GAIN_2" psid="1649">
  <label>OTP_RADIO_DATA_BT_IQ_CAL_GAIN_2</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_IQ_CAL_PHASE_3" psid="1650">
  <label>OTP_RADIO_DATA_BT_IQ_CAL_PHASE_3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_IQ_CAL_GAIN_3" psid="1651">
  <label>OTP_RADIO_DATA_BT_IQ_CAL_GAIN_3</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_IQ_CAL_PHASE_4_7" psid="1652">
  <label>OTP_RADIO_DATA_BT_IQ_CAL_PHASE_4_7</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_IQ_CAL_GAIN_4_7" psid="1653">
  <label>OTP_RADIO_DATA_BT_IQ_CAL_GAIN_4_7</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_STAT_MAX_XSCO_INSTANT_COUNT" psid="1659">
  <label>BT_LOCAL_FEATURES_CONTROL_STAT_MAX_XSCO_INSTANT_COUNT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
if exceed the value, quarter the counter
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_CRITICAL_XSCO_RATIO_THRESHOLD" psid="1660">
  <label>BT_LOCAL_FEATURES_CONTROL_CRITICAL_XSCO_RATIO_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>100</range_max>
  <description_user>
it's bandwidth ratio threshold which critical xsco used. (include reserved + critical retrans). if exceed the threshold, will disallow critical priority for esco retrans
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_FLUSH_ACL_U_BASEDON_BB_NAKS_THRESHOLD" psid="1661">
  <label>BT_LOCAL_FEATURES_CONTROL_FLUSH_ACL_U_BASEDON_BB_NAKS_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Flush BREDR ACL-U packet, once the threshold number of NAKs are received for the ACL-U packet. Zero threshold indicate flush is disabled.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_INQ_SCAN_BACK_OFF_RAND_MASK" psid="1663">
  <label>BT_LOCAL_FEATURES_CONTROL_INQ_SCAN_BACK_OFF_RAND_MASK</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The mask is used to limit the inquiry scan random &quot;aloha&quot; backoff to a multiple of 2. ex. 0x3FF = 0 - 1023 slots. &quot;0&quot; is to disable backoff.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_PHY_PREFERENCE" psid="1664">
  <label>LE_CONNECTION_CONTROL_PHY_PREFERENCE</label>
  <type>phy_preference_t</type>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_EVAL_PER_THRESHOLD_2M_1M" psid="1665">
  <label>LE_CONNECTION_CONTROL_EVAL_PER_THRESHOLD_2M_1M</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>25</range_max>
  <description_user>
If PER is above this and 2LE is in use, phy should switch to 1LE
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_EVAL_PER_THRESHOLD_1M_2M" psid="1666">
  <label>LE_CONNECTION_CONTROL_EVAL_PER_THRESHOLD_1M_2M</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>100</range_max>
  <description_user>
If PER is below this value and the RSSI is above threshold - then link can move to 2LE if supported.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_PHY_SEL_BACKOFF" psid="1667">
  <label>LE_CONNECTION_CONTROL_PHY_SEL_BACKOFF</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
If the phy request is rejected by PEER, then further auto-sel based phy request for the same PHY is avoided for number of auto-sel decision intervals specified here.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_SCHEDULER_LE_CONN_RESERVED_TIME" psid="1668">
  <label>LE_CONNECTION_CONTROL_SCHEDULER_LE_CONN_RESERVED_TIME</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
LE Connection events run the scheduler at the end of the event.This configuration value specifies how many microseconds need to be reserved at the end of the LE CE to allow the scheduler to run.This value is very dependent on the CPU speed..
  </description_user>
</config_element>

<config_element name="QLMP_CONTROL_HOST_MODE" psid="1669">
  <label>QLMP_CONTROL_HOST_MODE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>4</range_max>
  <description_user>
Reserved
  </description_user>
</config_element>

<config_element name="QLMP_CONTROL_UP_RATE_RSSI" psid="1670">
  <label>QLMP_CONTROL_UP_RATE_RSSI</label>
  <type>up_rate_rssi_t</type>
  <description_user>
Up Rate RSSI fields:

Q2: QHS-2 Sensitivity
Q3: QHS-3 Sensitivity
Q4: QHS-4 Sensitivity
Q5: QHS-5 Sensitivity
Q6: QHS-6 Sensitivity
Pad: 
  </description_user>
</config_element>

<config_element name="QLMP_CONTROL_QLMP_NUM_ESCO_RELAY_P_2_S" psid="1671">
  <label>QLMP_CONTROL_QLMP_NUM_ESCO_RELAY_P_2_S</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
This field defined number of relays from Primary to Secondary Earbud for the eSCO packet which Primary has received from the phone.
  </description_user>
</config_element>

<config_element name="QLMP_CONTROL_QLMP_NUM_ESCO_RELAY_S_2_P" psid="1672">
  <label>QLMP_CONTROL_QLMP_NUM_ESCO_RELAY_S_2_P</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
This field defined number of relays from Secondary to Primary Earbud for the eSCO packet which Secondary has received from the phone.
  </description_user>
</config_element>

<config_element name="QLL_CONTROL_ISO_HOST_MODE" psid="1673">
  <label>QLL_CONTROL_ISO_HOST_MODE</label>
  <type>iso_host_mode_t</type>
</config_element>

<config_element name="QLL_CONTROL_DEFAULT_QHS_PHY_FOR_ISO" psid="1674">
  <label>QLL_CONTROL_DEFAULT_QHS_PHY_FOR_ISO</label>
  <type>default_qhs_phy_for_iso_t</type>
</config_element>

<config_element name="COMPATIBILITY_CONTROL" psid="1675">
  <label>COMPATIBILITY_CONTROL</label>
  <type>compatibility_control_compatibility_control_t</type>
  <description_user>
This tag contains the flags to enable/disable features for compatiblity reason or for some tests.
  </description_user>
</config_element>

<config_element name="MAXIMUM_TRANSMIT_POWER_MAX_POUT_IN_0P25DBM" psid="1676">
  <label>MAXIMUM_TRANSMIT_POWER_MAX_POUT_IN_0P25DBM</label>
  <type>int8</type>
  <range_min>-100</range_min>
  <range_max>80</range_max>
  <description_user>
Value in units of 0.25dBm of maximum transmit power level applicable for all Technologies.
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_BCA_MID" psid="1677">
  <label>BB_PRIORITY_BCA_MID</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
It should be a2dp_low +1, [BB_GROUP=BCA]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_CRITICAL_LOW" psid="1678">
  <label>BB_PRIORITY_SNIFF_CRITICAL_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority. Should be higher than A2DP_Critical and lower than xSCO_Reserve, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SNIFF_CRITICAL_HIGH" psid="1679">
  <label>BB_PRIORITY_SNIFF_CRITICAL_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Baseband Scheduling Priority, [BB_GROUP=Sniff]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_SW_MPTA" psid="1680">
  <label>BB_PRIORITY_SW_MPTA</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
S/W MPTA Baseband Scheduling Priority, [BB_GROUP=Misc.]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_AUX_ADV_LEVEL_NORMAL" psid="1681">
  <label>BB_PRIORITY_LE_AUX_ADV_LEVEL_NORMAL</label>
  <type>octet_string</type>
  <range_min>5</range_min>
  <range_max>5</range_max>
</config_element>

<config_element name="BB_PRIORITY_LE_AUX_ADV_LEVEL_LOW" psid="1682">
  <label>BB_PRIORITY_LE_AUX_ADV_LEVEL_LOW</label>
  <type>octet_string</type>
  <range_min>5</range_min>
  <range_max>5</range_max>
</config_element>

<config_element name="SYSTEM_MEMORY_CONFIG_CRITICAL_EVENT_RESERVED_COUNT" psid="1683">
  <label>SYSTEM_MEMORY_CONFIG_CRITICAL_EVENT_RESERVED_COUNT</label>
  <type>critical_event_reserved_count_t</type>
  <description_user>
CRITICAL_EVENT_RESERVED_COUNT fields:

large: Reserved count in Large Event Pool.
medium: Reserved count in Medium Event Pool.
small: Reserved count in Small Event Pool.
reserved: reserved
  </description_user>
</config_element>

<config_element name="SYSTEM_MEMORY_CONFIG_IDLE_STACK_SIZE" psid="1684">
  <label>SYSTEM_MEMORY_CONFIG_IDLE_STACK_SIZE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Idle Task Stack Size (bytes)
  </description_user>
</config_element>

<config_element name="STATISTIC_LE_TX_DUTY_CYCLE" psid="1686">
  <label>STATISTIC_LE_TX_DUTY_CYCLE</label>
  <type>statistic_le_tx_duty_cycle_t</type>
  <description_user>
Statistic LE Tx Duty Cycle

Statistic LE Tx Duty Cycle fields:

Enable: enable the feature: 0: disable, 1: enable
DebugEnable: enable debug log, 0: disable, 1: enable
AnalysisPeriod: Analysis Period in multiples of 1.25ms.
NotifyPeriod: Notify Period in multiples of 1.25ms.
Reserved0: 
Reserved1: 
DutyCycleThreshold: 
  </description_user>
</config_element>

<config_element name="VOICE_OPTIONS_MAX_EDP_NONCORRELATING_BITS_PERCENT" psid="1687">
  <label>VOICE_OPTIONS_MAX_EDP_NONCORRELATING_BITS_PERCENT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>100</range_max>
  <description_user>
Defines the max percentage of non-correlating bits that will still allow an Rx packet to be used in the 3-way vote during Erroneous Data Processing.  If a given packet differs by more than this percentage of bits when XORed with each of the other two packets, then it is discarded and a 2-way voting algorithm is used instead.  Set to 0 to ignore packet correlation which will allow all 3 Rx packets to be used in the vote.  Default=10.
  </description_user>
</config_element>

<config_element name="VS_VOICE_OPTIONS_COMPANY_ID" psid="1688">
  <label>VS_VOICE_OPTIONS_COMPANY_ID</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The Company ID of the supported VS codec.  Default = 0.
  </description_user>
</config_element>

<config_element name="VS_VOICE_OPTIONS_CODEC_ID" psid="1689">
  <label>VS_VOICE_OPTIONS_CODEC_ID</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The Codec ID of the supported VS codec.  Default = 0.
  </description_user>
</config_element>

<config_element name="VS_VOICE_OPTIONS_SAMPLE_RATE" psid="1690">
  <label>VS_VOICE_OPTIONS_SAMPLE_RATE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Sample Rate of the VS codec.  Default = 16000.
  </description_user>
</config_element>

<config_element name="VS_VOICE_OPTIONS_MAX_SAMPLES" psid="1691">
  <label>VS_VOICE_OPTIONS_MAX_SAMPLES</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Maximum number of raw (unencoded) samples per voice interval.  Default=120.
  </description_user>
</config_element>

<config_element name="VS_VOICE_OPTIONS_TOAIR_MAX_ISR_TIME" psid="1692">
  <label>VS_VOICE_OPTIONS_TOAIR_MAX_ISR_TIME</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The max ToAir ISR execution time at 64MHz, in usec, including all possible preemption.
  </description_user>
</config_element>

<config_element name="VS_VOICE_OPTIONS_FROMAIR_MAX_ISR_TIME" psid="1693">
  <label>VS_VOICE_OPTIONS_FROMAIR_MAX_ISR_TIME</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
The max FromAir ISR execution time at 64MHz, in usec, including all possible preemption (including ToAir ISR).
  </description_user>
</config_element>

<config_element name="VS_VOICE_OPTIONS_TRANSPORT" psid="1694">
  <label>VS_VOICE_OPTIONS_TRANSPORT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The bitmask of transports supported for the VS codec.  ACL=BIT0, XSCO=BIT1, CIS=BIT2, BIS=BIT3.  Default = 0.
  </description_user>
</config_element>

<config_element name="BUFFER_PARAMS_XSCO" psid="1695">
  <label>BUFFER_PARAMS_XSCO</label>
  <type>xsco_t</type>
  <description_user>
xSCO fields:

Max SDU Size: Max eSCO SDU size in bytes.  Typically 120 if QHS is supported, else 60.
Max Sample Buf Size: Max eSCO Sample Buffer size in bytes.  Typically 240 if QHS is supported, else 120.
  </description_user>
</config_element>

<config_element name="BUFFER_PARAMS_ISO" psid="1696">
  <label>BUFFER_PARAMS_ISO</label>
  <type>iso_t</type>
  <description_user>
ISO fields:

Max Num Streams: Maximum number of streams per ISO group.  Bidirectional streams count as 1 stream.
Max Num ToAir Streams: Maximum number of ToAir streams per ISO group.  Bidirectional streams count as 1 ToAir stream.
Max Num FromAir Streams: Maximum number of FromAir streams per ISO group.  Bidirectional streams count as 1 FromAir stream.
Reserved: Padding byte
Max SDU Size: 
  </description_user>
</config_element>

<config_element name="HYDRA_AUDIO_ROUTING_ISO_AUDIO_ROUTING_0" psid="1702">
  <label>HYDRA_AUDIO_ROUTING_ISO_AUDIO_ROUTING_0</label>
  <type>iso_audio_routing_0_t</type>
  <description_user>
ISO Audio Routing_0 fields:

ISO Audio route: 
Channel: I2S / Codec channel  or slot for PCM
Instance: I2S / PCM instance. Not applicable for Codec
Coding: 
Flags: 
Sample rate: Sample rate divided by 25
Sample size: 
Reserved1: Padding bytes for alignment
LC3 packet len: 
LC3 buffer size: 
Reserved2: Padding bytes for alignment
Reserved3: Padding bytes for alignment
LC3 ttp latency: 
  </description_user>
</config_element>

<config_element name="HYDRA_AUDIO_ROUTING_ISO_AUDIO_ROUTING_1" psid="1703">
  <label>HYDRA_AUDIO_ROUTING_ISO_AUDIO_ROUTING_1</label>
  <type>iso_audio_routing_1_t</type>
  <description_user>
ISO Audio Routing_1 fields:

ISO Audio route: 
Channel: I2S / Codec channel  or slot for PCM
Instance: I2S / PCM instance. Not applicable for Codec
Coding: 
Flags: 
Sample rate: Sample rate divided by 25
Sample size: 
Reserved1: Padding bytes for alignment
LC3 packet len: 
LC3 buffer size: 
Reserved2: Padding bytes for alignment
Reserved3: Padding bytes for alignment
LC3 ttp latency: 
  </description_user>
</config_element>

<config_element name="HYDRA_AUDIO_ROUTING_ISO_AUDIO_ROUTING_2" psid="1704">
  <label>HYDRA_AUDIO_ROUTING_ISO_AUDIO_ROUTING_2</label>
  <type>iso_audio_routing_2_t</type>
  <description_user>
ISO Audio Routing_2 fields:

ISO Audio route: 
Channel: I2S / Codec channel  or slot for PCM
Instance: I2S / PCM instance. Not applicable for Codec
Coding: 
Flags: 
Sample rate: Sample rate divided by 25
Sample size: 
Reserved1: Padding bytes for alignment
LC3 packet len: 
LC3 buffer size: 
Reserved2: Padding bytes for alignment
Reserved3: Padding bytes for alignment
LC3 ttp latency: 
  </description_user>
</config_element>

<config_element name="HYDRA_AUDIO_ROUTING_ISO_AUDIO_ROUTING_3" psid="1705">
  <label>HYDRA_AUDIO_ROUTING_ISO_AUDIO_ROUTING_3</label>
  <type>iso_audio_routing_3_t</type>
  <description_user>
ISO Audio Routing_3 fields:

ISO Audio route: 
Channel: I2S / Codec channel  or slot for PCM
Instance: I2S / PCM instance. Not applicable for Codec
Coding: 
Flags: 
Sample rate: Sample rate divided by 25
Sample size: 
Reserved1: Padding bytes for alignment
LC3 packet len: 
LC3 buffer size: 
Reserved2: Padding bytes for alignment
Reserved3: Padding bytes for alignment
LC3 ttp latency: 
  </description_user>
</config_element>

<config_element name="LE_ISO_MAX_STREAM_COUNT" psid="1714">
  <label>LE_ISO_MAX_STREAM_COUNT</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>255</range_max>
  <description_user>
The total number of ISO Streams supported across all groups.
  </description_user>
</config_element>

<config_element name="LE_ISO_GIS_OFFSET" psid="1715">
  <label>LE_ISO_GIS_OFFSET</label>
  <type>octet_string</type>
  <range_min>7</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="LE_ISO_CONV_MAX_DURATION_IN_FRAME" psid="1716">
  <label>LE_ISO_CONV_MAX_DURATION_IN_FRAME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Param_Conv: Limit dispatch length in schedule
  </description_user>
</config_element>

<config_element name="LE_ISO_CONV_MAX_DUTY_RATIO" psid="1717">
  <label>LE_ISO_CONV_MAX_DUTY_RATIO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>100</range_max>
  <description_user>
Param_Conv: ratio of Group_delay vs. ISO_interval
  </description_user>
</config_element>

<config_element name="LE_ISO_CONV_MAX_SDU_CNT" psid="1718">
  <label>LE_ISO_CONV_MAX_SDU_CNT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Param_Conv: SDU buffer required on a direction of a stream.
  </description_user>
</config_element>

<config_element name="LE_ISO_TX_INTERVAL_LIMIT" psid="1719">
  <label>LE_ISO_TX_INTERVAL_LIMIT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
To limit SDU/PDU count for n * ISO Interval if not zero. Useful when using internal SDU generator. By default, 6 interval.
  </description_user>
</config_element>

<config_element name="LE_ISO_DEBUG_BUFFER_DEPTH" psid="1720">
  <label>LE_ISO_DEBUG_BUFFER_DEPTH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>50</range_max>
  <description_user>
LE ISO debug buffer array depth. Zero indicates that the debug buffer will not be enabled.
  </description_user>
</config_element>

<config_element name="LE_ISO_FROM_AIR_DELAY" psid="1721">
  <label>LE_ISO_FROM_AIR_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Duration in 10's of usec after group delay before starting FromAir processing.
  </description_user>
</config_element>

<config_element name="BT_CQDDR_EDR_ALGORITHM_CHOICE" psid="1725">
  <label>BT_CQDDR_EDR_ALGORITHM_CHOICE</label>
  <type>edr_algorithm_choice_t</type>
</config_element>

<config_element name="BT_CQDDR_WBER_MODULATION_SHIFTS" psid="1726">
  <label>BT_CQDDR_WBER_MODULATION_SHIFTS</label>
  <type>octet_string</type>
  <range_min>3</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="BT_CQDDR_WBER_FAST_FILTER_SHIFT" psid="1727">
  <label>BT_CQDDR_WBER_FAST_FILTER_SHIFT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>14</range_max>
  <description_user>
Sets the fast filter time constant for the weighted bit error rate algorithm. Must be less than WBER Slow Filter Shift.
  </description_user>
</config_element>

<config_element name="BT_CQDDR_WBER_SLOW_FILTER_SHIFT" psid="1728">
  <label>BT_CQDDR_WBER_SLOW_FILTER_SHIFT</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>15</range_max>
  <description_user>
Sets the slow filter time constant for the weighted bit error rate algorithm. Must be greater than WBER Fast Filter Shift.
  </description_user>
</config_element>

<config_element name="BT_CQDDR_WBER_ESTIMATE_MULTIPLIER" psid="1729">
  <label>BT_CQDDR_WBER_ESTIMATE_MULTIPLIER</label>
  <type>uint16</type>
  <range_min>1</range_min>
  <range_max>65535</range_max>
  <description_user>
Internal scaling factor for all values entering weighted bit error rate algorithm.
  </description_user>
</config_element>

<config_element name="BT_CQDDR_WBER_THRESHOLDS" psid="1730">
  <label>BT_CQDDR_WBER_THRESHOLDS</label>
  <type>wber_thresholds_t</type>
  <description_user>
WBER Thresholds fields:

Switch down 2-DH3: 
Switch down 2-DH5: 
Switch down 3-DH1: 
Switch down 3-DH3: 
Switch down 3-DH5: 
Switch up 2-DH1 low: 
Switch up 2-DH1 high: 
Switch up 2-DH3: 
Switch up 2-DH5: 
Switch up 3-DH1: 
Switch up 3-DH3: 
  </description_user>
</config_element>

<config_element name="EDISON_LO_LOOP_GAIN_HG_TX2X" psid="1731">
  <label>EDISON_LO_LOOP_GAIN_HG_TX2X</label>
  <type>lo_loop_gain_ctrl1_t</type>
  <description_user>
lo_loop_gain_ctrl1 fields:

hg_cp_bias_current_tx2x: 
hg_cp_ibias_tx2x: 
hg_lpf_bw_tx2x: 
  </description_user>
</config_element>

<config_element name="EDISON_LO_LOOP_GAIN_LG_TX2X" psid="1732">
  <label>EDISON_LO_LOOP_GAIN_LG_TX2X</label>
  <type>lo_loop_gain_ctrl2_t</type>
  <description_user>
lo_loop_gain_ctrl2 fields:

lg_cp_bias_current_tx2x: 
lg_cp_ibias_tx2x: 
lg_lpf_bw_tx2x: 
  </description_user>
</config_element>

<config_element name="EDISON_LO_LOOP_GAIN_HG_TX1P5X" psid="1733">
  <label>EDISON_LO_LOOP_GAIN_HG_TX1P5X</label>
  <type>lo_loop_gain_ctrl3_t</type>
  <description_user>
lo_loop_gain_ctrl3 fields:

hg_cp_bias_current_tx1p5x: 
hg_cp_ibias_tx1p5x: 
hg_lpf_bw_tx1p5x: 
  </description_user>
</config_element>

<config_element name="EDISON_LO_LOOP_GAIN_LG_TX1P5X" psid="1734">
  <label>EDISON_LO_LOOP_GAIN_LG_TX1P5X</label>
  <type>lo_loop_gain_ctrl4_t</type>
  <description_user>
lo_loop_gain_ctrl4 fields:

lg_cp_bias_current_tx1p5x: 
lg_cp_ibias_tx1p5x: 
lg_lpf_bw_tx1p5x: 
  </description_user>
</config_element>

<config_element name="EDISON_REF_BIAS_TRIM_TX2X" psid="1735">
  <label>EDISON_REF_BIAS_TRIM_TX2X</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_REF_BIAS_TRIM_TX1P5X" psid="1736">
  <label>EDISON_REF_BIAS_TRIM_TX1P5X</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_REF_BIAS_TRIM_RX_IN" psid="1737">
  <label>EDISON_REF_BIAS_TRIM_RX_IN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_VCO_BIAS_TRIM_TX2X" psid="1738">
  <label>EDISON_VCO_BIAS_TRIM_TX2X</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="EDISON_VCO_BIAS_TRIM_TX1P5X" psid="1739">
  <label>EDISON_VCO_BIAS_TRIM_TX1P5X</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="EDISON_VCO_BIAS_TRIM_RX_IN" psid="1740">
  <label>EDISON_VCO_BIAS_TRIM_RX_IN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="EDISON_VCO_BUFFER_BIAS_TRIM_TX2X" psid="1741">
  <label>EDISON_VCO_BUFFER_BIAS_TRIM_TX2X</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_VCO_BUFFER_BIAS_TRIM_TX1P5X" psid="1742">
  <label>EDISON_VCO_BUFFER_BIAS_TRIM_TX1P5X</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_VCO_BUFFER_BIAS_TRIM" psid="1743">
  <label>EDISON_VCO_BUFFER_BIAS_TRIM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_VCO_BUFFER_SEL_TX2X" psid="1744">
  <label>EDISON_VCO_BUFFER_SEL_TX2X</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="EDISON_VCO_BUFFER_SEL_TX1P5X" psid="1745">
  <label>EDISON_VCO_BUFFER_SEL_TX1P5X</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="EDISON_VCO_BUFFER_SEL_RX_IN" psid="1746">
  <label>EDISON_VCO_BUFFER_SEL_RX_IN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="EDISON_RX_MDM_IF_LOSIDE_EN" psid="1747">
  <label>EDISON_RX_MDM_IF_LOSIDE_EN</label>
  <type>rx_mdm_if_loside_en_t</type>
  <description_user>
RX_MDM_IF_LOSIDE_EN fields:

RX_MDM_IF_LOSIDE_EN_0: 
RX_MDM_IF_LOSIDE_EN_1: 
RX_MDM_IF_LOSIDE_EN_2: 
Reserved_1: 
  </description_user>
</config_element>

<config_element name="EDISON_RX_MDM_SPUR_CHAN_IDX" psid="1748">
  <label>EDISON_RX_MDM_SPUR_CHAN_IDX</label>
  <type>rx_mdm_spur_chan_idx_t</type>
  <description_user>
RX_MDM_SPUR_CHAN_IDX fields:

RX_MDM_SPUR_CHAN_IDX_7_0: 
RX_MDM_SPUR_CHAN_IDX_15_8: 
RX_MDM_SPUR_CHAN_IDX_23_16: 
RX_MDM_SPUR_CHAN_IDX_31_24: 
RX_MDM_SPUR_CHAN_IDX_39_32: 
RX_MDM_SPUR_CHAN_IDX_47_40: 
RX_MDM_SPUR_CHAN_IDX_55_48: 
RX_MDM_SPUR_CHAN_IDX_63_56: 
RX_MDM_SPUR_CHAN_IDX_71_64: 
RX_MDM_SPUR_CHAN_IDX_78_72: 
  </description_user>
</config_element>

<config_element name="EDISON_TXAM_DAC_ITRIM" psid="1749">
  <label>EDISON_TXAM_DAC_ITRIM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="EDISON_TXAM_VOFFSET" psid="1750">
  <label>EDISON_TXAM_VOFFSET</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
</config_element>

<config_element name="EDISON_TX_LDO_FILT1ST_FTRIMB" psid="1751">
  <label>EDISON_TX_LDO_FILT1ST_FTRIMB</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="EDISON_TX_MDM_GFSK_CFG_OPT_FILT_EN" psid="1752">
  <label>EDISON_TX_MDM_GFSK_CFG_OPT_FILT_EN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
</config_element>

<config_element name="EDISON_TX_LDO_TRIMA" psid="1753">
  <label>EDISON_TX_LDO_TRIMA</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>512</range_max>
</config_element>

<config_element name="EDISON_TX_LDO_TRIMB" psid="1754">
  <label>EDISON_TX_LDO_TRIMB</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="EDISON_FE_TX_F0_TUNE" psid="1755">
  <label>EDISON_FE_TX_F0_TUNE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="EDISON_FE_CDAC_BAL_ANT" psid="1756">
  <label>EDISON_FE_CDAC_BAL_ANT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_TX_LUT_ATT" psid="1757">
  <label>EDISON_TX_LUT_ATT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_TX_LDO_ACC_DP" psid="1758">
  <label>EDISON_TX_LDO_ACC_DP</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="EDISON_TX_LDO_ACC_OP" psid="1759">
  <label>EDISON_TX_LDO_ACC_OP</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="EDISON_TXDIG_AMPLITUDE_OFFSET" psid="1760">
  <label>EDISON_TXDIG_AMPLITUDE_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>8192</range_max>
</config_element>

<config_element name="EDISON_AMP_CTRL_OFFSET" psid="1761">
  <label>EDISON_AMP_CTRL_OFFSET</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>8192</range_max>
</config_element>

<config_element name="EDISON_AMP_CTRL_EXP" psid="1762">
  <label>EDISON_AMP_CTRL_EXP</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_AMP_CTRL_MAG" psid="1763">
  <label>EDISON_AMP_CTRL_MAG</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="EDISON_LO_SW_MDAC_CAL_GAIN" psid="1764">
  <label>EDISON_LO_SW_MDAC_CAL_GAIN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="EDISON_TX_ATTEN" psid="1765">
  <label>EDISON_TX_ATTEN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="EDISON_TX_LOBUF_DCTRIM" psid="1766">
  <label>EDISON_TX_LOBUF_DCTRIM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="EDISON_TX_MDM_GFSK_FREQ_SCALE_BREDR" psid="1767">
  <label>EDISON_TX_MDM_GFSK_FREQ_SCALE_BREDR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="EDISON_TX_MDM_PSK_MOD_DELAY" psid="1768">
  <label>EDISON_TX_MDM_PSK_MOD_DELAY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_TX_MDM_PSK_MOD_DELAY_QHS" psid="1769">
  <label>EDISON_TX_MDM_PSK_MOD_DELAY_QHS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_TX_MDM_PSK_ZCA_PRE_DISTORT" psid="1770">
  <label>EDISON_TX_MDM_PSK_ZCA_PRE_DISTORT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="EDISON_TX_MDM_PSK_ZCA_BW" psid="1771">
  <label>EDISON_TX_MDM_PSK_ZCA_BW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>7</range_max>
</config_element>

<config_element name="EDISON_TX_MDM_TX_TRANS_DLY" psid="1772">
  <label>EDISON_TX_MDM_TX_TRANS_DLY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>63</range_max>
</config_element>

<config_element name="EDISON_TX_MDM_GFSK_FREQ_SCALE_LE" psid="1773">
  <label>EDISON_TX_MDM_GFSK_FREQ_SCALE_LE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>15</range_max>
</config_element>

<config_element name="EDISON_TX_MDM_FSK_AMP" psid="1774">
  <label>EDISON_TX_MDM_FSK_AMP</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>4095</range_max>
</config_element>

<config_element name="EDISON_TXAM_FILT_TRIM_LUT" psid="1775">
  <label>EDISON_TXAM_FILT_TRIM_LUT</label>
  <type>octet_string</type>
  <range_min>16</range_min>
  <range_max>16</range_max>
</config_element>

<config_element name="EDISON_GAIN_TABLE" psid="1776">
  <label>EDISON_GAIN_TABLE</label>
  <type>gain_table_t</type>
  <array_length_min>9</array_length_min>
  <array_length_max>9</array_length_max>
  <description_user>
gain_table fields:

RX_LNA_SZ: 
RX_LNA_ATTN: 
RX_LNA_EN_HG: 
PSRC_DLNA: 
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="EDISON_ADC_OVLD_THRESH" psid="1777">
  <label>EDISON_ADC_OVLD_THRESH</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_ADC_DET_MODE_SEL" psid="1778">
  <label>EDISON_ADC_DET_MODE_SEL</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_INQUIRY" psid="1779">
  <label>EDISON_INQUIRY</label>
  <type>inquiry_t</type>
</config_element>

<config_element name="EDISON_INQ_SCAN" psid="1780">
  <label>EDISON_INQ_SCAN</label>
  <type>inq_scan_t</type>
</config_element>

<config_element name="EDISON_ADVERTS" psid="1781">
  <label>EDISON_ADVERTS</label>
  <type>adverts_t</type>
</config_element>

<config_element name="EDISON_LE_SCAN" psid="1782">
  <label>EDISON_LE_SCAN</label>
  <type>le_scan_t</type>
</config_element>

<config_element name="EDISON_BTC_RX_GAIN_HG" psid="1783">
  <label>EDISON_BTC_RX_GAIN_HG</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_BTC_RX_GAIN_LG" psid="1784">
  <label>EDISON_BTC_RX_GAIN_LG</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_1LE_RX_GAIN_HG" psid="1785">
  <label>EDISON_1LE_RX_GAIN_HG</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_1LE_RX_GAIN_LG" psid="1786">
  <label>EDISON_1LE_RX_GAIN_LG</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_2LE_RX_GAIN_HG" psid="1787">
  <label>EDISON_2LE_RX_GAIN_HG</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_2LE_RX_GAIN_LG" psid="1788">
  <label>EDISON_2LE_RX_GAIN_LG</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_LELR_RX_GAIN_HG" psid="1789">
  <label>EDISON_LELR_RX_GAIN_HG</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_LELR_RX_GAIN_LG" psid="1790">
  <label>EDISON_LELR_RX_GAIN_LG</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_QHS_RX_GAIN_HG" psid="1791">
  <label>EDISON_QHS_RX_GAIN_HG</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_QHS_RX_GAIN_LG" psid="1792">
  <label>EDISON_QHS_RX_GAIN_LG</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="EDISON_BTC_RSSI_THRESH" psid="1793">
  <label>EDISON_BTC_RSSI_THRESH</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>0</range_max>
  <description_user>
Signal strength at which the gain is switched from low gain to high gain for BR-EDR links.
  </description_user>
</config_element>

<config_element name="EDISON_1LE_RSSI_THRESH" psid="1794">
  <label>EDISON_1LE_RSSI_THRESH</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>0</range_max>
  <description_user>
Signal strength at which the gain is switched from low gain to high gain for 1Mbps LE links.
  </description_user>
</config_element>

<config_element name="EDISON_2LE_RSSI_THRESH" psid="1795">
  <label>EDISON_2LE_RSSI_THRESH</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>0</range_max>
  <description_user>
Signal strength at which the gain is switched from low gain to high gain for 2Mbps LE links.
  </description_user>
</config_element>

<config_element name="EDISON_LELR_RSSI_THRESH" psid="1796">
  <label>EDISON_LELR_RSSI_THRESH</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>0</range_max>
  <description_user>
Signal strength at which the gain is switched from low gain to high gain for LELR links.
  </description_user>
</config_element>

<config_element name="EDISON_QHS_RSSI_THRESH" psid="1797">
  <label>EDISON_QHS_RSSI_THRESH</label>
  <type>int8</type>
  <range_min>-127</range_min>
  <range_max>0</range_max>
  <description_user>
Signal strength at which the gain is switched from low gain to high gain for QHS links.
  </description_user>
</config_element>

<config_element name="EDISON_ADC_MODE" psid="1798">
  <label>EDISON_ADC_MODE</label>
  <type>adc_mode_t</type>
</config_element>

<config_element name="EDISON_AGC_MAX_GAIN" psid="1799">
  <label>EDISON_AGC_MAX_GAIN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>3</range_max>
  <description_user>
The index of the agc gain table that can be used as the maximum gain for AGC during bandscan.
  </description_user>
</config_element>

<config_element name="EDISON_AGC_VREF" psid="1800">
  <label>EDISON_AGC_VREF</label>
  <type>octet_string</type>
  <range_min>10</range_min>
  <range_max>10</range_max>
</config_element>

<config_element name="EDISON_RSSI_CORRECTION" psid="1801">
  <label>EDISON_RSSI_CORRECTION</label>
  <type>int8</type>
  <range_min>-128</range_min>
  <range_max>127</range_max>
  <description_user>
The RSSI measurement is of the signal strength at the input to the chip rather than at the input to the module i.e. it does account for any attenuation or gain provided by external components such as the antenna or a LNA.
  </description_user>
</config_element>

<config_element name="EDISON_TEMP_MIN" psid="1802">
  <label>EDISON_TEMP_MIN</label>
  <type>int8</type>
  <range_min>-40</range_min>
  <range_max>100</range_max>
  <description_user>
Minimum valid temperature limit
  </description_user>
</config_element>

<config_element name="EDISON_TEMP_MAX" psid="1803">
  <label>EDISON_TEMP_MAX</label>
  <type>int8</type>
  <range_min>-40</range_min>
  <range_max>100</range_max>
  <description_user>
Maximum valid temperature limit
  </description_user>
</config_element>

<config_element name="EDISON_VBG" psid="1804">
  <label>EDISON_VBG</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>1200</range_max>
  <description_user>
Internal vbg value measured at that temperature
  </description_user>
</config_element>

<config_element name="EDISON_THERM_X" psid="1805">
  <label>EDISON_THERM_X</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Offset for temperature sensor
  </description_user>
</config_element>

<config_element name="EDISON_THERM_Y" psid="1806">
  <label>EDISON_THERM_Y</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Slope for temperature sensor
  </description_user>
</config_element>

<config_element name="EDISON_GFSK_REM" psid="1807">
  <label>EDISON_GFSK_REM</label>
  <type>gfsk_rem_t</type>
  <description_user>
gfsk_rem fields:

high_power: Remembrance factor/forget factor to be used at high RSSI levels while receiving GFSK modulated packets.
low_power: Remembrance factor/forget factor to be used at low RSSI levels  while receiving GFSK modulated packets.
pwr_thresh: Power threshold to change the remembrance factor from high power to low power while receiving GFSK modulated packets.
  </description_user>
</config_element>

<config_element name="EDISON_LE2M" psid="1808">
  <label>EDISON_LE2M</label>
  <type>le2m_t</type>
  <description_user>
le2m fields:

high_power: Remembrance factor/forget factor to be used at high RSSI levels while receiving LE2M packets.
low_power: Remembrance factor/forget factor to be used at low RSSI levels while receiving LE2M packets.
pwr_thresh: Power threshold to change the remembrance factor from high power to low power while receiving LE2M packets.
  </description_user>
</config_element>

<config_element name="EDISON_EDR2" psid="1809">
  <label>EDISON_EDR2</label>
  <type>edr2_t</type>
  <description_user>
edr2 fields:

high_power: Remembrance factor/forget factor to be used at high RSSI levels while receiving DQPSK modulated packets.
low_power: Remembrance factor/forget factor to be used at low RSSI levels while receiving DQPSK modulated packets.
pwr_thresh: Power threshold to change the remembrance factor from high power to low power while receiving DQPSK modulated packets.
  </description_user>
</config_element>

<config_element name="EDISON_EDR3" psid="1810">
  <label>EDISON_EDR3</label>
  <type>edr3_t</type>
  <description_user>
edr3 fields:

high_power: Remembrance factor/forget factor to be used at high RSSI levels while receiving D8PSK modulated packets.
low_power: Remembrance factor/forget factor to be used at low RSSI levels while receiving D8PSK modulated packets.
pwr_thresh: Power threshold to change the remembrance factor from high power to low power while receiving D8PSK modulated packets.
  </description_user>
</config_element>

<config_element name="EDISON_REM_FACTOR_LEHS" psid="1811">
  <label>EDISON_REM_FACTOR_LEHS</label>
  <type>octet_string</type>
  <range_min>6</range_min>
  <range_max>6</range_max>
</config_element>

<config_element name="EDISON_IP2_ICAL" psid="1812">
  <label>EDISON_IP2_ICAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
IP2 calibration value for I channel. The DAC code to bias the I mixer.
  </description_user>
</config_element>

<config_element name="EDISON_IP2_QCAL" psid="1813">
  <label>EDISON_IP2_QCAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
IP2 calibration value for Q channel. The DAC code to bias the Q mixer.
  </description_user>
</config_element>

<config_element name="RADIO_CALIBRATIONS_IP2_CAL_PARAMS" psid="1814">
  <label>RADIO_CALIBRATIONS_IP2_CAL_PARAMS</label>
  <type>ip2_cal_params_t</type>
  <description_user>
ip2_cal_params fields:

target_vco_ampl: VCO amplitude for RX mode operation during IP2 calibration.
dac_start: 
dac_step: 
dac_end: 
channel: 
dfe_propagation_delay: 
num_dc_average: 
dc_time_average: 
if_freq: 
gain: 
resampler: 
  </description_user>
</config_element>

<config_element name="RADIO_CALIBRATIONS_EXT1_IP2_CAL_RESULTS" psid="1815">
  <label>RADIO_CALIBRATIONS_EXT1_IP2_CAL_RESULTS</label>
  <type>ip2_cal_results_t</type>
  <description_user>
ip2_cal_results fields:

vco_bias_trim: 
i_cal: 
q_cal: 
  </description_user>
</config_element>

<config_element name="WBER_QHS_MODULATION_MULTIPLIERS" psid="1817">
  <label>WBER_QHS_MODULATION_MULTIPLIERS</label>
  <type>uint16</type>
  <array_length_min>5</array_length_min>
  <array_length_max>5</array_length_max>
  <is_array>1</is_array>
</config_element>

<config_element name="WBER_QHS_MIN_BITS" psid="1818">
  <label>WBER_QHS_MIN_BITS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The minimum bits counted for a packet.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_SUBRATE_ROLLBACK_THRESHOLD" psid="1819">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_SUBRATE_ROLLBACK_THRESHOLD</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
For high latency connections,the subrate factor has to changed to 1 autonomously before any instant based procedures on master side. Default threshold :- 400 * 1.25msec = 500msecs.
  </description_user>
</config_element>

<config_element name="EDISON_GENERIC_CONFIG_ADC_RMS_MAX_THRESH_BREDR" psid="1820">
  <label>EDISON_GENERIC_CONFIG_ADC_RMS_MAX_THRESH_BREDR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
</config_element>

<config_element name="EDISON_GENERIC_CONFIG_ADC_RMS_MAX_THRESH_LE" psid="1821">
  <label>EDISON_GENERIC_CONFIG_ADC_RMS_MAX_THRESH_LE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
</config_element>

<config_element name="EDISON_GENERIC_CONFIG_ADC_RMS_MAX_THRESH_LEHS" psid="1822">
  <label>EDISON_GENERIC_CONFIG_ADC_RMS_MAX_THRESH_LEHS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>127</range_max>
</config_element>

<config_element name="OPTIONS_WBM_ROUTING" psid="1824">
  <label>OPTIONS_WBM_ROUTING</label>
  <type>wbm_routing_t</type>
</config_element>

<config_element name="SLEEP_CONTROL_POWER_CONTROL_MASK" psid="1826">
  <label>SLEEP_CONTROL_POWER_CONTROL_MASK</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Bit mask for ROM banks which will be powered down during shallow sleep.
  </description_user>
</config_element>

<config_element name="SLEEP_CONTROL_WAIT_CYCLES" psid="1827">
  <label>SLEEP_CONTROL_WAIT_CYCLES</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The 4-bit value defines the number of consecutive idle clock cycles after which the ROM instance gets turned off. Value of 0 means wait for 1 and a value of 15 means wait for 16 idle clock cycles before turning off the ROM instance. Timeout value is common for all ROM power controller instances.
  </description_user>
</config_element>

<config_element name="VOICE_OPTIONS_FLAGS_EXT" psid="1828">
  <label>VOICE_OPTIONS_FLAGS_EXT</label>
  <type>options_flags_ext_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_LE_TX_POWER_THRESHOLD_MINCHAN" psid="1829">
  <label>LE_CONNECTION_CONTROL_LE_TX_POWER_THRESHOLD_MINCHAN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>10</range_max>
  <description_user>
The Max Le Tx power we can transmit when we dont have the minchannels required as per regulation.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_MIN_LE_GOOD_CHANNELS_REQ_HIGH_TX_PWR" psid="1830">
  <label>LE_CONNECTION_CONTROL_MIN_LE_GOOD_CHANNELS_REQ_HIGH_TX_PWR</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>40</range_max>
  <description_user>
Min Le good channels required as per regulation needed when Tx power is more than a specified limit.
  </description_user>
</config_element>

<config_element name="LE_ISO_MAX_FT" psid="1831">
  <label>LE_ISO_MAX_FT</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>255</range_max>
  <description_user>
Limit max flush timeout (Applicable only for Slave now).
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_A2DP_MASTER_DUAL_EXTN" psid="1832">
  <label>SCHEDULER_CONTROL_A2DP_MASTER_DUAL_EXTN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Extend timeslice for dual A2DP when it's synced.
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_HANGOVERCYCLENUDGEVALUE" psid="1833">
  <label>AFH_PARAMS_HANGOVERCYCLENUDGEVALUE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
HANGOVER_CYCLE_NUDGE_VALUE. Unit is hangover cycle count. i.e. value of 1 is equal to 1 hangover cycle (i.e. 2.5sec)
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_LECHANNCLASSENABLE" psid="1834">
  <label>AFH_PARAMS_LECHANNCLASSENABLE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
LE Channel Classification Enable
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_LECHANNCLASSMINSPACING" psid="1835">
  <label>AFH_PARAMS_LECHANNCLASSMINSPACING</label>
  <type>uint8</type>
  <range_min>5</range_min>
  <range_max>150</range_max>
  <description_user>
LE Channel Classification Minimum Spacing. Default is 1s (5 * 200ms)
  </description_user>
</config_element>

<config_element name="AFH_PARAMS_LECHANNCLASSMAXDELAY" psid="1836">
  <label>AFH_PARAMS_LECHANNCLASSMAXDELAY</label>
  <type>uint8</type>
  <range_min>5</range_min>
  <range_max>150</range_max>
  <description_user>
LE Channel Classification Maximum Delay. Default is 2.4s  (12 * 200ms)
  </description_user>
</config_element>

<config_element name="SYSTEM_MEMORY_CONFIG_PREDEFPOOL_EXT" psid="1837">
  <label>SYSTEM_MEMORY_CONFIG_PREDEFPOOL_EXT</label>
  <type>predefpool_ext_cfg_t</type>
  <array_length_min>1</array_length_min>
  <array_length_max>1</array_length_max>
  <description_user>
PREDEFPOOL_EXT_CFG fields:

block cfg: bitfield:
Section: 
prealloc: 
NVMSection: 

max count: This pool is used in Slate specific feature. So, updating deafult value as zero
block size: The default size of TXP buffer is configured as 1036 to match with ACL TX buffer default block size value sothat BTSS is able to copy the max size onChip buffered PDU as well
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="TX_POWER_LEVEL_MAPPING_COARSE_POWER_TABLE" psid="1838">
  <label>TX_POWER_LEVEL_MAPPING_COARSE_POWER_TABLE</label>
  <type>octet_string</type>
  <range_min>10</range_min>
  <range_max>10</range_max>
</config_element>

<config_element name="TX_POWER_LEVEL_MAPPING_BR_PACKET" psid="1839">
  <label>TX_POWER_LEVEL_MAPPING_BR_PACKET</label>
  <type>br_packet_t</type>
  <description_user>
BR Packet fields:

Fine Power Adjust PL0: Fine Power Adjust for PL0.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 0.  Fine Power Adjust PL0 = Actual Power PL0 - 4 * Coarse Power PL0.
Fine Power Adjust PL1: Fine Power Adjust for PL1.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 1.  Fine Power Adjust PL1 = Actual Power PL1 - 4 * Coarse Power PL1.
Fine Power Adjust PL2: Fine Power Adjust for PL2.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 2.  Fine Power Adjust PL2 = Actual Power PL2 - 4 * Coarse Power PL2.
Fine Power Adjust PL3: Fine Power Adjust for PL3.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 3.  Fine Power Adjust PL3 = Actual Power PL3 - 4 * Coarse Power PL3.
Fine Power Adjust PL4: Fine Power Adjust for PL4.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 4.  Fine Power Adjust PL4 = Actual Power PL4 - 4 * Coarse Power PL4.
Fine Power Adjust PL5: Fine Power Adjust for PL5.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 5.  Fine Power Adjust PL5 = Actual Power PL5 - 4 * Coarse Power PL5.
Fine Power Adjust PL6: Fine Power Adjust for PL6.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 6.  Fine Power Adjust PL6 = Actual Power PL6 - 4 * Coarse Power PL6.
Fine Power Adjust PL7: Fine Power Adjust for PL7.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 7.  Fine Power Adjust PL7 = Actual Power PL7 - 4 * Coarse Power PL7.
Fine Power Adjust PL8: Fine Power Adjust for PL8.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 8.  Fine Power Adjust PL8 = Actual Power PL8 - 4 * Coarse Power PL8.
Fine Power Adjust PL9: Fine Power Adjust for PL9.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 9.  Fine Power Adjust PL9 = Actual Power PL9 - 4 * Coarse Power PL9.
  </description_user>
</config_element>

<config_element name="TX_POWER_LEVEL_MAPPING_EDR_PACKET" psid="1840">
  <label>TX_POWER_LEVEL_MAPPING_EDR_PACKET</label>
  <type>edr_packet_t</type>
  <description_user>
EDR Packet fields:

Fine Power Adjust PL0: Fine Power Adjust for PL0.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 0.  Fine Power Adjust PL0 = Actual Power PL0 - 4 * Coarse Power PL0.
Fine Power Adjust PL1: Fine Power Adjust for PL1.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 1.  Fine Power Adjust PL1 = Actual Power PL1 - 4 * Coarse Power PL1.
Fine Power Adjust PL2: Fine Power Adjust for PL2.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 2.  Fine Power Adjust PL2 = Actual Power PL2 - 4 * Coarse Power PL2.
Fine Power Adjust PL3: Fine Power Adjust for PL3.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 3.  Fine Power Adjust PL3 = Actual Power PL3 - 4 * Coarse Power PL3.
Fine Power Adjust PL4: Fine Power Adjust for PL4.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 4.  Fine Power Adjust PL4 = Actual Power PL4 - 4 * Coarse Power PL4.
Fine Power Adjust PL5: Fine Power Adjust for PL5.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 5.  Fine Power Adjust PL5 = Actual Power PL5 - 4 * Coarse Power PL5.
Fine Power Adjust PL6: Fine Power Adjust for PL6.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 6.  Fine Power Adjust PL6 = Actual Power PL6 - 4 * Coarse Power PL6.
Fine Power Adjust PL7: Fine Power Adjust for PL7.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 7.  Fine Power Adjust PL7 = Actual Power PL7 - 4 * Coarse Power PL7.
Fine Power Adjust PL8: Fine Power Adjust for PL8.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 8.  Fine Power Adjust PL8 = Actual Power PL8 - 4 * Coarse Power PL8.
Fine Power Adjust PL9: Fine Power Adjust for PL9.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 9.  Fine Power Adjust PL9 = Actual Power PL9 - 4 * Coarse Power PL9.
  </description_user>
</config_element>

<config_element name="TX_POWER_LEVEL_MAPPING_LE_PACKET" psid="1841">
  <label>TX_POWER_LEVEL_MAPPING_LE_PACKET</label>
  <type>le_packet_t</type>
  <description_user>
LE Packet fields:

Fine Power Adjust PL0: Fine Power Adjust for PL0.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 0.  Fine Power Adjust PL0 = Actual Power PL0 - 4 * Coarse Power PL0.
Fine Power Adjust PL1: Fine Power Adjust for PL1.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 1.  Fine Power Adjust PL1 = Actual Power PL1 - 4 * Coarse Power PL1.
Fine Power Adjust PL2: Fine Power Adjust for PL2.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 2.  Fine Power Adjust PL2 = Actual Power PL2 - 4 * Coarse Power PL2.
Fine Power Adjust PL3: Fine Power Adjust for PL3.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 3.  Fine Power Adjust PL3 = Actual Power PL3 - 4 * Coarse Power PL3.
Fine Power Adjust PL4: Fine Power Adjust for PL4.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 4.  Fine Power Adjust PL4 = Actual Power PL4 - 4 * Coarse Power PL4.
Fine Power Adjust PL5: Fine Power Adjust for PL5.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 5.  Fine Power Adjust PL5 = Actual Power PL5 - 4 * Coarse Power PL5.
Fine Power Adjust PL6: Fine Power Adjust for PL6.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 6.  Fine Power Adjust PL6 = Actual Power PL6 - 4 * Coarse Power PL6.
Fine Power Adjust PL7: Fine Power Adjust for PL7.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 7.  Fine Power Adjust PL7 = Actual Power PL7 - 4 * Coarse Power PL7.
Fine Power Adjust PL8: Fine Power Adjust for PL8.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 8.  Fine Power Adjust PL8 = Actual Power PL8 - 4 * Coarse Power PL8.
Fine Power Adjust PL9: Fine Power Adjust for PL9.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 9.  Fine Power Adjust PL9 = Actual Power PL9 - 4 * Coarse Power PL9.
  </description_user>
</config_element>

<config_element name="TX_POWER_LEVEL_MAPPING_LEHS_PACKET" psid="1842">
  <label>TX_POWER_LEVEL_MAPPING_LEHS_PACKET</label>
  <type>lehs_packet_t</type>
  <description_user>
LEHS Packet fields:

Fine Power Adjust PL0: Fine Power Adjust for PL0.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 0.  Fine Power Adjust PL0 = Actual Power PL0 - 4 * Coarse Power PL0.
Fine Power Adjust PL1: Fine Power Adjust for PL1.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 1.  Fine Power Adjust PL1 = Actual Power PL1 - 4 * Coarse Power PL1.
Fine Power Adjust PL2: Fine Power Adjust for PL2.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 2.  Fine Power Adjust PL2 = Actual Power PL2 - 4 * Coarse Power PL2.
Fine Power Adjust PL3: Fine Power Adjust for PL3.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 3.  Fine Power Adjust PL3 = Actual Power PL3 - 4 * Coarse Power PL3.
Fine Power Adjust PL4: Fine Power Adjust for PL4.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 4.  Fine Power Adjust PL4 = Actual Power PL4 - 4 * Coarse Power PL4.
Fine Power Adjust PL5: Fine Power Adjust for PL5.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 5.  Fine Power Adjust PL5 = Actual Power PL5 - 4 * Coarse Power PL5.
Fine Power Adjust PL6: Fine Power Adjust for PL6.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 6.  Fine Power Adjust PL6 = Actual Power PL6 - 4 * Coarse Power PL6.
Fine Power Adjust PL7: Fine Power Adjust for PL7.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 7.  Fine Power Adjust PL7 = Actual Power PL7 - 4 * Coarse Power PL7.
Fine Power Adjust PL8: Fine Power Adjust for PL8.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 8.  Fine Power Adjust PL8 = Actual Power PL8 - 4 * Coarse Power PL8.
Fine Power Adjust PL9: Fine Power Adjust for PL9.Unit is 0.25dbm. It is the difference between the observed max transmit power and coarse power at power level 9.  Fine Power Adjust PL9 = Actual Power PL9 - 4 * Coarse Power PL9.
  </description_user>
</config_element>

<config_element name="OTP_RADIO_DATA_BT_TX_SPUR_CTRL_TRIM" psid="1843">
  <label>OTP_RADIO_DATA_BT_TX_SPUR_CTRL_TRIM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>31</range_max>
  <description_user>
BT Transmit Spur control trim to improve 0.5x and 1.5x harmonic levels.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_FLAGS" psid="1845">
  <label>SCHEDULER_CONTROL_FLAGS</label>
  <type>scheduler_control_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_ISO_GROUP_LOW" psid="1846">
  <label>BB_PRIORITY_LE_ISO_GROUP_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ISO Group Low priority. [BB_GROUP=BLE ISO]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_ISO_GROUP_NORMAL" psid="1847">
  <label>BB_PRIORITY_LE_ISO_GROUP_NORMAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ISO Group Normal priority. [BB_GROUP=BLE ISO]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_ISO_GROUP_HIGH" psid="1848">
  <label>BB_PRIORITY_LE_ISO_GROUP_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ISO Group High priority. [BB_GROUP=BLE ISO]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_ISO_GROUP_CRITICAL" psid="1849">
  <label>BB_PRIORITY_LE_ISO_GROUP_CRITICAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
ISO Group Critical priority. [BB_GROUP=BLE ISO]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_ASHA_NORMAL" psid="1850">
  <label>BB_PRIORITY_LE_ASHA_NORMAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Audio Streaming for Hearing Aid (ASHA) Normal prioirty., [BB_GROUP=BLE ASHA]
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_ASHA_HIGH" psid="1851">
  <label>BB_PRIORITY_LE_ASHA_HIGH</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Audio Streaming for Hearing Aid (ASHA) High prioirty., [BB_GROUP=BLE ASHA]
  </description_user>
</config_element>

<config_element name="GMAX_BTC" psid="1852">
  <label>GMAX_BTC</label>
  <type>octet_string</type>
  <range_min>4</range_min>
  <range_max>4</range_max>
</config_element>

<config_element name="GMAX_LE" psid="1853">
  <label>GMAX_LE</label>
  <type>octet_string</type>
  <range_min>4</range_min>
  <range_max>4</range_max>
</config_element>

<config_element name="GMAX_QHS" psid="1854">
  <label>GMAX_QHS</label>
  <type>octet_string</type>
  <range_min>4</range_min>
  <range_max>4</range_max>
</config_element>

<config_element name="ACL_RELAY_FLAGS" psid="1855">
  <label>ACL_RELAY_FLAGS</label>
  <type>acl_relay_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_XSCO_RELAY_LOW" psid="1856">
  <label>BB_PRIORITY_XSCO_RELAY_LOW</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>255</range_max>
  <description_user>
Priority of relay slots in TWM feature, [BB_GROUP=xSCO]
  </description_user>
</config_element>

<config_element name="A2DP_LINK_QUALITY_THRESHOLDS" psid="1857">
  <label>A2DP_LINK_QUALITY_THRESHOLDS</label>
  <type>link_quality_parameters_t</type>
  <array_length_min>5</array_length_min>
  <array_length_max>5</array_length_max>
  <description_user>
Link Quality Parameters fields:

avgLatency: 
activeConnCount: 
avgDenialDuration: 
flowOnOffGap: 
  </description_user>
  <is_array>1</is_array>
</config_element>

<config_element name="A2DP_LINK_QUALITY_EVALPERIOD" psid="1858">
  <label>A2DP_LINK_QUALITY_EVALPERIOD</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
</config_element>

<config_element name="A2DP_LINK_QUALITY_REDUCELINKQUALITY3M" psid="1859">
  <label>A2DP_LINK_QUALITY_REDUCELINKQUALITY3M</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>0</range_max>
</config_element>

<config_element name="A2DP_LINK_QUALITY_CONCURRENCY_SCENARIO" psid="1860">
  <label>A2DP_LINK_QUALITY_CONCURRENCY_SCENARIO</label>
  <type>a2dp_link_quality_parameters_concurrency_scenario_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="A2DP_LINK_QUALITY_LOWTOHIGHTHRESHOLD" psid="1861">
  <label>A2DP_LINK_QUALITY_LOWTOHIGHTHRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="A2DP_LINK_QUALITY_HIGHTOLOWTHRESHOLD" psid="1862">
  <label>A2DP_LINK_QUALITY_HIGHTOLOWTHRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
</config_element>

<config_element name="A2DP_LINK_QUALITY_EVALUATION_PERIOD_MAX" psid="1863">
  <label>A2DP_LINK_QUALITY_EVALUATION_PERIOD_MAX</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
This is default/maximum evaluation period in ms used to evaluate link quality metrics.
  </description_user>
</config_element>

<config_element name="A2DP_FEATURE_CONTROL_FLAG" psid="1864">
  <label>A2DP_FEATURE_CONTROL_FLAG</label>
  <type>a2dp_config_a2dp_feature_control_flag_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="ACL_CONNECTION_STATS_FREQ_IN_SECS" psid="1865">
  <label>ACL_CONNECTION_STATS_FREQ_IN_SECS</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Acl Connection Stats Freq In Secs
  </description_user>
</config_element>

<config_element name="AMAM_CAL_PARAM_UPD" psid="1866">
  <label>AMAM_CAL_PARAM_UPD</label>
  <type>amam_cal_param_upd_t</type>
  <description_user>
AMAM calibration config parameters

amam_cal_param_upd fields:

channel_search: Channels below this will be discarded in frequency sweep
  </description_user>
</config_element>

<config_element name="XLDO_CONTROLS_SUPPORT_EN" psid="1867">
  <label>XLDO_CONTROLS_SUPPORT_EN</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Boolean to indicate whether xLDO is used in the hardware or not.
  </description_user>
</config_element>

<config_element name="XLDO_CONTROLS_CTRL_PIO" psid="1868">
  <label>XLDO_CONTROLS_CTRL_PIO</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>63</range_max>
  <description_user>
The PIO which is being used to control the xLDO on/off.
  </description_user>
</config_element>

<config_element name="XLDO_CONTROLS_CTRL_ACTIVE_LOW" psid="1869">
  <label>XLDO_CONTROLS_CTRL_ACTIVE_LOW</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
If the xLDO control is active low, this boolean needs to be set to true(1), false(0) otherwise.
  </description_user>
</config_element>

<config_element name="XFEM_CONTROLS_SUPPORT" psid="1870">
  <label>XFEM_CONTROLS_SUPPORT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>1</range_max>
  <description_user>
Enable/disable external LNA support.
  </description_user>
</config_element>

<config_element name="XFEM_CONTROLS_RSSI_THRESHOLDS" psid="1871">
  <label>XFEM_CONTROLS_RSSI_THRESHOLDS</label>
  <type>octet_string</type>
  <range_min>5</range_min>
  <range_max>5</range_max>
</config_element>

<config_element name="XFEM_CONTROLS_GAIN_DB" psid="1872">
  <label>XFEM_CONTROLS_GAIN_DB</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The gain, in dB, provided by the external LNA when it is enabled.
  </description_user>
</config_element>

<config_element name="XFEM_CONTROLS_TRUTH_TABLE" psid="1873">
  <label>XFEM_CONTROLS_TRUTH_TABLE</label>
  <type>octet_string</type>
  <range_min>3</range_min>
  <range_max>3</range_max>
</config_element>

<config_element name="XFEM_CONTROLS_INIT_STATE" psid="1874">
  <label>XFEM_CONTROLS_INIT_STATE</label>
  <type>octet_string</type>
  <range_min>2</range_min>
  <range_max>2</range_max>
</config_element>

<config_element name="SCHEDULER_CONTROL_INACTIVEQ" psid="1875">
  <label>SCHEDULER_CONTROL_INACTIVEQ</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time slices (In Frames) alloted to a task at the head of the InactiveQ.
  </description_user>
</config_element>

<config_element name="SCHEDULER_CONTROL_PAGE_INACTIVEQ" psid="1876">
  <label>SCHEDULER_CONTROL_PAGE_INACTIVEQ</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time slices (In Frames) alloted to Page task while running from InactiveQ.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_LE_ACCEPT_FILTER_LIST_SIZE" psid="1877">
  <label>BT_LOCAL_FEATURES_CONTROL_LE_ACCEPT_FILTER_LIST_SIZE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Maximum number of records in the Filter Accept List used in link layer device filtering.
  </description_user>
</config_element>

<config_element name="BT_LOCAL_FEATURES_CONTROL_SNIFF_NEGOTIATION_STRIVING_POINT" psid="1878">
  <label>BT_LOCAL_FEATURES_CONTROL_SNIFF_NEGOTIATION_STRIVING_POINT</label>
  <type>uint32</type>
  <range_min>1</range_min>
  <range_max>255</range_max>
  <description_user>
Iterations of a sniff negotiations required to acknowledge that we are having issues to find an agreement. When we detect this condition, we will adjust the sniff negotiation policies to increase the chances of success. For such adjustments to take place, SNIFF NEGOTIATION STRIVING POINT shall be less than CFG_SNIFF_MAX_NEGOTIATION_ROUNDS. Setting this SNIFF NEGOTIATION STRIVING POINT &gt;= CFG_SNIFF_MAX_NEGOTIATION_ROUNDS can be used to disable the alternative logics.
  </description_user>
</config_element>

<config_element name="LE_ISO_CONSECUTIVE_INACK_THRESHOLD" psid="1879">
  <label>LE_ISO_CONSECUTIVE_INACK_THRESHOLD</label>
  <type>uint8</type>
  <range_min>1</range_min>
  <range_max>255</range_max>
  <description_user>
Implicit NACK threshold for ISO event early exit. If the last PDU transmitted in one event gets INACK no less than the threshold, consider abandoning rest subevents.
  </description_user>
</config_element>

<config_element name="LE_ADVERTISING_CONFIGURATION_LEGACY_FILTER_LIST_SIZE" psid="1880">
  <label>LE_ADVERTISING_CONFIGURATION_LEGACY_FILTER_LIST_SIZE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Set the list size of the legacy dup device list.
  </description_user>
</config_element>

<config_element name="LE_ADVERTISING_CONFIGURATION_EXTENDED_FILTER_LIST_SIZE" psid="1881">
  <label>LE_ADVERTISING_CONFIGURATION_EXTENDED_FILTER_LIST_SIZE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Element description
  </description_user>
</config_element>

<config_element name="LE_ADVERTISING_CONFIGURATION_EXTENDED_FILTER_INC_ALLOC_SIZE" psid="1882">
  <label>LE_ADVERTISING_CONFIGURATION_EXTENDED_FILTER_INC_ALLOC_SIZE</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The incremental size to extend the extended adv list by when more memory is need for the extend adv report list.
  </description_user>
</config_element>

<config_element name="LE_ADVERTISING_CONFIGURATION_EXTENDED_FILTER_STALE_TIME" psid="1883">
  <label>LE_ADVERTISING_CONFIGURATION_EXTENDED_FILTER_STALE_TIME</label>
  <type>uint32</type>
  <range_min>0</range_min>
  <range_max>268435455</range_max>
  <description_user>
Lower 28bits corresponds to CLKN - integer part with 312.5 resolution.
  </description_user>
</config_element>

<config_element name="BUILDLABELARRAY" psid="1884">
  <label>BUILDLABELARRAY</label>
  <type>octet_string</type>
  <range_min>64</range_min>
  <range_max>64</range_max>
</config_element>

<config_element name="SYSTEM_MEMORY_CONFIG_MAIN_STACK_OVERRIDE_SIZE" psid="1885">
  <label>SYSTEM_MEMORY_CONFIG_MAIN_STACK_OVERRIDE_SIZE</label>
  <type>uint16</type>
  <range_min>0</range_min>
  <range_max>65535</range_max>
  <description_user>
Override for MSP size. Set to non-zero value to change the default MSP size. Keep the size 8 bytes aligned.
  </description_user>
</config_element>

<config_element name="SAR_OEM_MAX_POWER_TABLE_MODE_NUM" psid="1886">
  <label>SAR_OEM_MAX_POWER_TABLE_MODE_NUM</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
the number of OEM SAR backoff mode
  </description_user>
</config_element>

<config_element name="SAR_OEM_MAX_POWER_TABLE_SAR_OEM_MAX_POWE_VALUE" psid="1887">
  <label>SAR_OEM_MAX_POWER_TABLE_SAR_OEM_MAX_POWE_VALUE</label>
  <type>octet_string</type>
  <range_min>12</range_min>
  <range_max>12</range_max>
</config_element>

<config_element name="OPTIONS_TOAIR_EXTRA_SAMPLE_COUNT" psid="1888">
  <label>OPTIONS_TOAIR_EXTRA_SAMPLE_COUNT</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
There is a possibility that MIC ISR is interrupted by LC after encoding is done. In such case, it needs more size to buffer the samples. One way to solve this issue is increasing MIC ISR max execution time. But it causes more latency. The better way is add extra samples.
  </description_user>
</config_element>

<config_element name="HYDRA_AUDIO_ROUTING_ADAPTIVE_LE_FLAGS" psid="1889">
  <label>HYDRA_AUDIO_ROUTING_ADAPTIVE_LE_FLAGS</label>
  <type>hydra_audio_routing_adaptive_le_flags_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="ACL_RELAY_INACTIVE_TO_LE_ADV_TIME" psid="1890">
  <label>ACL_RELAY_INACTIVE_TO_LE_ADV_TIME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Time for the Advertise to run just after the Relay FHS exchange
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_LE_ADV_LOWEST_PRIORITY" psid="1891">
  <label>BB_PRIORITY_LE_ADV_LOWEST_PRIORITY</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Lowest Adv priorty to make sure ADV is not scheduled when there is other activity.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_SCHEDULER_TIME" psid="1892">
  <label>LE_CONNECTION_CONTROL_SCHEDULER_TIME</label>
  <type>uint8</type>
  <range_min>50</range_min>
  <range_max>255</range_max>
  <description_user>
Typical maximum time scheduler needs to run.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_RX_DONE_TIME" psid="1893">
  <label>LE_CONNECTION_CONTROL_RX_DONE_TIME</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Typical duration of RX Done and RX NonRT handlers.
  </description_user>
</config_element>

<config_element name="LE_CONNECTION_CONTROL_CONTEXT_SWITCH_TIME" psid="1894">
  <label>LE_CONNECTION_CONTROL_CONTEXT_SWITCH_TIME</label>
  <type>uint8</type>
  <range_min>120</range_min>
  <range_max>255</range_max>
  <description_user>
Typical time needed for a context switch at the end of a connection event. Includes time for event exit processing as well as next command ramp time.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_EXT_CM2CS_PACKET_COUNT_CRITICAL_THRESHOLD" psid="1895">
  <label>ACL_RELAY_EXT_CM2CS_PACKET_COUNT_CRITICAL_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of packets including the ignored packet that connected slave need to be queued before the ACL Relay connection has a sync urgency of critical.
  </description_user>
</config_element>

<config_element name="ACL_RELAY_EXT_CM2CS_PACKETS_COUNT_HIGH_THRESHOLD" psid="1896">
  <label>ACL_RELAY_EXT_CM2CS_PACKETS_COUNT_HIGH_THRESHOLD</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
The number of packets including the ignore packet that connected slave need to be queued before the ACL Relay connection has a sync urgency of high.
  </description_user>
</config_element>

<config_element name="BB_PRIORITY_EXT_FROZEN_LINK" psid="1897">
  <label>BB_PRIORITY_EXT_FROZEN_LINK</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>255</range_max>
  <description_user>
Frozen link priority
  </description_user>
</config_element>

<config_element name="DEBUG_PARAMETERS_EXT_LLM_PANIC_ON_CONNECTION_TYPE" psid="1898">
  <label>DEBUG_PARAMETERS_EXT_LLM_PANIC_ON_CONNECTION_TYPE</label>
  <type>debug_parameters_ext_llm_panic_on_connection_type_t</type>
  <description_user>
None
  </description_user>
</config_element>

<config_element name="BQR_INTERVAL_BR_EDR_ACL_INTERVAL" psid="1899">
  <label>BQR_INTERVAL_BR_EDR_ACL_INTERVAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>65</range_max>
  <description_user>
Value indicates the interval (in seconds) at which Link Quality Metrics should be sent for BR/EDR ACL Links.  Zero implies reporting is disabled.
  </description_user>
</config_element>

<config_element name="BQR_INTERVAL_ESCO_INTERVAL" psid="1900">
  <label>BQR_INTERVAL_ESCO_INTERVAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>65</range_max>
  <description_user>
Value indicates the interval (in seconds) at which Link Quality Metrics should be sent for (e)SCO Links.  Zero implies reporting is disabled.
  </description_user>
</config_element>

<config_element name="BQR_INTERVAL_ISO_INTERVAL" psid="1901">
  <label>BQR_INTERVAL_ISO_INTERVAL</label>
  <type>uint8</type>
  <range_min>0</range_min>
  <range_max>65</range_max>
  <description_user>
Value indicates the interval (in seconds) at which Link Quality Metrics should be sent for LE ISO Links.  Zero implies reporting is disabled.
  </description_user>
</config_element>

<config_element name="BQR_INTERVAL_FILTER_BY_LINK_TYPE" psid="1902">
  <label>BQR_INTERVAL_FILTER_BY_LINK_TYPE</label>
  <type>bqr_interval_filter_by_link_type_t</type>
  <description_user>
None
  </description_user>
</config_element>

</metadata>
</metadata_list>
