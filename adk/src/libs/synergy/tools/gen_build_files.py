# Copyright (c) 2020-2021 Qualcomm Technologies International, Ltd
#
# gen_build_files.py - generates "source_list.py" and x2p file using "file_list.txt"

import os
from os import path
import xml.etree.ElementTree as ET

Paths={}

header = \
"""
#This is a temporary file generated by gen_build_files.py using files listed in source_lists.xml.
#This file is generated during build\n"""

def WritePathList(f, key):
	#add name and opening brace
	s = "\n\n" + key + " = ["

	#add the file paths
	for path in Paths[key]:
		f.write(s + "\n")
		unixPath = path.replace("\\", "/")
		s = "\t" + "\"" + unixPath + "\","
	#remove last ',' from the last file path in the list
	s = s[:-1]

	#add closing brace
	f.write(s + "]")

def GenMakefileSrc():
	f = open("source_list.py", "w")
	f.write(header)

	for key in Paths:
		WritePathList(f, key)
	f.close()

def ProcessLists(root):
	key = root.attrib["group"]
	paths = []
	for files in root.iter():
		path = files.get("path", default="None")
		if (path != 'None'):
			paths.append(path)
	Paths[key] = paths

def Parse_xml(file):
	tree = ET.parse(file)
	root = tree.getroot()
	for child in root:
			ProcessLists(child)

if __name__ == '__main__':
    Parse_xml('source_lists.xml')
    GenMakefileSrc()
