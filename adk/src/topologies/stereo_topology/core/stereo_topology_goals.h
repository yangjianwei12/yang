/*!
\copyright  Copyright (c) 2020 - 2022 Qualcomm Technologies International, Ltd.\n
            All Rights Reserved.\n
            Qualcomm Technologies International, Ltd. Confidential and Proprietary.
\version    
\file       
\brief      Interface to STEREO Topology goal handling.
*/

#ifndef STEREO_TOPOLOGY_GOALS_H
#define STEREO_TOPOLOGY_GOALS_H

#include <message.h>


/*! Definition of goals which the topology may be instructed (by rules) to achieve. */
typedef enum
{
    /*! empty goal*/
    stereo_topology_goal_none,
    /*! Goal is to make the stereo connectable to a handset. */
    stereo_topology_goal_connectable_handset,
    /*! Goal is to notify clients of connection manager that stereo is now connectable */
    stereo_topology_goal_allow_handset_connect,
    /*! Goal is to make the stereo connectable over LE. */
    stereo_topology_goal_allow_le_connection,
    /*! Goal is to shut down the system and cancel activities */
    stereo_topology_goal_system_stop,
    /*! Goal is to allow peer-pair */
    stereo_topology_goal_peer_pair,
    /*! Goal to start PFR */
    stereo_topology_goal_find_role,
    /*! Goal is to connect peer BREDR profiles to Secondary. */
    stereo_topology_goal_primary_connect_peer,
    /*! Goal is to connect secondary with primary */
    stereo_topology_goal_sec_connect_peer,
    /*! Goal is to enable stereo standalone */
    stereo_topology_goal_enable_stereo_standalone,
    /* ADD ENTRIES ABOVE HERE */
    /*! Final entry to get the number of IDs */
    STEREO_TOPOLOGY_GOAL_NUMBER_IDS,
} stereo_topology_goal_id_t;


/*! A set of goals, stored as bits in a mask. */
typedef unsigned long long stereo_topology_goal_msk;

/*! Macro to create a goal mask from a #stereo_topology_goal_id. */
#define GOAL_MASK(id) (((stereo_topology_goal_msk)1)<<(id))


/*! Macro to iterate over all goals.
    Helper allows for the fact that the first entry is unused

    \param loop_index name of variable to define and use as the loop index
 */
#define FOR_ALL_STEREO_GOALS(loop_index)\
    for (int loop_index = 1; (loop_index) < STEREO_TOPOLOGY_GOAL_NUMBER_IDS; (loop_index)++)

/*! \brief Query if a goal is currently active.

    \param goal The goal being queried for status.

    \return TRUE if goal is currently active.
*/
bool StereoTopology_IsGoalActive(stereo_topology_goal_id_t goal);

/*! \brief Check if there are any pending goals.

    \return TRUE if there are one or more goals queued; FALSE otherwise.
*/
bool StereoTopology_IsAnyGoalPending(void);

/*! \brief Handler for new and queued goals.
    
    \note This is a common handler for new goals generated by a topology
          rule decision and goals queued waiting on completion or cancelling
          already in-progress goals. 
*/
void StereoTopology_HandleGoalDecision(Task task, MessageId id, Message message);

/*! \brief Initialise the Stereo topology goals */
void StereoTopology_GoalsInit(void);

#endif /* STEREO_TOPOLOGY_GOALS_H */
