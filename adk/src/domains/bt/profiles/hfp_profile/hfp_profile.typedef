<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright (c) 2019-2023 Qualcomm Technologies International, Ltd.-->

<types name="hfp_profile">
    <include_header name="marshal_common.h"/>
    <include_header name="hfp.h"/>
    <include_header name="task_list.h"/>
    <include_header name="battery_monitor.h"/>
    <include_header name="voice_sources_list.h"/>
    <include_header name="source_param_types.h"/>
    <include_header name="hfp_profile_states_typedef.h"/>
    <include_header name="hfp_profile_states_marshal_typedef.h"/>
    <source>
#include "domain_marshal_types.h"
    </source>

    <typedef_header_source>
    /*! Defines  */
#define HFP_SLC_STATUS_NOTIFY_LIST_INIT_CAPACITY 1
#define HFP_STATUS_NOTIFY_LIST_INIT_CAPACITY 6

#define MARSHAL_TYPE_hfp_wbs_codec_mask MARSHAL_TYPE_uint16
#define MARSHAL_TYPE_source_state_t MARSHAL_TYPE_uint8
    </typedef_header_source>
        <source>
#ifndef HOSTED_TEST_ENVIRONMENT
COMPILE_TIME_ASSERT(sizeof(hfp_wbs_codec_mask) == sizeof(uint16), hfp_wbs_codec_mask_is_not_the_same_size_as_uint16);
COMPILE_TIME_ASSERT(sizeof(source_state_t) == sizeof(uint8), source_state_t_is_not_the_same_size_as_uint8);
#endif
    </source>

    <typedef_struct name="hfpTaskDataBitfields" basic="true" doc="HFP task bitfields data structure">
        <member marshal="true" doc="AG supports in-band ringing tone">unsigned in_band_ring:1</member>
        <member marshal="true" doc="Voice recognition is active">unsigned voice_recognition_active:1</member>
        <member marshal="true" doc="Voice recognition pending">unsigned voice_recognition_request:1</member>
        <member marshal="true" doc="Microphone mute is active">unsigned mute_active:1</member>
        <member marshal="true" doc="Caller ID is active">unsigned caller_id_active:1</member>
        <member marshal="true" doc="Current call state">hfp_call_state call_state:4</member>
        <member marshal="true" doc="Flag indicating if we have accepted the call">unsigned call_accepted:1</member>
        <member marshal="true" doc="Flag indicating if ACL is encrypted">unsigned encrypted:1</member>
        <member marshal="true" doc="Flag indicating that ACL detach is pending">unsigned detach_pending:1</member>
        <member marshal="true" doc="Flag indicating the disconnect reason">unsigned disconnect_reason:4</member>
        <member marshal="true" doc="HF indicator assigned number">unsigned hf_indicator_assigned_num:2</member>
        <member marshal="true" doc="eSCO is connecting">unsigned esco_connecting:1</member>
        <member marshal="false" doc="Reconnect handset after faulty swb slc disconnect">unsigned reconnect_handset:1</member>
        <member marshal="true" doc="eSCO is disconnecting">unsigned esco_disconnecting:1</member>
	    <member marshal="true" doc="SWB Blacklist timer disable">unsigned disable_swb_blacklist_timer:1</member>
    </typedef_struct>

    <typedef_struct name="hfpInstanceTaskData" doc="HFP instance structure, contains all the information for an HFP connection">
        <member marshal="false" doc="HFP task">TaskData task</member>
        <member marshal="true" doc="Current state">hfpState state</member>
        <member marshal="false" doc="HFP operation lock, used to serialise HFP operations">uint16 hfp_lock</member>
        <member marshal="false" doc="HFP audio lock, used to serialise SCO requests">uint16 audio_lock</member>
        <member marshal="true" doc="HFP bitfields data">hfpTaskDataBitfields bitfields</member>
        <member marshal="true" doc="Profile currently used">hfp_profile profile</member>
        <member marshal="true" doc="Bitmap of supported SCO packets by both headset and AG">uint16 sco_supported_packets</member>
        <member marshal="false" doc="Address of connected AG">bdaddr ag_bd_addr</member>
        <member marshal="false" doc="Sink for SCO, 0 if no SCO active">Sink sco_sink</member>
        <member marshal="false" doc="Sink for SLC">Sink slc_sink</member>
        <member marshal="true" doc="WB-Speech codec bit masks.">hfp_wbs_codec_mask codec</member>
        <member marshal="true" doc="Wesco reported for the link.">uint8 wesco</member>
        <member marshal="true" doc="Qualcomm Codec Mode ID Selected - If in Qualcomm Codec Extensions mode.">uint16 qce_codec_mode_id</member>
        <member marshal="true" doc="Tesco reported for the link.">uint8 tesco</member>
        <member marshal="true" doc="Routing state of the source.">source_state_t source_state</member>
    </typedef_struct>
</types>
