// -----------------------------------------------------------------------------
// Copyright (c) 2023                  Qualcomm Technologies International, Ltd.
//
// Generated by /home/svc-audio-dspsw/kymera_builds/builds/2023/kymera_2312060823/kalimba/kymera/../../util/CommonParameters/DerivationEngine.py
// code v3.5, file //depot/dspsw/maor_rom_v20/util/CommonParameters/DerivationEngine.py, revision 2
// namespace {com.csr.cps.4}UnifiedParameterSchema on 2023-12-06 08:50:52 by svc-audio-dspsw
//
// input from //depot/dspsw/dev/aanc/aamb_stre_dev/kalimba/kymera/capabilities/compander/compander.xml#1
// last change INVALID by ud02 on INVALID
// -----------------------------------------------------------------------------
#ifndef __ANC_COMPANDER_GEN_ASM_H__
#define __ANC_COMPANDER_GEN_ASM_H__

// CodeBase IDs
.CONST $M.ANC_COMPANDER_ANC_COMPANDER_CAP_ID       	0x00D6;
.CONST $M.ANC_COMPANDER_ANC_COMPANDER_ALT_CAP_ID_0       	0x40B7;
.CONST $M.ANC_COMPANDER_ANC_COMPANDER_SAMPLE_RATE       	0;
.CONST $M.ANC_COMPANDER_ANC_COMPANDER_VERSION_MAJOR       	1;

// Constant Values
.CONST $M.ANC_COMPANDER.CONSTANT.LEVEL_ESTIMATION_FLAG_RMS 		0x00000000;
.CONST $M.ANC_COMPANDER.CONSTANT.LEVEL_ESTIMATION_FLAG_Peak		0x00000001;


// Piecewise Disables
.CONST $M.ANC_COMPANDER.CONFIG.BYPASS         		0x00000001;
.CONST $M.ANC_COMPANDER.CONFIG.IS_FB_COMPANDER		0x00000002;


// Statistic Block
.CONST $M.ANC_COMPANDER.STATUS.CUR_MODE      		0*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.STATUS.OVR_CONTROL   		1*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.STATUS.OP_STATE      		2*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.STATUS.LOOKAHEAD_FLAG		3*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.STATUS.ANC_GAIN      		4*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.STATUS.BLOCK_SIZE    		5*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.STATUS.LEVEL         		6*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.STATUS.BLOCK_SIZE         	7;

// System Mode
.CONST $M.ANC_COMPANDER.SYSMODE.PASS_THRU		0;
.CONST $M.ANC_COMPANDER.SYSMODE.UNUSED   		1;
.CONST $M.ANC_COMPANDER.SYSMODE.FULL     		2;
.CONST $M.ANC_COMPANDER.SYSMODE.MAX_MODES		3;

// System Control
.CONST $M.ANC_COMPANDER.CONTROL.MODE_OVERRIDE		0x2000;

// Operator state

// Lookahead state

// Parameter Block
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_COMPANDER_CONFIG       		0*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_NUM_SECTIONS           		1*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_RATIO_SECTION1    		2*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_RATIO_SECTION2    		3*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_RATIO_SECTION3    		4*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_RATIO_SECTION4    		5*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_RATIO_SECTION5    		6*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_THRESHOLD_SECTION1		7*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_THRESHOLD_SECTION2		8*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_THRESHOLD_SECTION3		9*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_THRESHOLD_SECTION4		10*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_THRESHOLD_SECTION5		11*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_KNEEWIDTH_SECTION1		12*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_KNEEWIDTH_SECTION2		13*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_KNEEWIDTH_SECTION3		14*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_KNEEWIDTH_SECTION4		15*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_KNEEWIDTH_SECTION5		16*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_ATTACK_TC         		17*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_RELEASE_TC        		18*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_LEVEL_ATTACK_TC        		19*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_LEVEL_RELEASE_TC       		20*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_LEVEL_AVERAGE_TC       		21*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_MAKEUP_GAIN            		22*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_LOOKAHEAD_TIME         		23*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_LEVEL_ESTIMATION_FLAG  		24*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_UPDATE_FLAG       		25*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_GAIN_INTERP_FLAG       		26*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_1_COEFF_A    		27*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_1_COEFF_B    		28*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_1_COEFF_C    		29*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_2_COEFF_A    		30*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_2_COEFF_B    		31*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_2_COEFF_C    		32*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_3_COEFF_A    		33*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_3_COEFF_B    		34*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_3_COEFF_C    		35*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_4_COEFF_A    		36*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_4_COEFF_B    		37*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_4_COEFF_C    		38*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_5_COEFF_A    		39*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_5_COEFF_B    		40*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_SOFT_KNEE_5_COEFF_C    		41*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.OFFSET_COMPANDER_PRIORITY     		42*ADDR_PER_WORD;
.CONST $M.ANC_COMPANDER.PARAMETERS.STRUCT_SIZE                  		43;


#endif // __ANC_COMPANDER_GEN_ASM_H__
