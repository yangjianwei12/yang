// -----------------------------------------------------------------------------
// Copyright (c) 2023                  Qualcomm Technologies International, Ltd.
//
// Generated by /home/svc-audio-dspsw/kymera_builds/builds/2023/kymera_2312060823/kalimba/kymera/../../util/CommonParameters/DerivationEngine.py
// code v3.5, file //depot/dspsw/maor_rom_v20/util/CommonParameters/DerivationEngine.py, revision 2
// namespace {com.csr.cps.4}UnifiedParameterSchema on 2023-12-06 08:48:58 by svc-audio-dspsw
//
// input from EMPTY
// last change  by  on 
// -----------------------------------------------------------------------------
#ifndef __ANC_HW_MANAGER_GEN_C_H__
#define __ANC_HW_MANAGER_GEN_C_H__

#ifndef ParamType
typedef unsigned ParamType;
#endif

// CodeBase IDs
#define ANC_HW_MANAGER_ANC_HW_MANAGER_CAP_ID	0x00D7
#define ANC_HW_MANAGER_ANC_HW_MANAGER_ALT_CAP_ID_0	0x40B8
#define ANC_HW_MANAGER_ANC_HW_MANAGER_SAMPLE_RATE	0
#define ANC_HW_MANAGER_ANC_HW_MANAGER_VERSION_MAJOR	3

// Constant Definitions
#define ANC_HW_MANAGER_CONSTANT_IN_OUT_EAR_CTRL            		0x00000003
#define ANC_HW_MANAGER_CONSTANT_CHANNEL_CTRL               		0x00000004
#define ANC_HW_MANAGER_CONSTANT_FEEDFORWARD_CTRL           		0x00000005
#define ANC_HW_MANAGER_CONSTANT_AMBIENT_CTRL               		0x00000006
#define ANC_HW_MANAGER_CONSTANT_TRIGGER_CTRL               		0x00000007
#define ANC_HW_MANAGER_CONSTANT_FF_COARSE_GAIN_CTRL        		0x0000000A
#define ANC_HW_MANAGER_CONSTANT_FF_FINE_GAIN_CTRL          		0x0000000B
#define ANC_HW_MANAGER_CONSTANT_FB_COARSE_GAIN_CTRL        		0x0000000C
#define ANC_HW_MANAGER_CONSTANT_FB_FINE_GAIN_CTRL          		0x0000000D
#define ANC_HW_MANAGER_CONSTANT_EC_COARSE_GAIN_CTRL        		0x0000000E
#define ANC_HW_MANAGER_CONSTANT_EC_FINE_GAIN_CTRL          		0x0000000F
#define ANC_HW_MANAGER_CONSTANT_RX_FFA_MIX_COARSE_GAIN_CTRL		0x00000010
#define ANC_HW_MANAGER_CONSTANT_RX_FFA_MIX_FINE_GAIN_CTRL  		0x00000011
#define ANC_HW_MANAGER_CONSTANT_RX_FFB_MIX_COARSE_GAIN_CTRL		0x00000012
#define ANC_HW_MANAGER_CONSTANT_RX_FFB_MIX_FINE_GAIN_CTRL  		0x00000013


// Runtime Config Parameter Bitfields
// AHM_CONFIG bits
#define ANC_HW_MANAGER_CONFIG_AHM_CONFIG_DISABLE_ANC_CLOCK_CHECK   		0x00000001
#define ANC_HW_MANAGER_CONFIG_AHM_CONFIG_DISABLE_EAR_CHECK         		0x00000002
#define ANC_HW_MANAGER_CONFIG_AHM_CONFIG_DISABLE_FF_GAIN_ADJUSTMENT		0x00000004
#define ANC_HW_MANAGER_CONFIG_AHM_CONFIG_DISABLE_SOURCE_FF_RAMP    		0x00000010
#define ANC_HW_MANAGER_CONFIG_AHM_CONFIG_DISABLE_SOURCE_FB_RAMP    		0x00000020


// System Mode
#define ANC_HW_MANAGER_SYSMODE_STANDBY          		0
#define ANC_HW_MANAGER_SYSMODE_MUTE_ANC         		1
#define ANC_HW_MANAGER_SYSMODE_FULL             		2
#define ANC_HW_MANAGER_SYSMODE_STATIC           		3
#define ANC_HW_MANAGER_SYSMODE_QUIET            		4
#define ANC_HW_MANAGER_SYSMODE_WINDY            		5
#define ANC_HW_MANAGER_SYSMODE_FILTER_TRANSITION		6
#define ANC_HW_MANAGER_SYSMODE_MAX_MODES        		7

// System Control
#define ANC_HW_MANAGER_CONTROL_MODE_OVERRIDE		0x2000

// In/Out of Ear Status
#define ANC_HW_MANAGER_IN_OUT_EAR_CTRL_IN_EAR 		0x0001
#define ANC_HW_MANAGER_IN_OUT_EAR_CTRL_OUT_EAR		0x0000

// Selected Channel
#define ANC_HW_MANAGER_CHANNEL_ANC0		0x0001
#define ANC_HW_MANAGER_CHANNEL_ANC1		0x0002
#define ANC_HW_MANAGER_CHANNEL_eANC		0x0003

// TRIGGER
#define ANC_HW_MANAGER_TRIGGER_START    		0x0000
#define ANC_HW_MANAGER_TRIGGER_SIMILAR  		0x0001
#define ANC_HW_MANAGER_TRIGGER_DIFFERENT		0x0002

// Selected Path
#define ANC_HW_MANAGER_FEEDFORWARD_PATH_FFA		0x0001
#define ANC_HW_MANAGER_FEEDFORWARD_PATH_FFB		0x0002

// Ambient Control
#define ANC_HW_MANAGER_AMBIENT_CTRL_AANC		0x00000000
#define ANC_HW_MANAGER_AMBIENT_CTRL_AAMB		0x00000001

// Flags
#define ANC_HW_MANAGER_FLAGS_CLOCK_CHECK_STATUS		0x00000001

// ANC FF Coarse Gain

// ANC FF Fine Gain

// ANC FB Coarse Gain

// ANC FB Fine Gain

// ANC EC Coarse Gain

// ANC EC Fine Gain

// ANC Rx FFA Mix  Coarse Gain

// ANC Rx FFA Mix Fine Gain

// ANC Rx FFB Mix Coarse Gain

// ANC Rx FFB Mix Fine Gain

// ANC FF Fine Gain

// Statistics Block
typedef struct _tag_ANC_HW_MANAGER_STATISTICS
{
	ParamType OFFSET_CUR_MODE;
	ParamType OFFSET_OVR_CONTROL;
	ParamType OFFSET_IN_OUT_EAR_CTRL;
	ParamType OFFSET_CHANNEL;
	ParamType OFFSET_TRIGGER;
	ParamType OFFSET_FEEDFORWARD_PATH;
	ParamType OFFSET_AMBIENT_CTRL;
	ParamType OFFSET_FLAGS;
	ParamType OFFSET_FF_COARSE_GAIN_CTRL;
	ParamType OFFSET_FF_FINE_GAIN_CTRL;
	ParamType OFFSET_FF_GAIN_DB;
	ParamType OFFSET_FB_COARSE_GAIN_CTRL;
	ParamType OFFSET_FB_FINE_GAIN_CTRL;
	ParamType OFFSET_FB_GAIN_DB;
	ParamType OFFSET_EC_COARSE_GAIN_CTRL;
	ParamType OFFSET_EC_FINE_GAIN_CTRL;
	ParamType OFFSET_EC_GAIN_DB;
	ParamType OFFSET_RX_FFA_MIX_COARSE_GAIN_CTRL;
	ParamType OFFSET_RX_FFA_MIX_FINE_GAIN_CTRL;
	ParamType OFFSET_RX_FFA_MIX_GAIN_DB;
	ParamType OFFSET_RX_FFB_MIX_COARSE_GAIN_CTRL;
	ParamType OFFSET_RX_FFB_MIX_FINE_GAIN_CTRL;
	ParamType OFFSET_RX_FFB_MIX_GAIN_DB;
	ParamType OFFSET_FF_FINE_GAIN_CTRL_INST1;
}ANC_HW_MANAGER_STATISTICS;

typedef ANC_HW_MANAGER_STATISTICS* LP_ANC_HW_MANAGER_STATISTICS;

// Parameters Block
typedef struct _tag_ANC_HW_MANAGER_PARAMETERS
{
	ParamType OFFSET_AHM_CONFIG;
	ParamType OFFSET_AHM_FF_RAMP_PRIORITY;
	ParamType OFFSET_AHM_FB_RAMP_PRIORITY;
	ParamType OFFSET_MUTE_RAMP_DURATION;
	ParamType OFFSET_QUIET_FF_RAMP_DURATION;
	ParamType OFFSET_QUIET_FB_RAMP_DURATION;
	ParamType OFFSET_WINDY_FF_RAMP_DURATION;
	ParamType OFFSET_WINDY_FB_RAMP_DURATION;
	ParamType OFFSET_FF_RAMP_DURATION;
	ParamType OFFSET_FB_RAMP_DURATION;
	ParamType OFFSET_FB_RAMP_DELAY_TIMER;
	ParamType OFFSET_OVERRIDE_RAMP_DURATION;
	ParamType OFFSET_QUIET_MODE_FF_FINE_GAIN;
	ParamType OFFSET_QUIET_MODE_FB_FINE_GAIN;
	ParamType OFFSET_WINDY_MODE_FF_FINE_GAIN;
	ParamType OFFSET_WINDY_MODE_FB_FINE_GAIN;
	ParamType OFFSET_FAST_RAMP_DOWN_DURATION;
	ParamType OFFSET_FAST_RAMP_UP_DURATION;
	ParamType OFFSET_FAST_MODE_DELAY_DURATION;
	ParamType OFFSET_SLOW_RAMP_DOWN_DURATION;
	ParamType OFFSET_SLOW_RAMP_UP_DURATION;
	ParamType OFFSET_SLOW_MODE_DELAY_DURATION;
	ParamType OFFSET_START_MODE_DELAY_DURATION;
}ANC_HW_MANAGER_PARAMETERS;

typedef ANC_HW_MANAGER_PARAMETERS* LP_ANC_HW_MANAGER_PARAMETERS;

unsigned *ANC_HW_MANAGER_GetDefaults(unsigned capid);

#endif // __ANC_HW_MANAGER_GEN_C_H__
