// -----------------------------------------------------------------------------
// Copyright (c) 2023                  Qualcomm Technologies International, Ltd.
//
// Generated by /home/svc-audio-dspsw/kymera_builds/builds/2023/kymera_2312060823/kalimba/kymera/../../util/CommonParameters/DerivationEngine.py
// code v3.5, file //depot/dspsw/maor_rom_v20/util/CommonParameters/DerivationEngine.py, revision 2
// namespace {com.csr.cps.4}UnifiedParameterSchema on 2023-12-06 09:11:46 by svc-audio-dspsw
//
// input from EMPTY
// last change  by  on 
// -----------------------------------------------------------------------------
#ifndef __WIND_NOISE_DETECT_GEN_C_H__
#define __WIND_NOISE_DETECT_GEN_C_H__

#ifndef ParamType
typedef unsigned ParamType;
#endif

// CodeBase IDs
#define WIND_NOISE_DETECT_WIND_NOISE_DETECT_CAP_ID	0x00DF
#define WIND_NOISE_DETECT_WIND_NOISE_DETECT_ALT_CAP_ID_0	0x40C0
#define WIND_NOISE_DETECT_WIND_NOISE_DETECT_SAMPLE_RATE	16000
#define WIND_NOISE_DETECT_WIND_NOISE_DETECT_VERSION_MAJOR	1

// Constant Definitions
#define WIND_NOISE_DETECT_CONSTANT_INTENSITY_UPDATE_CTRL		0x00000002


// Runtime Config Parameter Bitfields
// WND_CONFIG bits
#define WIND_NOISE_DETECT_CONFIG_WND_CONFIG_2MIC_ONLY		0x00000001


// System Mode
#define WIND_NOISE_DETECT_SYSMODE_STANDBY		0
#define WIND_NOISE_DETECT_SYSMODE_1MIC   		2
#define WIND_NOISE_DETECT_SYSMODE_2MIC   		3
#define WIND_NOISE_DETECT_SYSMODE_MAX_MODES		4

// System Control
#define WIND_NOISE_DETECT_CONTROL_MODE_OVERRIDE		0x2000

// Detection
#define WIND_NOISE_DETECT_DETECTION_1MIC_WIND		0x00000001
#define WIND_NOISE_DETECT_DETECTION_2MIC_WIND		0x00000002

// Intensity
#define WIND_NOISE_DETECT_INTENSITY_NONE  		0x00000000
#define WIND_NOISE_DETECT_INTENSITY_LOW   		0x00000001
#define WIND_NOISE_DETECT_INTENSITY_MEDIUM		0x00000002
#define WIND_NOISE_DETECT_INTENSITY_HIGH  		0x00000003

// Event State
#define WIND_NOISE_DETECT_EVENT_STATE_RELEASE        		0x00000000
#define WIND_NOISE_DETECT_EVENT_STATE_ATTACK_COUNT   		0x00000001
#define WIND_NOISE_DETECT_EVENT_STATE_ATTACK_MESSAGE 		0x00000002
#define WIND_NOISE_DETECT_EVENT_STATE_ATTACK         		0x00000003
#define WIND_NOISE_DETECT_EVENT_STATE_RELEASE_COUNT  		0x00000004
#define WIND_NOISE_DETECT_EVENT_STATE_RELEASE_MESSAGE		0x00000005

// Statistics Block
typedef struct _tag_WIND_NOISE_DETECT_STATISTICS
{
	ParamType OFFSET_CUR_MODE;
	ParamType OFFSET_OVR_CONTROL;
	ParamType OFFSET_POWER;
	ParamType OFFSET_DETECTION;
	ParamType OFFSET_INTENSITY;
	ParamType OFFSET_EVENT_STATE;
}WIND_NOISE_DETECT_STATISTICS;

typedef WIND_NOISE_DETECT_STATISTICS* LP_WIND_NOISE_DETECT_STATISTICS;

// Parameters Block
typedef struct _tag_WIND_NOISE_DETECT_PARAMETERS
{
	ParamType OFFSET_WND_CONFIG;
	ParamType OFFSET_1MIC_FILTER_ATTACK;
	ParamType OFFSET_1MIC_FILTER_DECAY;
	ParamType OFFSET_1MIC_THRESHOLD;
	ParamType OFFSET_1MIC_MESSAGE_ATTACK;
	ParamType OFFSET_1MIC_MESSAGE_RELEASE;
	ParamType OFFSET_2MIC_FILTER_ATTACK;
	ParamType OFFSET_2MIC_FILTER_DECAY;
	ParamType OFFSET_2MIC_THRESHOLD;
	ParamType OFFSET_2MIC_MESSAGE_ATTACK;
	ParamType OFFSET_2MIC_MESSAGE_RELEASE;
	ParamType OFFSET_POWER_THRESHOLD;
	ParamType OFFSET_POWER_ENVELOPE_TIME;
	ParamType OFFSET_POWER_ATTACK_TIME;
	ParamType OFFSET_MED_WIND_THRESHOLD;
	ParamType OFFSET_HIGH_WIND_THRESHOLD;
	ParamType OFFSET_MED_REL_WIND_THRESHOLD;
	ParamType OFFSET_HIGH_REL_WIND_THRESHOLD;
	ParamType OFFSET_LOW_WIND_FF_RAMP_DURATION;
	ParamType OFFSET_LOW_WIND_FB_RAMP_DURATION;
	ParamType OFFSET_LOW_WIND_FF_FINE_GAIN;
	ParamType OFFSET_LOW_WIND_FB_FINE_GAIN;
	ParamType OFFSET_MEDIUM_WIND_FF_RAMP_DURATION;
	ParamType OFFSET_MEDIUM_WIND_FB_RAMP_DURATION;
	ParamType OFFSET_MEDIUM_WIND_FF_FINE_GAIN;
	ParamType OFFSET_MEDIUM_WIND_FB_FINE_GAIN;
	ParamType OFFSET_HIGH_WIND_FF_RAMP_DURATION;
	ParamType OFFSET_HIGH_WIND_FB_RAMP_DURATION;
	ParamType OFFSET_HIGH_WIND_FF_FINE_GAIN;
	ParamType OFFSET_HIGH_WIND_FB_FINE_GAIN;
}WIND_NOISE_DETECT_PARAMETERS;

typedef WIND_NOISE_DETECT_PARAMETERS* LP_WIND_NOISE_DETECT_PARAMETERS;

unsigned *WIND_NOISE_DETECT_GetDefaults(unsigned capid);

#endif // __WIND_NOISE_DETECT_GEN_C_H__
