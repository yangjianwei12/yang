@startuml inline_umlgraph_1.png
    note "For clarity not all state transitions shown" as N1
    note "For clarity TERMINATING substate is not shown in all parent states" as N2
    note top of STARTUP
      _IDLE is any of the idle states
        IN_CASE_IDLE
        OUT_OF_CASE_IDLE
        IN_EAR_IDLE
    end note

    [*] -down-> INITIALISING : Power On
    INITIALISING : App module and library init
    INITIALISING --> DFU_CHECK : Init Complete

    DFU_CHECK : Is DFU in progress?
    DFU_CHECK --> STARTUP : No DFU in progress

    STARTUP : Check for paired peer earbud
    STARTUP : Attempt peer synchronisation
    STARTUP : After attempt go to _IDLE
    STARTUP --> PEER_PAIRING : No paired peer

    FACTORY_RESET : Disconnect links, deleting all pairing, reboot
    FACTORY_RESET : Only entered from _IDLE
    FACTORY_RESET -r-> INITIALISING : Reboot

    HANDSET_PAIRING : Pair with handset
    HANDSET_PAIRING : Return to _IDLE state

    state IN_CASE #LightBlue {
        IN_CASE : Charger Active
        IN_CASE : Buttons Disabled
        DFU : Device Upgrade
        DFU --> IN_CASE_IDLE #LightGreen : DFU Complete
        DFU_CHECK --> DFU : DFU in progress
        IN_CASE_IDLE : May have BT connection(s)
        IN_CASE_IDLE -up-> DFU : Start DFU
        IN_CASE_IDLE : Start dormant timer
    }

    state OUT_OF_CASE #LightBlue {
        OUT_OF_CASE_IDLE : May have BT connection(s)
        OUT_OF_CASE_IDLE : Start dormant timer
        OUT_OF_CASE_SOPORIFIC : Allow sleep
        OUT_OF_CASE_SOPORIFIC_TERMINATING : Disconnect links
        OUT_OF_CASE_SOPORIFIC_TERMINATING : Inform power prepared to sleep
        OUT_OF_CASE_IDLE #LightGreen --> IN_CASE_IDLE : In Case
        IN_CASE_IDLE --> OUT_OF_CASE_IDLE : Out of Case
        OUT_OF_CASE_IDLE -u-> OUT_OF_CASE_SOPORIFIC : Idle timeout
        OUT_OF_CASE_SOPORIFIC -->  OUT_OF_CASE_SOPORIFIC_TERMINATING : POWER_SLEEP_PREPARE_IND
        OUT_OF_CASE_IDLE --> HANDSET_PAIRING : User or Auto pairing
        OUT_OF_CASE_BUSY : Earbud removed from ear
        OUT_OF_CASE_BUSY : Audio still playing
        OUT_OF_CASE_BUSY #LightGreen --> OUT_OF_CASE_IDLE : Out of ear audio timeout
        OUT_OF_CASE_BUSY --> OUT_OF_CASE_IDLE : Audio Inactive
    }

    state IN_EAR #LightBlue {
        IN_EAR_IDLE : May have BT connection(s)
        IN_EAR_IDLE #LightGreen -l-> OUT_OF_CASE_IDLE : Out of Ear
        IN_EAR_IDLE -u-> IN_EAR_BUSY : Audio Active
        OUT_OF_CASE_IDLE --> IN_EAR_IDLE : In Ear
        IN_EAR_BUSY : Streaming Audio Active (A2DP or SCO)
        IN_EAR_BUSY : Tones audio available in other states
        IN_EAR_BUSY #LightGreen -d-> IN_EAR_IDLE : Audio Inactive
        IN_EAR_BUSY -l-> OUT_OF_CASE_BUSY : Out of Ear
        OUT_OF_CASE_BUSY -l-> IN_EAR_BUSY : In Ear
        IN_EAR_IDLE --> HANDSET_PAIRING : User or Auto pairing
    }
@enduml
@startuml inline_umlgraph_2.png
    note "For clarity not all state transitions shown" as N1
    note "For clarity TERMINATING substate is not shown in all parent states" as N2
    note top of STARTUP
      _IDLE is any of the idle states
        IN_CASE_IDLE
        OUT_OF_CASE_IDLE
        IN_EAR_IDLE
    end note

    [*] -down-> INITIALISING : Power On
    INITIALISING : App module and library init
    INITIALISING --> DFU_CHECK : Init Complete

    DFU_CHECK : Is DFU in progress?
    DFU_CHECK --> STARTUP : No DFU in progress

    STARTUP : Check for paired peer earbud
    STARTUP : Attempt peer synchronisation
    STARTUP : After attempt go to _IDLE
    STARTUP --> PEER_PAIRING : No paired peer

    FACTORY_RESET : Disconnect links, deleting all pairing, reboot
    FACTORY_RESET : Only entered from _IDLE
    FACTORY_RESET -r-> INITIALISING : Reboot

    HANDSET_PAIRING : Pair with handset
    HANDSET_PAIRING : Return to _IDLE state

    state IN_CASE #LightBlue {
        IN_CASE : Charger Active
        IN_CASE : Buttons Disabled
        DFU : Device Upgrade
        DFU --> IN_CASE_IDLE #LightGreen : DFU Complete
        DFU_CHECK --> DFU : DFU in progress
        IN_CASE_IDLE : May have BT connection(s)
        IN_CASE_IDLE -up-> DFU : Start DFU
        IN_CASE_IDLE : Start dormant timer
    }

    state OUT_OF_CASE #LightBlue {
        OUT_OF_CASE_IDLE : May have BT connection(s)
        OUT_OF_CASE_IDLE : Start dormant timer
        OUT_OF_CASE_SOPORIFIC : Allow sleep
        OUT_OF_CASE_SOPORIFIC_TERMINATING : Disconnect links
        OUT_OF_CASE_SOPORIFIC_TERMINATING : Inform power prepared to sleep
        OUT_OF_CASE_IDLE #LightGreen --> IN_CASE_IDLE : In Case
        IN_CASE_IDLE --> OUT_OF_CASE_IDLE : Out of Case
        OUT_OF_CASE_IDLE -u-> OUT_OF_CASE_SOPORIFIC : Idle timeout
        OUT_OF_CASE_SOPORIFIC -->  OUT_OF_CASE_SOPORIFIC_TERMINATING : POWER_SLEEP_PREPARE_IND
        OUT_OF_CASE_IDLE --> HANDSET_PAIRING : User or Auto pairing
        OUT_OF_CASE_BUSY : Earbud removed from ear
        OUT_OF_CASE_BUSY : Audio still playing
        OUT_OF_CASE_BUSY #LightGreen --> OUT_OF_CASE_IDLE : Out of ear audio timeout
        OUT_OF_CASE_BUSY --> OUT_OF_CASE_IDLE : Audio Inactive
    }

    state IN_EAR #LightBlue {
        IN_EAR_IDLE : May have BT connection(s)
        IN_EAR_IDLE #LightGreen -l-> OUT_OF_CASE_IDLE : Out of Ear
        IN_EAR_IDLE -u-> IN_EAR_BUSY : Audio Active
        OUT_OF_CASE_IDLE --> IN_EAR_IDLE : In Ear
        IN_EAR_BUSY : Streaming Audio Active (A2DP or SCO)
        IN_EAR_BUSY : Tones audio available in other states
        IN_EAR_BUSY #LightGreen -d-> IN_EAR_IDLE : Audio Inactive
        IN_EAR_BUSY -l-> OUT_OF_CASE_BUSY : Out of Ear
        OUT_OF_CASE_BUSY -l-> IN_EAR_BUSY : In Ear
        IN_EAR_IDLE --> HANDSET_PAIRING : User or Auto pairing
    }
@enduml
@startuml inline_umlgraph_3.png
            class init << (T,Green) >> #paleGreen {
                Initialise the application
                ....
                Initialises all other modules
                at startup
            }
            class led << (T,lightblue) >> {
                Manages the LEDs
                }
            class hfp << (T,lightblue) >> #Orange {
                Manages HFP connections
                }
            class ui << (T,lightblue) >> #Orange {
                Manages the UI
                }
            class sm << (T,lightblue) >> #lightBlue {
                Main application state machine
                }
            class link_policy << (T,lightblue) >> {
                Manages the device link policy settings
                }
            class av << (T,lightblue) >> #Orange {
                Manages A2DP and AVRCP connections
                }
            class charger << (T,lightblue) >> {
                Manages the charger
                }
            class battery << (T,lightblue) >> {
                Manages the battery status
                }
            class temperature << (T,lightblue) >> {
                Temperature measurement
                }
            class power << (T,lightblue) >> #Orange {
                Manages power, shutdown, sleep
                }
            class pairing << (T,lightblue) >> #Orange {
                Manages peer and handset pairing
                }
            class scanning << (T,lightblue) >> {
                Manages the device scanning state
                }
            class device << (T,lightblue) >> {
                Paired devices database
                }
            class con_manager << (T,lightblue) >> {
                Manages the device connection state machine
                }
            class peer_sig << (T,lightblue) >> {
                Manages peer signalling messages
                }
            class handset_sig << (T,lightblue) >> {
                Manages the handset signalling messages
                }
            class phy_state << (T,lightblue) >> #Orange {
                Manages physcial state of the Earbud
                }
            class kymera << (T,lightblue) >> {
                Manages the audio subsystem
                }
            class upgrade << (T,red) >> #lightGrey {
                Manages the device upgrade
                }
            class proximity << (T,lightblue) >> {
                Manages the proximity sensor
                }
            class accelerometer << (T,lightblue) >> {
                Manages the accelerometer
                }
            class rules << (.,red) >> #yellow {
                Application rules engine
                }
            class chains << (.,red) >> #pink {
                User defined audio chains
                }
            class buttons << (.,red) >> #pink {
                User defined button inputs
                }
            class peer_sync << (T,lightblue) >> {
                Peer Earbud state synchronisation
                }
            class scofwd << (T,lightblue) >> {
                SCO and MIC forwarding
                }

            class A << (T,lightblue) >> {
            }

            class B << (T,lightblue) >> {
            }

            init -[hidden]right->upgrade
            upgrade -[hidden]right->device
                        device -[hidden]right-> A
                        A -[hidden]d-> charger

                        A -right-> B : Function Call
                        A -right[#blue]-> B : Registered Event
                        A <-right[#green]-> B : Function and Registered Event

                        rules-d[#blue]->sm : Actions
                        sm -u-> rules : Events
                        chains-l->kymera
                        buttons-l->ui

                        ' Physical Inputs
                        temperature -d[#blue]-> power : temperature status
                        temperature -r[#blue]-> charger : temperature status
                        charger -d[#blue]-> phy_state : charger status (in/out case)
                        'charger -[hidden]r->accelerometer
                        battery -[hidden]r->temperature
                        charger -d[#blue]-> power : charger status
                        battery -d[#blue]-> power : battery status
                        proximity -d[#blue]-> phy_state : in/out ear
                        proximity -[hidden]r->accelerometer
                        accelerometer -d[#blue]-> phy_state :  motion status
                        power -d[#blue]-> sm : power events
                        phy_state -d[#blue]-> sm : phy state
                        phy_state -[#blue]-> handset_sig : phy state

                        'UI control
                        sm -r-> ui : ui indications
                        ui -u-> led : enable/disable
                        ui -d-> kymera : tones

                        'Registered con_manager tasks
                        con_manager -[#blue]> sm : con status
                        con_manager -r[hidden]-> link_policy
                        av <-[#green]-> con_manager : con/dis/status
                        hfp <-[#green]-> con_manager : con/dis/status
                        peer_sig -r-> con_manager : con/dis

                        sm -l-> pairing : Pair handset and earbud
                        pairing -d-> scanning : enable/disable
                        sm -d-> scanning : enable/disable

                        sm <-d[#green]-> hfp : con/dis/status
                        hfp -d[#blue]-> scofwd : hfp status
                        scofwd -r-> kymera : voice call
                        hfp <-u[#green]-> handset_sig : con/dis/sig
                        hfp -d-> link_policy

                        sm <-d[#green]-> av : con/dis/status
                        av <-u[#green]-> handset_sig : con/dis/sig
                        av -d-> link_policy
                        av -r-> kymera : stereo music

                        peer_sig -d[#blue]-> sm
                        peer_sig -u-> scanning : enable/disable

                        peer_sync -r[hidden]-> pairing
                        peer_sync -r[#blue]->sm : sync status
                        peer_sync <-d[#green]-> peer_sig : peer sync sig

                        sm -d-> scofwd : con/dis
                        scofwd -l-> peer_sig : scofwd sig
                        scofwd -u-> link_policy
@enduml
